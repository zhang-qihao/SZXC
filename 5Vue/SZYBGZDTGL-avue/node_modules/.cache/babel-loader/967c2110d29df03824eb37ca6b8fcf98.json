{"remainingRequest":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\store\\modules\\dict.js","dependencies":[{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\store\\modules\\dict.js","mtime":1657525258199},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { setStore, getStore } from '@/util/store';\nimport eframe from \"@/util/eframe\";\nimport constData from \"../../const\";\nvar dict = {\n  state: {\n    dictMap: getStore({\n      name: 'dictMap'\n    }) || {}\n  },\n  actions: {\n    //读取字典\n    LoadDicItem: function LoadDicItem(_ref, _ref2) {\n      var state = _ref.state,\n          commit = _ref.commit;\n      var dicId = _ref2.dicId,\n          dicListGroup = _ref2.dicListGroup,\n          language = _ref2.language,\n          catchFlag = _ref2.catchFlag;\n      return new Promise(function (resolve, reject) {\n        if (eframe.isNull(dicId)) {\n          eframe.alertError(\"LoadDicItem参数错误，dicId不可以为空！\");\n          return;\n        }\n\n        if (eframe.isNull(dicListGroup)) {\n          dicListGroup = \"\";\n        }\n\n        if (eframe.isNull(language)) {\n          language = \"1\";\n        }\n\n        var id = \"EF_DIC_\" + dicId + \"_\" + dicListGroup + \"_\" + language;\n\n        if (catchFlag === true) {\n          if (state.dictMap[id]) {\n            //从缓存中取出\n            var dictStr = state.dictMap[id];\n            var items = JSON.parse(dictStr);\n            resolve(items);\n            return;\n          }\n        }\n\n        var url = \"/wechat/common/dictionary.action\";\n        var form = {\n          dicId: dicId,\n          dicListGroup: dicListGroup,\n          language: language\n        };\n        var actionFunName = \"loadDicItem\";\n\n        var callbackFun = function callbackFun(data) {\n          if (eframe.isNotNull(data) && data.length > 0) {\n            commit('ADD_DICT', {\n              id: id,\n              dictList: data\n            });\n            resolve(data);\n          }\n        };\n\n        var errorFun = function errorFun(data) {\n          reject(\"未找到数据字典配置信息 dicId:\" + dicId);\n        };\n\n        eframe.submitTargetForm({\n          url: url,\n          form: form,\n          actionFunName: actionFunName,\n          succFun: callbackFun,\n          failFun: errorFun\n        });\n      });\n    }\n  },\n  mutations: {\n    ADD_DICT: function ADD_DICT(state, _ref3) {\n      var id = _ref3.id,\n          dictList = _ref3.dictList;\n      var dictStr = JSON.stringify(dictList);\n      state.dictMap[id] = dictStr;\n      setStore({\n        name: 'dictMap',\n        content: state.dictMap\n      });\n    },\n    CLEAR_ALL_DICT: function CLEAR_ALL_DICT(state) {\n      state.dictMap = {};\n      setStore({\n        name: 'dictMap',\n        content: state.dictMap\n      });\n    },\n    CLEAR_DICT: function CLEAR_DICT(state, _ref4) {\n      var id = _ref4.id;\n      delete state.dictMap[id];\n      setStore({\n        name: 'dictMap',\n        content: state.dictMap\n      });\n    }\n  }\n};\nexport default dict;",{"version":3,"sources":["C:/Users/10415/Desktop/0工程/5Vue/SZYBGZDTGL-avue/src/store/modules/dict.js"],"names":["setStore","getStore","eframe","constData","dict","state","dictMap","name","actions","LoadDicItem","commit","dicId","dicListGroup","language","catchFlag","Promise","resolve","reject","isNull","alertError","id","dictStr","items","JSON","parse","url","form","actionFunName","callbackFun","data","isNotNull","length","dictList","errorFun","submitTargetForm","succFun","failFun","mutations","ADD_DICT","stringify","content","CLEAR_ALL_DICT","CLEAR_DICT"],"mappings":"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","sourcesContent":["import { setStore, getStore } from '@/util/store'\r\nimport eframe from \"@/util/eframe\";\r\nimport constData from \"../../const\";\r\n\r\nconst dict = {\r\n    state: {\r\n        dictMap: getStore({ name: 'dictMap' })||{},\r\n    },\r\n    actions: {\r\n\r\n        //读取字典\r\n        LoadDicItem ({ state,commit }, { dicId, dicListGroup, language,  catchFlag}) {\r\n            return new Promise((resolve, reject)  => {\r\n                if(eframe.isNull(dicId)){\r\n                    eframe.alertError(\"LoadDicItem参数错误，dicId不可以为空！\");\r\n                    return;\r\n                }\r\n                if(eframe.isNull(dicListGroup)){\r\n                    dicListGroup = \"\";\r\n                }\r\n                if(eframe.isNull(language)){\r\n                    language = \"1\";\r\n                }\r\n\r\n                let id = \"EF_DIC_\"+dicId+\"_\"+dicListGroup+\"_\"+language;\r\n                if(catchFlag===true){\r\n                    if (state.dictMap[id]) { //从缓存中取出\r\n                        let dictStr = state.dictMap[id];\r\n                        let items = JSON.parse(dictStr);\r\n                        resolve(items);\r\n                        return;\r\n                    }\r\n                }\r\n                let url = \"/wechat/common/dictionary.action\";\r\n                let form={\r\n                    dicId:dicId,\r\n                    dicListGroup:dicListGroup,\r\n                    language:language,\r\n                };\r\n\r\n\r\n\r\n                let actionFunName=\"loadDicItem\";\r\n                let callbackFun = function (data) {\r\n                    if(eframe.isNotNull(data) && data.length > 0) {\r\n                        commit('ADD_DICT', {id:id,dictList:data});\r\n                        resolve( data );\r\n                    }\r\n                };\r\n                let errorFun = function (data) {\r\n                    reject(\"未找到数据字典配置信息 dicId:\"+dicId);\r\n                };\r\n                eframe.submitTargetForm({\r\n                    url:url,form:form,actionFunName:actionFunName,succFun:callbackFun,failFun:errorFun});\r\n            });\r\n        },\r\n    },\r\n    mutations: {\r\n\r\n        ADD_DICT: (state, { id, dictList }) => {\r\n            let dictStr = JSON.stringify(dictList);\r\n            state.dictMap[id]=dictStr;\r\n            setStore({ name: 'dictMap', content: state.dictMap })\r\n        },\r\n\r\n        CLEAR_ALL_DICT: (state) => {\r\n            state.dictMap = {};\r\n            setStore({ name: 'dictMap', content: state.dictMap })\r\n        },\r\n\r\n        CLEAR_DICT: (state,{ id }) => {\r\n            delete state.dictMap[id];\r\n            setStore({ name: 'dictMap', content: state.dictMap })\r\n        },\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nexport default dict;"]}]}