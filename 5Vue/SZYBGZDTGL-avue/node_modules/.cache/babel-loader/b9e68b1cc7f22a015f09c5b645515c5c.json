{"remainingRequest":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-bootstrap-comps\\BaseBlock.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-bootstrap-comps\\BaseBlock.vue","mtime":1640694382254},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"E:/\\u5174\\u624Dsvn\\u5E73\\u53F0/01\\u82CF\\u5DDE\\u533B\\u4FDD\\u5C40/88\\u82CF\\u5DDE\\u533B\\u4FDD\\u4E2D\\u5FC3\\u5C97\\u4F4D\\u804C\\u8D23\\u52A8\\u6001\\u7BA1\\u7406\\u7CFB\\u7EDF\\uFF08SZYBGZDTGL\\uFF09/0\\u5DE5\\u7A0B/5Vue/SZYBGZDTGL-avue/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: 'BaseBlock',\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n      description: 'The HTML tag of the component (div, a)'\n    },\n    title: {\n      type: String,\n      description: 'The title of the block'\n    },\n    subtitle: {\n      type: String,\n      description: 'The subtitle of the block'\n    },\n    bordered: {\n      type: Boolean,\n      default: false,\n      description: 'Bordered block style'\n    },\n    rounded: {\n      type: Boolean,\n      default: false,\n      description: 'Rounded block style'\n    },\n    themed: {\n      type: Boolean,\n      default: false,\n      description: 'Themed block style'\n    },\n    transparent: {\n      type: Boolean,\n      default: false,\n      description: 'Transparent block style'\n    },\n    fxShadow: {\n      type: Boolean,\n      default: false,\n      description: 'Shadow fx block style'\n    },\n    fxPop: {\n      type: Boolean,\n      default: false,\n      description: 'Pop fx block style'\n    },\n    fxRotateRight: {\n      type: Boolean,\n      default: false,\n      description: 'Rotate right fx block style'\n    },\n    fxRotateLeft: {\n      type: Boolean,\n      default: false,\n      description: 'Rotate left fx block style'\n    },\n    linkShadow: {\n      type: Boolean,\n      default: false,\n      description: 'Shadow style for block links'\n    },\n    linkPop: {\n      type: Boolean,\n      default: false,\n      description: 'Pop style for block links'\n    },\n    linkRotate: {\n      type: Boolean,\n      default: false,\n      description: 'Rotate style for block links'\n    },\n    headerClass: {\n      type: String,\n      description: 'Add additional classes to default block-header'\n    },\n    optionsClass: {\n      type: String,\n      description: 'Add additional classes to default block-options'\n    },\n    contentClass: {\n      type: String,\n      description: 'Add additional classes to default block-content'\n    },\n    headerBg: {\n      type: Boolean,\n      default: false,\n      description: 'Add the default header background'\n    },\n    headerRtl: {\n      type: Boolean,\n      default: false,\n      description: 'Reverse the order of elements in header'\n    },\n    contentFull: {\n      type: Boolean,\n      default: false,\n      description: 'Add full padding to the bottom of the default block-content'\n    },\n    ribbon: {\n      type: [Boolean, String],\n      default: false,\n      description: 'Enable the ribbon or enable it and also specify its content by setting a string value.'\n    },\n    ribbonLeft: {\n      type: Boolean,\n      default: false,\n      description: 'Position ribbon to the left'\n    },\n    ribbonBottom: {\n      type: Boolean,\n      default: false,\n      description: 'Position ribbon to the bottom'\n    },\n    ribbonBookmark: {\n      type: Boolean,\n      default: false,\n      description: 'Set the bookmark type to your ribbon'\n    },\n    ribbonModern: {\n      type: Boolean,\n      default: false,\n      description: 'Set the modern type to your ribbon'\n    },\n    ribbonVariant: {\n      type: String,\n      default: 'primary',\n      description: 'Set a different ribbon variant (primary, info, warning, danger, success, glass)'\n    },\n    modeLoading: {\n      type: Boolean,\n      default: false,\n      description: 'Loading block mode'\n    },\n    modeFullscreen: {\n      type: Boolean,\n      default: false,\n      description: 'Fullscreen block mode'\n    },\n    modePinned: {\n      type: Boolean,\n      default: false,\n      description: 'Pinned block mode'\n    },\n    modeContentHide: {\n      type: Boolean,\n      default: false,\n      description: 'Hide block’s content'\n    },\n    modeHide: {\n      type: Boolean,\n      default: false,\n      description: 'Hide block itself'\n    },\n    btnOptionFullscreen: {\n      type: Boolean,\n      defaul: false,\n      description: 'Enable the fullscreen mode button'\n    },\n    btnOptionPinned: {\n      type: Boolean,\n      defaul: false,\n      description: 'Enable the pinned mode button'\n    },\n    btnOptionContent: {\n      type: Boolean,\n      defaul: false,\n      description: 'Enable the content toggle button'\n    },\n    btnOptionClose: {\n      type: Boolean,\n      defaul: false,\n      description: 'Enable the close mode button'\n    }\n  },\n  data: function data() {\n    return {\n      // If the block is in loading mode\n      optionLoading: this.modeLoading,\n      // If the block is in fullscreen mode\n      optionFullscreen: this.modeFullscreen,\n      // If the block is in pinned mode\n      optionPinned: this.modePinned,\n      // If the default block-content is hidden\n      optionContentHide: this.modeContentHide,\n      // If block itself is hidden\n      optionHide: this.modeHide\n    };\n  },\n  computed: {\n    classContainer: function classContainer() {\n      return {\n        'block-bordered': this.bordered,\n        'block-rounded': this.rounded,\n        'block-themed': this.themed,\n        'block-transparent': this.transparent,\n        'block-fx-shadow': this.fxShadow,\n        'block-fx-pop': this.fxPop,\n        'block-fx-rotate-right': this.fxRotateRight,\n        'block-fx-rotate-left': this.fxRotateLeft,\n        'block-link-shadow': this.linkShadow,\n        'block-link-pop': this.linkPop,\n        'block-link-rotate': this.linkRotate,\n        'block-mode-loading': this.optionLoading,\n        'block-mode-fullscreen': this.optionFullscreen,\n        'block-mode-pinned': this.optionPinned,\n        'block-mode-hidden': this.optionContentHide,\n        'd-none': this.optionHide\n      };\n    },\n    classContainerHeader: function classContainerHeader() {\n      return _defineProperty({\n        'block-header-default': this.headerBg,\n        'block-header-rtl': this.headerRtl\n      }, this.headerClass, this.headerClass);\n    },\n    classContainerOptions: function classContainerOptions() {\n      return _defineProperty({}, this.optionsClass, this.optionsClass);\n    },\n    classContainerContent: function classContainerContent() {\n      var _ref3;\n\n      return _ref3 = {\n        'block-content-full': this.contentFull,\n        'ribbon': this.ribbon,\n        'ribbon-left': this.ribbon && this.ribbonLeft,\n        'ribbon-bottom': this.ribbon && this.ribbonBottom,\n        'ribbon-bookmark': this.ribbon && this.ribbonBookmark,\n        'ribbon-modern': this.ribbon && this.ribbonModern\n      }, _defineProperty(_ref3, \"ribbon-\".concat(this.ribbonVariant), this.ribbon && this.ribbonVariant), _defineProperty(_ref3, this.contentClass, this.contentClass), _ref3;\n    }\n  },\n  methods: {\n    fullscreenToggle: function fullscreenToggle() {\n      this.optionPinned = false;\n      this.optionFullscreen = !this.optionFullscreen;\n    },\n    fullscreenOn: function fullscreenOn() {\n      this.optionPinned = false;\n      this.optionFullscreen = true;\n    },\n    fullscreenOff: function fullscreenOff() {\n      this.optionPinned = false;\n      this.optionFullscreen = false;\n    },\n    pinnedToggle: function pinnedToggle() {\n      this.optionFullscreen = false;\n      this.optionPinned = !this.optionPinned;\n    },\n    pinnedOn: function pinnedOn() {\n      this.optionFullscreen = false;\n      this.optionPinned = true;\n    },\n    pinnedOff: function pinnedOff() {\n      this.optionFullscreen = false;\n      this.optionPinned = false;\n    },\n    contentToggle: function contentToggle() {\n      this.optionContentHide = !this.optionContentHide;\n    },\n    contentShow: function contentShow() {\n      this.optionContentHide = false;\n    },\n    contentHide: function contentHide() {\n      this.optionContentHide = true;\n    },\n    stateToggle: function stateToggle() {\n      this.optionLoading = !this.optionLoading;\n    },\n    stateLoading: function stateLoading() {\n      this.optionLoading = true;\n    },\n    stateNormal: function stateNormal() {\n      this.optionLoading = false;\n    },\n    open: function open() {\n      this.optionHide = false;\n    },\n    close: function close() {\n      this.optionHide = true;\n    }\n  }\n};",{"version":3,"sources":["BaseBlock.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <component\r\n    :is=\"tag\"\r\n    :href=\"tag === 'a' ? '#' : false\"\r\n    :class=\"classContainer\"\r\n    class=\"block\"\r\n  >\r\n    <div class=\"block-header\" v-if=\"$slots.header || $slots.title || title\" :class=\"classContainerHeader\">\r\n<!--      <slot name=\"header\">-->\r\n        <h3 class=\"block-title\">\r\n          <slot name=\"title\"></slot>\r\n          {{ title }} <small v-if=\"subtitle\">{{ subtitle }}</small>\r\n          <slot name=\"subtitle\"></slot>\r\n        </h3>\r\n        <div class=\"block-options\" v-if=\"$slots.options || btnOptionFullscreen || btnOptionPinned || btnOptionContent || btnOptionClose\" :class=\"classContainerOptions\">\r\n          <slot name=\"options\"></slot>\r\n          <button type=\"button\" class=\"btn-block-option\" @click=\"fullscreenToggle\" v-if=\"btnOptionFullscreen\">\r\n            <i :class=\"{'si si-size-fullscreen': !optionFullscreen, 'si si-size-actual': optionFullscreen}\"></i>\r\n          </button>\r\n          <button type=\"button\" class=\"btn-block-option\" @click=\"pinnedToggle\" v-if=\"btnOptionPinned\">\r\n            <i class=\"si si-pin\"></i>\r\n          </button>\r\n          <button type=\"button\" class=\"btn-block-option\" @click=\"contentToggle\" v-if=\"btnOptionContent\">\r\n            <i :class=\"{'si si-arrow-up': !optionContentHide, 'si si-arrow-down': optionContentHide}\"></i>\r\n          </button>\r\n          <button type=\"button\" class=\"btn-block-option\" @click=\"close\" v-if=\"btnOptionClose\">\r\n            <i class=\"si si-close\"></i>\r\n          </button>\r\n        </div>\r\n<!--      </slot>-->\r\n    </div>\r\n    <div v-if=\"!$slots.content\" class=\"block-content\" :class=\"classContainerContent\">\r\n      <div v-if=\"this.ribbon\" class=\"ribbon-box\">\r\n        <slot name=\"ribbon\">\r\n          {{ ribbon }}\r\n        </slot>\r\n      </div>\r\n      <slot></slot>\r\n    </div>\r\n    <slot name=\"content\"></slot>\r\n  </component>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters} from \"vuex\";\r\nexport default {\r\n  name: 'BaseBlock',\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: 'div',\r\n      description: 'The HTML tag of the component (div, a)'\r\n    },\r\n    title: {\r\n      type: String,\r\n      description: 'The title of the block'\r\n    },\r\n    subtitle: {\r\n      type: String,\r\n      description: 'The subtitle of the block'\r\n    },\r\n    bordered: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Bordered block style'\r\n    },\r\n    rounded: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Rounded block style'\r\n    },\r\n    themed: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Themed block style'\r\n    },\r\n    transparent: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Transparent block style'\r\n    },\r\n    fxShadow: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Shadow fx block style'\r\n    },\r\n    fxPop: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Pop fx block style'\r\n    },\r\n    fxRotateRight: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Rotate right fx block style'\r\n    },\r\n    fxRotateLeft: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Rotate left fx block style'\r\n    },\r\n    linkShadow: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Shadow style for block links'\r\n    },\r\n    linkPop: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Pop style for block links'\r\n    },\r\n    linkRotate: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Rotate style for block links'\r\n    },\r\n    headerClass: {\r\n      type: String,\r\n      description: 'Add additional classes to default block-header'\r\n    },\r\n    optionsClass: {\r\n      type: String,\r\n      description: 'Add additional classes to default block-options'\r\n    },\r\n    contentClass: {\r\n      type: String,\r\n      description: 'Add additional classes to default block-content'\r\n    },\r\n    headerBg: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Add the default header background'\r\n    },\r\n    headerRtl: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Reverse the order of elements in header'\r\n    },\r\n    contentFull: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Add full padding to the bottom of the default block-content'\r\n    },\r\n    ribbon: {\r\n      type: [Boolean, String],\r\n      default: false,\r\n      description: 'Enable the ribbon or enable it and also specify its content by setting a string value.'\r\n    },\r\n    ribbonLeft: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Position ribbon to the left'\r\n    },\r\n    ribbonBottom: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Position ribbon to the bottom'\r\n    },\r\n    ribbonBookmark: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Set the bookmark type to your ribbon'\r\n    },\r\n    ribbonModern: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Set the modern type to your ribbon'\r\n    },\r\n    ribbonVariant: {\r\n      type: String,\r\n      default: 'primary',\r\n      description: 'Set a different ribbon variant (primary, info, warning, danger, success, glass)'\r\n    },\r\n    modeLoading: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Loading block mode'\r\n    },\r\n    modeFullscreen: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Fullscreen block mode'\r\n    },\r\n    modePinned: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Pinned block mode'\r\n    },\r\n    modeContentHide: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Hide block’s content'\r\n    },\r\n    modeHide: {\r\n      type: Boolean,\r\n      default: false,\r\n      description: 'Hide block itself'\r\n    },\r\n    btnOptionFullscreen: {\r\n      type: Boolean,\r\n      defaul: false,\r\n      description: 'Enable the fullscreen mode button'\r\n    },\r\n    btnOptionPinned: {\r\n      type: Boolean,\r\n      defaul: false,\r\n      description: 'Enable the pinned mode button'\r\n    },\r\n    btnOptionContent: {\r\n      type: Boolean,\r\n      defaul: false,\r\n      description: 'Enable the content toggle button'\r\n    },\r\n    btnOptionClose: {\r\n      type: Boolean,\r\n      defaul: false,\r\n      description: 'Enable the close mode button'\r\n    },\r\n  },\r\n  data () {\r\n    return {\r\n      // If the block is in loading mode\r\n      optionLoading: this.modeLoading,\r\n\r\n      // If the block is in fullscreen mode\r\n      optionFullscreen: this.modeFullscreen,\r\n\r\n      // If the block is in pinned mode\r\n      optionPinned: this.modePinned,\r\n\r\n      // If the default block-content is hidden\r\n      optionContentHide: this.modeContentHide,\r\n\r\n      // If block itself is hidden\r\n      optionHide: this.modeHide\r\n    }\r\n  },\r\n  computed: {\r\n    classContainer () {\r\n      return {\r\n        'block-bordered': this.bordered,\r\n        'block-rounded': this.rounded,\r\n        'block-themed': this.themed,\r\n        'block-transparent': this.transparent,\r\n        'block-fx-shadow': this.fxShadow,\r\n        'block-fx-pop': this.fxPop,\r\n        'block-fx-rotate-right': this.fxRotateRight,\r\n        'block-fx-rotate-left': this.fxRotateLeft,\r\n        'block-link-shadow': this.linkShadow,\r\n        'block-link-pop': this.linkPop,\r\n        'block-link-rotate': this.linkRotate,\r\n        'block-mode-loading': this.optionLoading,\r\n        'block-mode-fullscreen': this.optionFullscreen,\r\n        'block-mode-pinned': this.optionPinned,\r\n        'block-mode-hidden': this.optionContentHide,\r\n        'd-none': this.optionHide\r\n      }\r\n    },\r\n    classContainerHeader () {\r\n      return {\r\n        'block-header-default': this.headerBg,\r\n        'block-header-rtl': this.headerRtl,\r\n        [this.headerClass]: this.headerClass\r\n      }\r\n    },\r\n    classContainerOptions () {\r\n      return {\r\n        [this.optionsClass]: this.optionsClass\r\n      }\r\n    },\r\n    classContainerContent () {\r\n      return {\r\n        'block-content-full': this.contentFull,\r\n        'ribbon': this.ribbon,\r\n        'ribbon-left': this.ribbon && this.ribbonLeft,\r\n        'ribbon-bottom': this.ribbon && this.ribbonBottom,\r\n        'ribbon-bookmark': this.ribbon && this.ribbonBookmark,\r\n        'ribbon-modern': this.ribbon && this.ribbonModern,\r\n        [`ribbon-${this.ribbonVariant}`]: this.ribbon && this.ribbonVariant,\r\n        [this.contentClass]: this.contentClass\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    fullscreenToggle () {\r\n      this.optionPinned = false\r\n      this.optionFullscreen = !this.optionFullscreen\r\n    },\r\n    fullscreenOn () {\r\n      this.optionPinned = false\r\n      this.optionFullscreen = true\r\n    },\r\n    fullscreenOff () {\r\n      this.optionPinned = false\r\n      this.optionFullscreen = false\r\n    },\r\n    pinnedToggle () {\r\n      this.optionFullscreen = false\r\n      this.optionPinned = !this.optionPinned\r\n    },\r\n    pinnedOn () {\r\n      this.optionFullscreen = false\r\n      this.optionPinned = true\r\n    },\r\n    pinnedOff () {\r\n      this.optionFullscreen = false\r\n      this.optionPinned = false\r\n    },\r\n    contentToggle () {\r\n      this.optionContentHide = !this.optionContentHide\r\n    },\r\n    contentShow () {\r\n      this.optionContentHide = false\r\n    },\r\n    contentHide () {\r\n      this.optionContentHide = true\r\n    },\r\n    stateToggle () {\r\n      this.optionLoading = !this.optionLoading\r\n    },\r\n    stateLoading () {\r\n      this.optionLoading = true\r\n    },\r\n    stateNormal () {\r\n      this.optionLoading = false\r\n    },\r\n    open () {\r\n      this.optionHide = false\r\n    },\r\n    close () {\r\n      this.optionHide = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n"],"sourceRoot":"src/components/ef-bootstrap-comps"}]}