{"remainingRequest":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\page\\login\\userlogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\page\\login\\userlogin.vue","mtime":1659074243388},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"E:/\\u5174\\u624Dsvn\\u5E73\\u53F0/01\\u82CF\\u5DDE\\u533B\\u4FDD\\u5C40/88\\u82CF\\u5DDE\\u533B\\u4FDD\\u4E2D\\u5FC3\\u5C97\\u4F4D\\u804C\\u8D23\\u52A8\\u6001\\u7BA1\\u7406\\u7CFB\\u7EDF\\uFF08SZYBGZDTGL\\uFF09/0\\u5DE5\\u7A0B/5Vue/SZYBGZDTGL-avue/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { randomLenNum } from \"@/util/util\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"userlogin\",\n  data: function data() {\n    var _this = this;\n\n    var validateCode = function validateCode(rule, value, callback) {\n      if (_this.code.value != value) {\n        _this.loginForm.code = \"\";\n\n        _this.refreshCode();\n\n        callback(new Error(\"请输入正确的验证码\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loginForm: {\n        username: \"\",\n        password: \"\",\n        code: \"\",\n        redomStr: \"\"\n      },\n      checked: false,\n      code: {\n        src: \"\",\n        value: \"\",\n        len: 4,\n        type: \"text\"\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          message: \"密码长度最少为6位\",\n          trigger: \"blur\"\n        }],\n        code: [{\n          required: true,\n          message: \"请输入验证码\",\n          trigger: \"blur\"\n        }, {\n          min: 4,\n          max: 4,\n          message: \"验证码长度为4位\",\n          trigger: \"blur\"\n        }, {\n          required: true,\n          trigger: \"blur\",\n          validator: validateCode\n        }]\n      },\n      passwordType: \"password\"\n    };\n  },\n  created: function created() {\n    this.refreshCode();\n  },\n  mounted: function mounted() {},\n  computed: _objectSpread({}, mapGetters([\"tagWel\", \"website\"])),\n  props: [],\n  methods: {\n    refreshCode: function refreshCode() {\n      this.loginForm.redomStr = randomLenNum(this.code.len, true);\n      this.code.type == \"text\" ? this.code.value = randomLenNum(this.code.len) : this.code.src = \"\".concat(this.codeUrl, \"/\").concat(this.loginForm.redomStr); //this.loginForm.code = this.code.value;\n    },\n    showPassword: function showPassword() {\n      this.passwordType == \"\" ? this.passwordType = \"password\" : this.passwordType = \"\";\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this2.$store.dispatch(_this2.website.loginMethod, _this2.loginForm).then(function () {\n            _this2.$router.push({\n              path: _this2.tagWel.value\n            });\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["userlogin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-form class=\"login-form\"\r\n           status-icon\r\n           :rules=\"loginRules\"\r\n           ref=\"loginForm\"\r\n           :model=\"loginForm\"\r\n           label-width=\"0\">\r\n    <el-form-item prop=\"username\">\r\n      <el-input size=\"small\"\r\n                @keyup.enter.native=\"handleLogin\"\r\n                v-model=\"loginForm.username\"\r\n                auto-complete=\"off\"\r\n                :placeholder=\"$t('login.username')\"\r\n                oninput=\"this.value=this.value.replace(/[^\\w\\u4E00-\\u9FA5]/g, '')\">\r\n        <i slot=\"prefix\"\r\n           class=\"icon-yonghu\"></i>\r\n      </el-input>\r\n    </el-form-item>\r\n    <el-form-item prop=\"password\">\r\n      <el-input size=\"small\"\r\n                @keyup.enter.native=\"handleLogin\"\r\n                :type=\"passwordType\"\r\n                v-model=\"loginForm.password\"\r\n                auto-complete=\"off\"\r\n                :placeholder=\"$t('login.password')\">\r\n        <i class=\"el-icon-view el-input__icon\"\r\n           slot=\"suffix\"\r\n           @click=\"showPassword\"></i>\r\n        <i slot=\"prefix\"\r\n           class=\"icon-mima\"></i>\r\n      </el-input>\r\n    </el-form-item>\r\n    <el-form-item prop=\"code\">\r\n      <el-row :span=\"24\">\r\n        <el-col :span=\"16\">\r\n          <el-input size=\"small\"\r\n                    @keyup.enter.native=\"handleLogin\"\r\n                    :maxlength=\"code.len\"\r\n                    v-model=\"loginForm.code\"\r\n                    auto-complete=\"off\"\r\n                    :placeholder=\"$t('login.code')\">\r\n            <i slot=\"prefix\"\r\n               class=\"icon-yanzhengma\"></i>\r\n          </el-input>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n          <div class=\"login-code\">\r\n            <span class=\"login-code-img\"\r\n                  @click=\"refreshCode\"\r\n                  v-if=\"code.type == 'text'\">{{code.value}}</span>\r\n            <img :src=\"code.src\"\r\n                 class=\"login-code-img\"\r\n                 @click=\"refreshCode\"\r\n                 v-else />\r\n            <!-- <i class=\"icon-shuaxin login-code-icon\" @click=\"refreshCode\"></i> -->\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n\r\n    </el-form-item>\r\n    <el-checkbox class=\"login-rember\" v-model=\"checked\">记住密码</el-checkbox>\r\n<!--    <el-form-item style=\"border: none\">-->\r\n<!--      <div class=\"login-submit\" @click=\"handleLogin\">-->\r\n<!--        {{$t('login.submit')}}-->\r\n<!--      </div>-->\r\n<!--    </el-form-item>-->\r\n\r\n    <el-form-item style=\"border: none\">\r\n      <el-button\r\n          style=\"width: 100%;\r\n                height: 48px;\r\n                background: #0088ff;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                font-size: 20px;\r\n                letter-spacing: 2px;\r\n                font-weight: 400;\r\n                color: #fff;\r\n                cursor: pointer;\r\n                margin-top: 25px;\r\n                border-radius: 5px;\"\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                @click.native.prevent=\"handleLogin\"\r\n                class=\"login-submit\">{{$t('login.submit')}}</el-button>\r\n    </el-form-item>\r\n<!--    <div class=\"login-tool\">-->\r\n<!--      <span><a href=\"\">忘记密码?</a></span>-->\r\n<!--      <span>还没有账号?&nbsp;<span><a href=\"\">去注册</a></span></span>-->\r\n<!--    </div>-->\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport { randomLenNum } from \"@/util/util\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  name: \"userlogin\",\r\n  data() {\r\n    const validateCode = (rule, value, callback) => {\r\n      if (this.code.value != value) {\r\n        this.loginForm.code = \"\";\r\n        this.refreshCode();\r\n        callback(new Error(\"请输入正确的验证码\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      loginForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        code: \"\",\r\n        redomStr: \"\"\r\n      },\r\n      checked: false,\r\n      code: {\r\n        src: \"\",\r\n        value: \"\",\r\n        len: 4,\r\n        type: \"text\"\r\n      },\r\n      loginRules: {\r\n        username: [\r\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" }\r\n        ],\r\n        password: [\r\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n          { min: 6, message: \"密码长度最少为6位\", trigger: \"blur\" }\r\n        ],\r\n        code: [\r\n          { required: true, message: \"请输入验证码\", trigger: \"blur\" },\r\n          { min: 4, max: 4, message: \"验证码长度为4位\", trigger: \"blur\" },\r\n          { required: true, trigger: \"blur\", validator: validateCode }\r\n        ]\r\n      },\r\n      passwordType: \"password\"\r\n    };\r\n  },\r\n  created() {\r\n    this.refreshCode();\r\n  },\r\n  mounted() {},\r\n  computed: {\r\n    ...mapGetters([\"tagWel\",\"website\"])\r\n  },\r\n  props: [],\r\n  methods: {\r\n    refreshCode() {\r\n      this.loginForm.redomStr = randomLenNum(this.code.len, true);\r\n      this.code.type == \"text\"\r\n        ? (this.code.value = randomLenNum(this.code.len))\r\n        : (this.code.src = `${this.codeUrl}/${this.loginForm.redomStr}`);\r\n      //this.loginForm.code = this.code.value;\r\n    },\r\n    showPassword() {\r\n      this.passwordType == \"\"\r\n        ? (this.passwordType = \"password\")\r\n        : (this.passwordType = \"\");\r\n    },\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (valid) {\r\n          this.$store.dispatch(this.website.loginMethod, this.loginForm).then(() => {\r\n            this.$router.push({ path: this.tagWel.value });\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/page/login"}]}