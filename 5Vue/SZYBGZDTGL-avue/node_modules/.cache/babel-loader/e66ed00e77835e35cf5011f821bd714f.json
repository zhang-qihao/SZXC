{"remainingRequest":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-element-comps\\EfSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-element-comps\\EfSelect.vue","mtime":1656319345633},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BaseFieldTag } from \"./BaseFieldTag\";\nimport store from \"../../store\";\nexport default {\n  name: 'EfSelect',\n  mixins: [BaseFieldTag],\n  //继承基础BaseFieldTag\n  props: {\n    dictionaryNo: {\n      // 数据字典编号。\n      type: String,\n      default: null\n    },\n    dictionaryGroup: {\n      //分组\n      type: String,\n      default: null\n    },\n    list: {\n      //分组\n      type: [String, Array],\n      default: null\n    },\n    listKey: {\n      //列中内容字段\n      type: String,\n      default: 'code'\n    },\n    listValue: {\n      //列中标题字段\n      type: String,\n      default: \"name\"\n    },\n    queryNo: {\n      //列中标题字段\n      type: String,\n      default: null\n    },\n    emptyOption: {\n      // 是否包含空选项， 默认false，非必传。\n      type: [String, Boolean],\n      default: false\n    },\n    //...BaseFieldTag.props,\n    multiple: {\n      // 是否多选，默认false，非必传。\n      type: [String, Boolean],\n      default: false\n    },\n    collapseTags: {\n      // 多选用数字替代\n      type: [String, Boolean],\n      default: false\n    },\n    clearable: {\n      // 是否可清空选项，默认true，非必传。\n      type: [String, Boolean],\n      default: true\n    },\n    filterable: {\n      // 是否可搜索， 默认false，非必传。\n      type: [String, Boolean],\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      componentType: 'EfSelect',\n      compEmptyOption: false,\n      compMultiple: false,\n      compClearable: false,\n      compFilterable: false,\n      compValidateTrigger: 'change',\n      //校验触发事件,select为change\n      optionLists: [],\n      compCollapseTags: false\n    };\n  },\n  computed: {\n    formStyle: function formStyle() {\n      return this.$store.state.common.formStyle;\n    },\n    placeholderClass: function placeholderClass() {\n      return this.$store.state.common.formStyle[0].size;\n    }\n  },\n  watch: {\n    list: function list() {\n      this.getOptions();\n    },\n    value: function value() {\n      this.compValue = this.value;\n    }\n  },\n  created: function created() {\n    if (typeof this.emptyOption == \"string\") {\n      this.compEmptyOption = this.emptyOption === 'true';\n    } else {\n      this.compEmptyOption = this.emptyOption === true;\n    }\n\n    if (typeof this.multiple == \"string\") {\n      this.compMultiple = this.multiple === 'true';\n    } else {\n      this.compMultiple = this.multiple === true;\n    }\n\n    if (typeof this.collapseTags == \"string\") {\n      this.compCollapseTags = this.collapseTags === 'true';\n    } else {\n      this.compCollapseTags = this.collapseTags === true;\n    }\n\n    if (typeof this.clearable == \"string\") {\n      this.compClearable = this.clearable === 'true';\n    } else {\n      this.compClearable = this.clearable === true;\n    }\n\n    if (typeof this.filterable == \"string\") {\n      this.compFilterable = this.filterable === 'true';\n    } else {\n      this.compFilterable = this.filterable === true;\n    }\n\n    this.getOptions();\n  },\n  methods: {\n    /**\n     * 获取下拉框的选择项数据\n     */\n    getOptions: function getOptions() {\n      var _this = this;\n\n      if (this.dictionaryNo) {\n        //this.$eframe.loadDicItem( {dicId:this.dictionaryNo},(data)=>{ this.optionLists = data;  } );\n        var form = {\n          dicId: this.dictionaryNo,\n          dicListGroup: this.dictionaryGroup,\n          //字典分组\n          language: '',\n          //语种\n          catchFlag: this.compCatch //是否使用缓存，默认true\n\n        };\n        store.dispatch('LoadDicItem', form).then(function (data) {\n          _this.optionLists = data;\n        }).catch(function (msg) {\n          _this.$eframe.alertError(msg);\n        });\n        return;\n      }\n\n      if (this.list) {\n        if (this.$eframe.isArray(this.list)) {\n          // 如果父组件有下拉选项数据，则不进行数据请求\n          this.optionLists = this.list;\n        } else if (typeof this.list === \"string\") {\n          // 如果父组件有下拉选项数据，则不进行数据请求\n          this.optionLists = JSON.parse(this.list);\n        }\n\n        return;\n      }\n    },\n\n    /**\n     * 选择框change事件，将所选值和所选值所在的对象回传给父组件\n     * @val {String} 当前选中值\n     **/\n    change: function change(val) {\n      this.$emit('compChange', val); // 更新 model\n\n      this.$emit('onChange', val);\n    },\n\n    /**\n     * 下拉框出现/隐藏时触发\n     * @isShow {Boolean} 标识：true为下拉框展开；false为下拉框隐藏\n     **/\n    visibleChange: function visibleChange(isShow) {\n      this.$emit('onVisibleChange', isShow);\n    },\n    getValue: function getValue() {\n      var list = this.optionLists;\n\n      for (var k in list) {// if (list[k].[this.listKey]===this.value){\n        //   return list[k].[this.listValue];\n        // }\n      }\n\n      return this.value;\n    },\n    setFocus: function setFocus() {\n      this.$refs[this.name].focus();\n    },\n    setBlur: function setBlur() {\n      this.$refs[this.name].blur();\n    }\n  }\n};",{"version":3,"sources":["EfSelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAA,YAAA;AACA,OAAA,KAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,MAAA,EAAA,CAAA,YAAA,CAFA;AAEA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,YAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,eAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,IAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,OAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,SAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,OAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,WAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,OAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzBA;AA6BA;AACA,IAAA,QAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,OAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA9BA;AAkCA,IAAA,YAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,OAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAlCA;AAsCA,IAAA,SAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,OAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAtCA;AA0CA,IAAA,UAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,OAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA;AA1CA,GAHA;AAkDA,EAAA,IAlDA,kBAkDA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,UADA;AAEA,MAAA,eAAA,EAAA,KAFA;AAGA,MAAA,YAAA,EAAA,KAHA;AAIA,MAAA,aAAA,EAAA,KAJA;AAKA,MAAA,cAAA,EAAA,KALA;AAMA,MAAA,mBAAA,EAAA,QANA;AAMA;AACA,MAAA,WAAA,EAAA,EAPA;AAQA,MAAA,gBAAA,EAAA;AARA,KAAA;AAUA,GA7DA;AA8DA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,SAAA;AACA,KAHA;AAIA,IAAA,gBAJA,8BAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA;AACA;AANA,GA9DA;AAsEA,EAAA,KAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,UAAA;AACA,KAHA;AAIA,IAAA,KAJA,mBAIA;AACA,WAAA,SAAA,GAAA,KAAA,KAAA;AACA;AANA,GAtEA;AA8EA,EAAA,OA9EA,qBA8EA;AACA,QAAA,OAAA,KAAA,WAAA,IAAA,QAAA,EAAA;AACA,WAAA,eAAA,GAAA,KAAA,WAAA,KAAA,MAAA;AACA,KAFA,MAEA;AACA,WAAA,eAAA,GAAA,KAAA,WAAA,KAAA,IAAA;AACA;;AACA,QAAA,OAAA,KAAA,QAAA,IAAA,QAAA,EAAA;AACA,WAAA,YAAA,GAAA,KAAA,QAAA,KAAA,MAAA;AACA,KAFA,MAEA;AACA,WAAA,YAAA,GAAA,KAAA,QAAA,KAAA,IAAA;AACA;;AACA,QAAA,OAAA,KAAA,YAAA,IAAA,QAAA,EAAA;AACA,WAAA,gBAAA,GAAA,KAAA,YAAA,KAAA,MAAA;AACA,KAFA,MAEA;AACA,WAAA,gBAAA,GAAA,KAAA,YAAA,KAAA,IAAA;AACA;;AACA,QAAA,OAAA,KAAA,SAAA,IAAA,QAAA,EAAA;AACA,WAAA,aAAA,GAAA,KAAA,SAAA,KAAA,MAAA;AACA,KAFA,MAEA;AACA,WAAA,aAAA,GAAA,KAAA,SAAA,KAAA,IAAA;AACA;;AACA,QAAA,OAAA,KAAA,UAAA,IAAA,QAAA,EAAA;AACA,WAAA,cAAA,GAAA,KAAA,UAAA,KAAA,MAAA;AACA,KAFA,MAEA;AACA,WAAA,cAAA,GAAA,KAAA,UAAA,KAAA,IAAA;AACA;;AACA,SAAA,UAAA;AACA,GAzGA;AA0GA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA,IAAA,UAJA,wBAIA;AAAA;;AACA,UAAA,KAAA,YAAA,EAAA;AACA;AACA,YAAA,IAAA,GAAA;AACA,UAAA,KAAA,EAAA,KAAA,YADA;AAEA,UAAA,YAAA,EAAA,KAAA,eAFA;AAEA;AACA,UAAA,QAAA,EAAA,EAHA;AAGA;AACA,UAAA,SAAA,EAAA,KAAA,SAJA,CAIA;;AAJA,SAAA;AAMA,QAAA,KAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA,EAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AAAA,UAAA,KAAA,CAAA,WAAA,GAAA,IAAA;AAAA,SAAA,EAAA,KAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,UAAA,CAAA,GAAA;AACA,SAFA;AAGA;AACA;;AACA,UAAA,KAAA,IAAA,EAAA;AACA,YAAA,KAAA,OAAA,CAAA,OAAA,CAAA,KAAA,IAAA,CAAA,EAAA;AAAA;AACA,eAAA,WAAA,GAAA,KAAA,IAAA;AACA,SAFA,MAEA,IAAA,OAAA,KAAA,IAAA,KAAA,QAAA,EAAA;AAAA;AACA,eAAA,WAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA,IAAA,CAAA;AACA;;AACA;AACA;AACA,KA1BA;;AA4BA;AACA;AACA;AACA;AACA,IAAA,MAhCA,kBAgCA,GAhCA,EAgCA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,GAAA,EADA,CACA;;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,GAAA;AACA,KAnCA;;AAoCA;AACA;AACA;AACA;AACA,IAAA,aAxCA,yBAwCA,MAxCA,EAwCA;AACA,WAAA,KAAA,CAAA,iBAAA,EAAA,MAAA;AACA,KA1CA;AA2CA,IAAA,QA3CA,sBA2CA;AACA,UAAA,IAAA,GAAA,KAAA,WAAA;;AACA,WAAA,IAAA,CAAA,IAAA,IAAA,EAAA,CACA;AACA;AACA;AACA;;AACA,aAAA,KAAA,KAAA;AACA,KAnDA;AAoDA,IAAA,QApDA,sBAoDA;AACA,WAAA,KAAA,CAAA,KAAA,IAAA,EAAA,KAAA;AACA,KAtDA;AAuDA,IAAA,OAvDA,qBAuDA;AACA,WAAA,KAAA,CAAA,KAAA,IAAA,EAAA,IAAA;AACA;AAzDA;AA1GA,CAAA","sourcesContent":["<template>\r\n\t<el-form-item :class=\"placeholderClass\" :label-width=\"compLabelWidth\"  :label=\"label\" :prop=\"name\" :rules=\"rules\" inline-message=\"true\">\r\n    <span slot=\"label\">{{ label }}</span>\r\n    <el-select\r\n        :ref=\"name\"\r\n        :size=\"formStyle[0].size\"\r\n\t\t\t\tv-model=\"compValue\"\r\n\t\t\t\t:multiple=\"compMultiple\"\r\n\t\t\t\t:disabled=\"compReadonly\"\r\n\t\t\t\t:clearable=\"compClearable\"\r\n\t\t\t\t:filterable=\"compFilterable\"\r\n\t\t\t\t:placeholder=\"placeholder\"\r\n\t\t\t\t:collapse-tags=\"compCollapseTags\"\r\n\t\t\t\tstyle=\"width: 100%\"\r\n\t\t\t\t@change=\"change\"\r\n\t\t\t\t@visible-change=\"visibleChange\">\r\n\t\t\t<el-option v-if=\"compEmptyOption\" key=\"\" label=\"\" value=\"\"/>\r\n\t\t\t<el-option\r\n\t\t\t\t\tv-for=\"item in optionLists\"\r\n\t\t\t\t\t:key=\"listKey ? item[listKey] : item.code\"\r\n\t\t\t\t\t:label=\"listValue ? item[listValue] : item.name\"\r\n\t\t\t\t\t:value=\"listKey ? item[listKey] : item.code\" />\r\n\t\t</el-select>\r\n\t</el-form-item>\r\n</template>\r\n<script type=\"text/javascript\">\r\n\timport {BaseFieldTag} from './BaseFieldTag';\r\n\timport store from \"../../store\";\r\n\texport default {\r\n\t\tname: 'EfSelect',\r\n\t\tmixins: [BaseFieldTag],         //继承基础BaseFieldTag\r\n\t\tprops: {\r\n\t\t\tdictionaryNo: { // 数据字典编号。\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: null,\r\n\t\t\t},\r\n\t\t\tdictionaryGroup: {  //分组\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: null,\r\n\t\t\t},\r\n\t\t\tlist: {  //分组\r\n\t\t\t\ttype: [String, Array],\r\n\t\t\t\tdefault: null,\r\n\t\t\t},\r\n\t\t\tlistKey: {  //列中内容字段\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'code',\r\n\t\t\t},\r\n\t\t\tlistValue: {  //列中标题字段\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"name\",\r\n\t\t\t},\r\n\t\t\tqueryNo: {  //列中标题字段\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: null,\r\n\t\t\t},\r\n\t\t\temptyOption: { // 是否包含空选项， 默认false，非必传。\r\n\t\t\t\ttype: [String, Boolean],\r\n\t\t\t\tdefault: false,\r\n\t\t\t},\r\n\t\t\t//...BaseFieldTag.props,\r\n\t\t\tmultiple: { // 是否多选，默认false，非必传。\r\n\t\t\t\ttype: [String, Boolean],\r\n\t\t\t\tdefault: false,\r\n\t\t\t},\r\n\t\t\tcollapseTags: { // 多选用数字替代\r\n\t\t\t\ttype: [String, Boolean],\r\n\t\t\t\tdefault: false,\r\n\t\t\t},\r\n\t\t\tclearable: { // 是否可清空选项，默认true，非必传。\r\n\t\t\t\ttype: [String, Boolean],\r\n\t\t\t\tdefault: true,\r\n\t\t\t},\r\n\t\t\tfilterable: { // 是否可搜索， 默认false，非必传。\r\n\t\t\t\ttype: [String, Boolean],\r\n\t\t\t\tdefault: false,\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tcomponentType:'EfSelect',\r\n\t\t\t\tcompEmptyOption:false,\r\n\t\t\t\tcompMultiple:false,\r\n\t\t\t\tcompClearable:false,\r\n\t\t\t\tcompFilterable:false,\r\n\t\t\t\tcompValidateTrigger:'change', //校验触发事件,select为change\r\n\t\t\t\toptionLists: [],\r\n\t\t\t\tcompCollapseTags:false,\r\n\t\t\t};\r\n\t\t},\r\n    computed:{\r\n      formStyle(){\r\n        return this.$store.state.common.formStyle\r\n      },\r\n      placeholderClass(){\r\n        return this.$store.state.common.formStyle[0].size\r\n      }\r\n    },\r\n\t\twatch: {\r\n\t\t\tlist() {\r\n\t\t\t\tthis.getOptions();\r\n\t\t\t},\r\n\t\t\tvalue() {\r\n\t\t\t\tthis.compValue = this.value;\r\n\t\t\t},\r\n\t\t},\r\n\t\tcreated(){\r\n\t\t\tif(typeof (this.emptyOption)==\"string\") {\r\n\t\t\t\tthis.compEmptyOption = this.emptyOption === 'true';\r\n\t\t\t}else{\r\n\t\t\t\tthis.compEmptyOption = this.emptyOption === true;\r\n\t\t\t}\r\n\t\t\tif(typeof (this.multiple)==\"string\") {\r\n\t\t\t\tthis.compMultiple = this.multiple === 'true';\r\n\t\t\t}else{\r\n\t\t\t\tthis.compMultiple = this.multiple === true;\r\n\t\t\t}\r\n\t\t\tif(typeof (this.collapseTags)==\"string\") {\r\n\t\t\t\tthis.compCollapseTags = this.collapseTags === 'true';\r\n\t\t\t}else{\r\n\t\t\t\tthis.compCollapseTags = this.collapseTags === true;\r\n\t\t\t}\r\n\t\t\tif(typeof (this.clearable)==\"string\") {\r\n\t\t\t\tthis.compClearable = this.clearable === 'true';\r\n\t\t\t}else{\r\n\t\t\t\tthis.compClearable = this.clearable === true;\r\n\t\t\t}\r\n\t\t\tif(typeof (this.filterable)==\"string\") {\r\n\t\t\t\tthis.compFilterable = this.filterable === 'true';\r\n\t\t\t}else{\r\n\t\t\t\tthis.compFilterable = this.filterable === true;\r\n\t\t\t}\r\n\t\t\tthis.getOptions();\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t/**\r\n\t\t\t * 获取下拉框的选择项数据\r\n\t\t\t */\r\n\t\t\tgetOptions() {\r\n\t\t\t\tif(this.dictionaryNo){\r\n\t\t\t\t\t//this.$eframe.loadDicItem( {dicId:this.dictionaryNo},(data)=>{ this.optionLists = data;  } );\r\n\t\t\t\t\tlet form={\r\n\t\t\t\t\t\tdicId:this.dictionaryNo,\r\n\t\t\t\t\t\tdicListGroup:this.dictionaryGroup,  //字典分组\r\n\t\t\t\t\t\tlanguage:'', //语种\r\n\t\t\t\t\t\tcatchFlag:this.compCatch, //是否使用缓存，默认true\r\n\t\t\t\t\t};\r\n\t\t\t\t\tstore.dispatch('LoadDicItem',form).then((data)=>{ this.optionLists = data; }).catch((msg) => {\r\n\t\t\t\t\t\tthis.$eframe.alertError(msg);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(this.list) {\r\n\t\t\t\t\tif (this.$eframe.isArray(this.list)) { // 如果父组件有下拉选项数据，则不进行数据请求\r\n\t\t\t\t\t\tthis.optionLists = this.list;\r\n\t\t\t\t\t} else if (typeof (this.list) === \"string\") { // 如果父组件有下拉选项数据，则不进行数据请求\r\n\t\t\t\t\t\tthis.optionLists = JSON.parse(this.list);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 选择框change事件，将所选值和所选值所在的对象回传给父组件\r\n\t\t\t * @val {String} 当前选中值\r\n\t\t\t **/\r\n\t\t\tchange(val) {\r\n\t\t\t\tthis.$emit('compChange', val);    // 更新 model\r\n\t\t\t\tthis.$emit('onChange', val);\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 下拉框出现/隐藏时触发\r\n\t\t\t * @isShow {Boolean} 标识：true为下拉框展开；false为下拉框隐藏\r\n\t\t\t **/\r\n\t\t\tvisibleChange(isShow) {\r\n\t\t\t\tthis.$emit('onVisibleChange', isShow);\r\n\t\t\t},\r\n      getValue(){\r\n\t\t\t  var list=this.optionLists;\r\n        for (let k in list ){\r\n          // if (list[k].[this.listKey]===this.value){\r\n          //   return list[k].[this.listValue];\r\n          // }\r\n        }\r\n        return this.value;\r\n      },\r\n      setFocus(){\r\n        this.$refs[this.name].focus()\r\n      },\r\n      setBlur(){\r\n        this.$refs[this.name].blur()\r\n      }\r\n\t\t},\r\n\t}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\t.el-select-dropdown__item.hover, .el-select-dropdown__item:hover{\r\n\t\tbackground: #edf0f4;\r\n\t}\r\n</style>\r\n"],"sourceRoot":"src/components/ef-element-comps"}]}