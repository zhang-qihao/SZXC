{"remainingRequest":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\util\\yb.js","dependencies":[{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\util\\yb.js","mtime":1654581510212},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\n//医保JS\nimport eframe from '/src/util/eframe';\nimport website from \"../config/website\";\nimport store from \"/src/store/index\";\nvar ip = \"10.58.70.177\"; //医保测试http://10.58.70.177:8086/CSB\n// const ip = \"10.61.152.33\"; //医保正式http://10.61.152.33:8086/CSB\n\nvar port = \"8086\";\nvar ec_url = \"http://10.72.42.210:10081/test/localcfc/api/hsecfc/localQrCodeQuery\"; //测试\n// const ec_url = \"http://10.58.33.207:10086/localcfc/api/hsecfc/localQrCodeQuery\";  //正式\n//医保初始化\n\nexport function callInit() {\n  try {\n    eframe.showWaiting();\n    var userInfo = store.state.user.userInfo;\n    var form = {\n      ip: ip,\n      //服务端IP地址\n      port: port,\n      //服务端端口\n      card_passtype: \"1\",\n      //社保卡验证密码方式\n      ec_url: ec_url,\n      //电子凭证中台URL\n      api_name: userInfo.api_name,\n      //CSB的_api_name\n      api_version: userInfo.api_version,\n      //CSB的api_version\n      access_key: userInfo.api_access_key,\n      //CSB的api_access_key\n      secretkey: userInfo.api_secret_key,\n      //CSB的secretKey\n      org_id: userInfo.fixmedins_code,\n      //定点编号\n      area_code: userInfo.fix_blng_admdvs,\n      //定点所属行政区划代码\n      ext: \"\" //JSON对象字符串\n\n    };\n    console.log(\"医保初始化开始--\" + JSON.stringify(form));\n\n    var callBackFun = function callBackFun(data) {\n      eframe.hiddenWaiting();\n      console.log(\"医保初始化结束：\" + JSON.stringify(data));\n\n      if (data.result !== 0) {\n        eframe.alertError(\"医保初始化失败：\" + JSON.stringify(data.pErrMsg));\n      } else {\n        eframe.showToast(\"医保初始化成功\");\n      }\n    };\n\n    eframe.callSysFun({\n      funName: 'init',\n      params: form,\n      callBackFun: callBackFun\n    });\n  } catch (e) {\n    eframe.alertError(\"医保初始化失败：\" + e.message);\n  } finally {\n    eframe.hiddenWaiting();\n  }\n} //读卡\n\nexport function readCardInfo(params, succFun, failFun) {\n  console.log(\"读卡开始-------\");\n\n  try {\n    var callBackFun = function callBackFun(data) {\n      console.log(\"读卡结束：\" + JSON.stringify(data));\n\n      if (data.result !== 0) {\n        eframe.alertError(\"医保卡读卡失败：\" + data.pCardInfo);\n\n        if (typeof failFun == 'function') {\n          failFun(data);\n        }\n      } else {\n        var info = data.pCardInfo.split(\"|\");\n        var psnInfo = {\n          si_card_issue_area: info[0],\n          //发卡地区行政区划代码\n          card_sn: info[1],\n          //社会保障卡卡号\n          cardId: info[2],\n          //卡号\n          si_card_no: info[3],\n          //卡识别码\n          psn_name: info[4],\n          //姓名\n          resetInfo: info[5],\n          //卡复位信息\n          version: info[6],\n          //规范版本\n          beginDate: info[7],\n          //发卡日期\n          endDate: info[8],\n          //卡有效期\n          devCode: info[9],\n          //终端机编号\n          devNo: info[10],\n          //终端设备号\n          pBusiCardInfo: data.pBusiCardInfo,\n          //业务卡串\n          mdtrt_cert_type: \"03\"\n        };\n        psnInfo.mdtrt_cert_no = psnInfo.cardId + '|' + psnInfo.pBusiCardInfo; //就诊凭证编号\n\n        psnInfo.certno = psnInfo.card_sn; //卡号-证件号\n\n        psnInfo.psn_cert_type = \"90\"; //证件类型\n\n        psnInfo.fixmedins_id = params.fixmedins_id; //机构ID\n\n        var funName = \"readCardInfo\";\n\n        if (eframe.isNotNull(params.isSave) && params.isSave) {\n          funName = \"readCardAndSave\";\n        }\n\n        eframe.submitTargetForm({\n          url: '/ehis/settlementmgmt/psnmgmt/psnInfo.action',\n          form: psnInfo,\n          actionFunName: funName,\n          succFun: succFun,\n          failFun: failFun\n        });\n      }\n    };\n\n    if (website.isYB) {\n      eframe.callSysFun({\n        funName: 'readCardBas',\n        params: {},\n        callBackFun: callBackFun\n      });\n    } else {\n      // TODO 模拟\n      var data = {\n        result: 0,\n        pCardInfo: \"320500|410305199311122044|183760642|320500D1560000…DCC75B|2.00|20201019||320500902398||JSE165319722|\",\n        pBusiCardInfo: \"twCSljjR1u2h6rS3gRDe3D+G9rHAf+A77BOAAJlY54uYHlwKHN…PSS+/l2gi31AxWdqALHxNPM821OouBoCoeeQJrSKr0uF42kc=\"\n      };\n      callBackFun(data);\n    }\n  } catch (e) {\n    eframe.alertError(\"医保卡读卡失败：\" + e.message);\n\n    if (typeof failFun == 'function') {\n      failFun();\n    }\n  } finally {}\n} //电子社保卡\n\nexport function ecCardInfo(params, succFun, failFun) {\n  console.log(\"电子社保卡扫码开始-------\");\n\n  try {\n    var callBackFun = function callBackFun(data) {\n      console.log(\"电子社保卡扫码结束：\" + JSON.stringify(data));\n\n      if (data.result !== 0 || JSON.parse(data.pOutData).code != 0) {\n        eframe.alertError(\"电子社保卡解码失败：\" + JSON.stringify(data.pOutData));\n\n        if (typeof failFun == 'function') {\n          failFun(data);\n        }\n      } else {\n        var info = JSON.parse(data.pOutData).data;\n        var psnInfo = {\n          card_sn: info.si_no,\n          //社会保障卡卡号(社会保障号码)\n          si_card_no: info.si_card_no,\n          //卡识别码(人员识别号)\n          si_card_issue_area: info.si_card_issue_area,\n          //发卡地区行政区划代码\n          psn_name: info.name,\n          //姓名\n          gender: info.gender,\n          //性别\n          cardId: info.id_no,\n          //卡号（证件号码）\n          psn_cert_type: info.id_type,\n          //证件类型\n          mdtrt_cert_type: \"04\",\n          //就诊凭证类型\n          ecToken: info.ecCardToken //令牌\n\n        };\n        psnInfo.mdtrt_cert_no = psnInfo.cardId + \"|\" + psnInfo.ecToken; //就诊凭证编号\n\n        psnInfo.certno = psnInfo.cardId; //卡号-证件号\n\n        psnInfo.fixmedins_id = params.fixmedins_id; //机构ID\n\n        var funName = \"readCardInfo\";\n\n        if (eframe.isNotNull(params.isSave) && params.isSave) {\n          funName = \"readCardAndSave\";\n        }\n\n        eframe.submitTargetForm({\n          url: '/ehis/settlementmgmt/psnmgmt/psnInfo.action',\n          form: psnInfo,\n          actionFunName: funName,\n          succFun: succFun,\n          failFun: failFun\n        });\n      }\n    };\n\n    if (website.isYB) {\n      eframe.callSysFun({\n        funName: 'ecCardQuery',\n        params: {},\n        callBackFun: callBackFun\n      });\n    } else {\n      //TODO 模拟\n      var data = {\n        result: 0,\n        pOutData: {\n          \"code\": 0,\n          \"message\": \"\",\n          \"data\": {\n            \"si_no\": \"320981199804163722\",\n            \"si_card_no\": \"JSJ048625595\",\n            \"si_card_issue_area\": \"320900\",\n            \"name\": \"臧莉\",\n            \"gender\": \"2\",\n            \"id_type\": \"01\",\n            \"id_no\": \"320981199804163722\",\n            \"ecCardToken\": \"o/2NdFs1ir+7WzI+2z9iNva526mq/7TQW2ipQ2HPVF2GZMg1Fc+zLDqStmIdW/JOLXP/UltfvrU4FK//MxEDVTjhRKkBi9EsWlD9KZucYuge3J8yOA/fJR1mjiXrg5Rl/PRVpLSH9U2G2S3FHbJAlQ==\"\n          }\n        }\n      };\n      callBackFun(data);\n    }\n  } catch (e) {\n    eframe.alertError(\"电子社保卡扫码失败：\" + e.message);\n\n    if (typeof failFun == 'function') {\n      failFun();\n    }\n  } finally {}\n} //电子医保凭证\n\nexport function ecInfo(params, succFun, failFun) {\n  try {\n    var form = {\n      orgId: params.fixmedins_code,\n      //机构ID\n      businessType: params.businessType,\n      //用码业务类型\n      operatorId: params.psn_code,\n      //收款员编号\n      operatorName: params.psn_name,\n      //收款员姓名\n      officeId: params.caty,\n      //医保科室编号\n      officeName: params.dept_name //科室名称\n\n    };\n    console.log(\"电子医保凭证扫码开始--\" + JSON.stringify(form));\n\n    var callBackFun = function callBackFun(data) {\n      console.log(\"电子医保凭证扫码结束：\" + JSON.stringify(data));\n\n      if (data.result !== 0 || data.pOutData.code !== 0) {\n        eframe.alertError(\"电子医保凭证解码失败：\" + JSON.stringify(data.pOutData.message));\n\n        if (typeof failFun == 'function') {\n          failFun(data);\n        }\n      } else {\n        var info = data.pOutData.data;\n        var psnInfo = {\n          psn_name: info.userName,\n          //姓名\n          psn_cert_type: info.idType,\n          //证件类型\n          ecToken: info.ecToken,\n          //令牌\n          insuOrg: info.insuOrg,\n          //参保地区编码\n          certno: info.idNo,\n          //身份证号-证件号码\n          ecIndexNo: info.ecIndexNo,\n          //电子凭证索引号\n          gender: info.gender,\n          //性别\n          brdy: info.birthday,\n          //出生日期\n          nationality: info.nationality,\n          //国籍\n          email: info.email,\n          //邮箱\n          mdtrt_cert_type: \"01\",\n          mdtrt_cert_no: info.ecToken //电子凭证令牌\n\n        };\n        psnInfo.fixmedins_id = params.fixmedins_id; //机构ID\n\n        var funName = \"readCardInfo\";\n\n        if (eframe.isNotNull(params.isSave) && params.isSave) {\n          funName = \"readCardAndSave\";\n        }\n\n        eframe.submitTargetForm({\n          url: '/ehis/settlementmgmt/psnmgmt/psnInfo.action',\n          form: psnInfo,\n          actionFunName: funName,\n          succFun: succFun,\n          failFun: failFun\n        });\n      }\n    };\n\n    if (website.isYB) {\n      eframe.callSysFun({\n        funName: 'ecQuery',\n        params: {\n          orgId: params.fixmedins_code,\n          //机构ID\n          businessType: params.businessType,\n          //用码业务类型\n          operatorId: params.userId,\n          //收款员编号\n          operatorName: params.userName,\n          //收款员姓名\n          officeId: '',\n          //医保科室编号\n          officeName: '' //科室名称\n\n        },\n        callBackFun: callBackFun\n      });\n    } else {\n      //TODO 模拟\n      var data = {\n        \"result\": 0,\n        \"pOutData\": {\n          \"code\": 0,\n          \"data\": {\n            \"authNo\": null,\n            \"birthday\": null,\n            \"chnlId\": null,\n            \"ecIndexNo\": \"6C03F0CDD8C35F17D336F01D2EFAEF5A\",\n            \"ecQrCode\": null,\n            \"ecToken\": \"320000ecnqssaor2nj7a2a480a0000a4cef57c\",\n            \"email\": null,\n            \"gender\": null,\n            \"idNo\": \"37030519870924532X\",\n            \"idType\": \"01\",\n            \"insuOrg\": \"320500\",\n            \"nationality\": null,\n            \"userName\": \"王娜娜\"\n          },\n          \"message\": \"交易成功\",\n          \"orgId\": \"\"\n        }\n      };\n      callBackFun(data);\n    }\n  } catch (e) {\n    eframe.alertError(\"电子医保凭证扫码失败：\" + e.message);\n\n    if (typeof failFun == 'function') {\n      failFun();\n    }\n  } finally {}\n} //根据身份证获取参保信息\n\nexport function idCardTest(params, succFun, failFun) {\n  console.log(\"根据身份证获取参保信息开始-------\");\n\n  try {\n    console.log(JSON.stringify(params));\n\n    if (eframe.isNull(params.idNo)) {\n      eframe.alertError(\"身份证不能为空\");\n      failFun();\n    } else {\n      var psnInfo = {\n        idNo: params.idNo,\n        //身份证号\n        mdtrt_cert_type: \"02\",\n        mdtrt_cert_no: params.idNo,\n        //就诊凭证编号-身份证号码\n        fixmedins_id: params.fixmedins_id //机构ID\n\n      };\n      var funName = \"readCardInfo\";\n\n      if (eframe.isNotNull(params.isSave) && params.isSave) {\n        funName = \"readCardAndSave\";\n      }\n\n      eframe.submitTargetForm({\n        url: '/ehis/settlementmgmt/psnmgmt/psnInfo.action',\n        form: psnInfo,\n        actionFunName: funName,\n        succFun: succFun,\n        failFun: failFun\n      });\n    }\n  } catch (e) {\n    eframe.alertError(\"根据身份证获取参保信息失败：\" + e.message);\n\n    if (typeof failFun == 'function') {\n      failFun();\n    }\n  } finally {}\n}\nexport default {\n  callInit: callInit,\n  //医保初始化\n  readCardInfo: readCardInfo,\n  //读卡\n  ecCardInfo: ecCardInfo,\n  //电子社保卡\n  ecInfo: ecInfo,\n  //电子医保凭证\n  idCardTest: idCardTest //身份证获取参保信息\n\n};",{"version":3,"sources":["E:/兴才svn平台/01苏州医保局/88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）/0工程/5Vue/SZYBGZDTGL-avue/src/util/yb.js"],"names":["eframe","website","store","ip","port","ec_url","callInit","showWaiting","userInfo","state","user","form","card_passtype","api_name","api_version","access_key","api_access_key","secretkey","api_secret_key","org_id","fixmedins_code","area_code","fix_blng_admdvs","ext","console","log","JSON","stringify","callBackFun","data","hiddenWaiting","result","alertError","pErrMsg","showToast","callSysFun","funName","params","e","message","readCardInfo","succFun","failFun","pCardInfo","info","split","psnInfo","si_card_issue_area","card_sn","cardId","si_card_no","psn_name","resetInfo","version","beginDate","endDate","devCode","devNo","pBusiCardInfo","mdtrt_cert_type","mdtrt_cert_no","certno","psn_cert_type","fixmedins_id","isNotNull","isSave","submitTargetForm","url","actionFunName","isYB","ecCardInfo","parse","pOutData","code","si_no","name","gender","id_no","id_type","ecToken","ecCardToken","ecInfo","orgId","businessType","operatorId","psn_code","operatorName","officeId","caty","officeName","dept_name","userName","idType","insuOrg","idNo","ecIndexNo","brdy","birthday","nationality","email","userId","idCardTest","isNull"],"mappings":"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","sourcesContent":["//医保JS\r\nimport eframe from '/src/util/eframe';\r\nimport website from '../config/website';\r\nimport store from \"/src/store/index\";\r\n\r\nconst ip = \"10.58.70.177\"; //医保测试http://10.58.70.177:8086/CSB\r\n// const ip = \"10.61.152.33\"; //医保正式http://10.61.152.33:8086/CSB\r\nconst port = \"8086\";\r\nconst ec_url = \"http://10.72.42.210:10081/test/localcfc/api/hsecfc/localQrCodeQuery\";   //测试\r\n// const ec_url = \"http://10.58.33.207:10086/localcfc/api/hsecfc/localQrCodeQuery\";  //正式\r\n\r\n//医保初始化\r\nexport function callInit() {\r\n    try {\r\n        eframe.showWaiting();\r\n        let userInfo = store.state.user.userInfo;\r\n        let form = {\r\n            ip: ip, //服务端IP地址\r\n            port: port,\t//服务端端口\r\n            card_passtype: \"1\",\t//社保卡验证密码方式\r\n            ec_url: ec_url,\t//电子凭证中台URL\r\n            api_name: userInfo.api_name,\t//CSB的_api_name\r\n            api_version: userInfo.api_version,\t//CSB的api_version\r\n            access_key: userInfo.api_access_key,\t//CSB的api_access_key\r\n            secretkey: userInfo.api_secret_key,\t//CSB的secretKey\r\n            org_id: userInfo.fixmedins_code,\t//定点编号\r\n            area_code: userInfo.fix_blng_admdvs,\t//定点所属行政区划代码\r\n            ext: \"\",\t//JSON对象字符串\r\n        };\r\n        console.log(\"医保初始化开始--\" + JSON.stringify(form));\r\n        let callBackFun = function (data) {\r\n            eframe.hiddenWaiting();\r\n            console.log(\"医保初始化结束：\" + JSON.stringify(data));\r\n            if (data.result !== 0) {\r\n                eframe.alertError(\"医保初始化失败：\" + JSON.stringify(data.pErrMsg));\r\n            } else {\r\n                eframe.showToast(\"医保初始化成功\");\r\n            }\r\n        };\r\n        eframe.callSysFun({\r\n            funName: 'init',\r\n            params: form,\r\n            callBackFun: callBackFun,\r\n        });\r\n    } catch (e) {\r\n        eframe.alertError(\"医保初始化失败：\" + e.message);\r\n    } finally {\r\n        eframe.hiddenWaiting();\r\n    }\r\n\r\n}\r\n\r\n//读卡\r\nexport function readCardInfo(params, succFun, failFun) {\r\n    console.log(\"读卡开始-------\");\r\n    try {\r\n        let callBackFun = function (data) {\r\n            console.log(\"读卡结束：\" + JSON.stringify(data));\r\n            if (data.result !== 0) {\r\n                eframe.alertError(\"医保卡读卡失败：\" + data.pCardInfo);\r\n                if (typeof failFun == 'function') {\r\n                    failFun(data);\r\n                }\r\n            } else {\r\n                let info = data.pCardInfo.split(\"|\");\r\n                let psnInfo = {\r\n                    si_card_issue_area: info[0],//发卡地区行政区划代码\r\n                    card_sn: info[1],//社会保障卡卡号\r\n                    cardId: info[2],//卡号\r\n                    si_card_no: info[3],//卡识别码\r\n                    psn_name: info[4],//姓名\r\n                    resetInfo: info[5],//卡复位信息\r\n                    version: info[6],//规范版本\r\n                    beginDate: info[7],//发卡日期\r\n                    endDate: info[8],//卡有效期\r\n                    devCode: info[9],//终端机编号\r\n                    devNo: info[10],//终端设备号\r\n                    pBusiCardInfo: data.pBusiCardInfo,//业务卡串\r\n                    mdtrt_cert_type: \"03\",\r\n                }\r\n                psnInfo.mdtrt_cert_no = psnInfo.cardId + '|' + psnInfo.pBusiCardInfo;//就诊凭证编号\r\n                psnInfo.certno = psnInfo.card_sn;//卡号-证件号\r\n                psnInfo.psn_cert_type = \"90\";//证件类型\r\n                psnInfo.fixmedins_id = params.fixmedins_id;//机构ID\r\n                let funName = \"readCardInfo\";\r\n                if (eframe.isNotNull(params.isSave) && params.isSave) {\r\n                    funName = \"readCardAndSave\";\r\n                }\r\n                eframe.submitTargetForm({\r\n                    url: '/ehis/settlementmgmt/psnmgmt/psnInfo.action',\r\n                    form: psnInfo,\r\n                    actionFunName: funName,\r\n                    succFun: succFun,\r\n                    failFun: failFun\r\n                });\r\n            }\r\n        };\r\n        if (website.isYB) {\r\n            eframe.callSysFun({\r\n                funName: 'readCardBas',\r\n                params: {},\r\n                callBackFun: callBackFun,\r\n            });\r\n        } else {\r\n            // TODO 模拟\r\n            let data = {\r\n                result: 0,\r\n                pCardInfo: \"320500|410305199311122044|183760642|320500D1560000…DCC75B|2.00|20201019||320500902398||JSE165319722|\",\r\n                pBusiCardInfo: \"twCSljjR1u2h6rS3gRDe3D+G9rHAf+A77BOAAJlY54uYHlwKHN…PSS+/l2gi31AxWdqALHxNPM821OouBoCoeeQJrSKr0uF42kc=\"\r\n            }\r\n            callBackFun(data);\r\n        }\r\n    } catch (e) {\r\n        eframe.alertError(\"医保卡读卡失败：\" + e.message);\r\n        if (typeof failFun == 'function') {\r\n            failFun();\r\n        }\r\n    } finally {\r\n\r\n    }\r\n\r\n}\r\n\r\n//电子社保卡\r\nexport function ecCardInfo(params, succFun, failFun) {\r\n    console.log(\"电子社保卡扫码开始-------\")\r\n    try {\r\n        let callBackFun = function (data) {\r\n            console.log(\"电子社保卡扫码结束：\" + JSON.stringify(data));\r\n            if (data.result !== 0 || JSON.parse(data.pOutData).code != 0) {\r\n                eframe.alertError(\"电子社保卡解码失败：\" + JSON.stringify(data.pOutData));\r\n                if (typeof failFun == 'function') {\r\n                    failFun(data);\r\n                }\r\n            } else {\r\n                let info = JSON.parse(data.pOutData).data;\r\n                let psnInfo = {\r\n                    card_sn: info.si_no,//社会保障卡卡号(社会保障号码)\r\n                    si_card_no: info.si_card_no,//卡识别码(人员识别号)\r\n                    si_card_issue_area: info.si_card_issue_area,//发卡地区行政区划代码\r\n                    psn_name: info.name,//姓名\r\n                    gender: info.gender,//性别\r\n                    cardId: info.id_no,//卡号（证件号码）\r\n                    psn_cert_type: info.id_type,//证件类型\r\n                    mdtrt_cert_type: \"04\", //就诊凭证类型\r\n                    ecToken: info.ecCardToken,//令牌\r\n                }\r\n                psnInfo.mdtrt_cert_no = psnInfo.cardId + \"|\" + psnInfo.ecToken;//就诊凭证编号\r\n                psnInfo.certno = psnInfo.cardId;//卡号-证件号\r\n                psnInfo.fixmedins_id = params.fixmedins_id;//机构ID\r\n\r\n                let funName = \"readCardInfo\";\r\n                if (eframe.isNotNull(params.isSave) && params.isSave) {\r\n                    funName = \"readCardAndSave\";\r\n                }\r\n                eframe.submitTargetForm({\r\n                    url: '/ehis/settlementmgmt/psnmgmt/psnInfo.action',\r\n                    form: psnInfo,\r\n                    actionFunName: funName,\r\n                    succFun: succFun,\r\n                    failFun: failFun\r\n                });\r\n            }\r\n        };\r\n        if (website.isYB) {\r\n            eframe.callSysFun({\r\n                funName: 'ecCardQuery',\r\n                params: {},\r\n                callBackFun: callBackFun,\r\n            });\r\n        } else {\r\n            //TODO 模拟\r\n            let data = {\r\n                result: 0,\r\n                pOutData: {\r\n                    \"code\": 0,\r\n                    \"message\": \"\",\r\n                    \"data\": {\r\n                        \"si_no\": \"320981199804163722\",\r\n                        \"si_card_no\": \"JSJ048625595\",\r\n                        \"si_card_issue_area\": \"320900\",\r\n                        \"name\": \"臧莉\",\r\n                        \"gender\": \"2\",\r\n                        \"id_type\": \"01\",\r\n                        \"id_no\": \"320981199804163722\",\r\n                        \"ecCardToken\": \"o/2NdFs1ir+7WzI+2z9iNva526mq/7TQW2ipQ2HPVF2GZMg1Fc+zLDqStmIdW/JOLXP/UltfvrU4FK//MxEDVTjhRKkBi9EsWlD9KZucYuge3J8yOA/fJR1mjiXrg5Rl/PRVpLSH9U2G2S3FHbJAlQ==\"\r\n                    }\r\n                },\r\n            }\r\n            callBackFun(data);\r\n        }\r\n    } catch (e) {\r\n        eframe.alertError(\"电子社保卡扫码失败：\" + e.message);\r\n        if (typeof failFun == 'function') {\r\n            failFun();\r\n        }\r\n    } finally {\r\n\r\n    }\r\n}\r\n\r\n//电子医保凭证\r\nexport function ecInfo(params, succFun, failFun) {\r\n    try {\r\n        let form = {\r\n            orgId: params.fixmedins_code,//机构ID\r\n            businessType: params.businessType,//用码业务类型\r\n            operatorId: params.psn_code,//收款员编号\r\n            operatorName: params.psn_name,//收款员姓名\r\n            officeId: params.caty,//医保科室编号\r\n            officeName: params.dept_name,//科室名称\r\n        };\r\n        console.log(\"电子医保凭证扫码开始--\" + JSON.stringify(form))\r\n        let callBackFun = function (data) {\r\n            console.log(\"电子医保凭证扫码结束：\" + JSON.stringify(data));\r\n            if (data.result !== 0 || data.pOutData.code !== 0) {\r\n                eframe.alertError(\"电子医保凭证解码失败：\" + JSON.stringify(data.pOutData.message));\r\n                if (typeof failFun == 'function') {\r\n                    failFun(data);\r\n                }\r\n            } else {\r\n                let info = data.pOutData.data;\r\n                let psnInfo = {\r\n                    psn_name: info.userName,//姓名\r\n                    psn_cert_type: info.idType,//证件类型\r\n                    ecToken: info.ecToken,//令牌\r\n                    insuOrg: info.insuOrg,//参保地区编码\r\n                    certno: info.idNo,//身份证号-证件号码\r\n                    ecIndexNo: info.ecIndexNo,//电子凭证索引号\r\n                    gender: info.gender,//性别\r\n                    brdy: info.birthday,//出生日期\r\n                    nationality: info.nationality,//国籍\r\n                    email: info.email,//邮箱\r\n                    mdtrt_cert_type: \"01\",\r\n                    mdtrt_cert_no: info.ecToken, //电子凭证令牌\r\n                }\r\n                psnInfo.fixmedins_id = params.fixmedins_id;//机构ID\r\n\r\n                let funName = \"readCardInfo\";\r\n                if (eframe.isNotNull(params.isSave) && params.isSave) {\r\n                    funName = \"readCardAndSave\";\r\n                }\r\n                eframe.submitTargetForm({\r\n                    url: '/ehis/settlementmgmt/psnmgmt/psnInfo.action',\r\n                    form: psnInfo,\r\n                    actionFunName: funName,\r\n                    succFun: succFun,\r\n                    failFun: failFun\r\n                });\r\n            }\r\n        };\r\n        if (website.isYB) {\r\n            eframe.callSysFun({\r\n                funName: 'ecQuery',\r\n                params: {\r\n                    orgId: params.fixmedins_code,//机构ID\r\n                    businessType: params.businessType,//用码业务类型\r\n                    operatorId: params.userId,//收款员编号\r\n                    operatorName: params.userName,//收款员姓名\r\n                    officeId: '',//医保科室编号\r\n                    officeName: '',//科室名称\r\n                },\r\n                callBackFun: callBackFun,\r\n            });\r\n        } else {\r\n            //TODO 模拟\r\n            let data = {\r\n                \"result\": 0,\r\n                \"pOutData\": {\r\n                    \"code\": 0,\r\n                    \"data\": {\r\n                        \"authNo\": null,\r\n                        \"birthday\": null,\r\n                        \"chnlId\": null,\r\n                        \"ecIndexNo\": \"6C03F0CDD8C35F17D336F01D2EFAEF5A\",\r\n                        \"ecQrCode\": null,\r\n                        \"ecToken\": \"320000ecnqssaor2nj7a2a480a0000a4cef57c\",\r\n                        \"email\": null,\r\n                        \"gender\": null,\r\n                        \"idNo\": \"37030519870924532X\",\r\n                        \"idType\": \"01\",\r\n                        \"insuOrg\": \"320500\",\r\n                        \"nationality\": null,\r\n                        \"userName\": \"王娜娜\"\r\n                    },\r\n                    \"message\": \"交易成功\",\r\n                    \"orgId\": \"\"\r\n                }\r\n            }\r\n            callBackFun(data);\r\n        }\r\n    } catch (e) {\r\n        eframe.alertError(\"电子医保凭证扫码失败：\" + e.message);\r\n        if (typeof failFun == 'function') {\r\n            failFun();\r\n        }\r\n    } finally {\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n//根据身份证获取参保信息\r\nexport function idCardTest(params, succFun, failFun) {\r\n    console.log(\"根据身份证获取参保信息开始-------\")\r\n    try {\r\n        console.log(JSON.stringify(params));\r\n        if (eframe.isNull(params.idNo)) {\r\n            eframe.alertError(\"身份证不能为空\");\r\n            failFun();\r\n        } else {\r\n            let psnInfo = {\r\n                idNo: params.idNo,//身份证号\r\n                mdtrt_cert_type: \"02\",\r\n                mdtrt_cert_no: params.idNo,//就诊凭证编号-身份证号码\r\n                fixmedins_id: params.fixmedins_id,//机构ID\r\n            }\r\n            let funName = \"readCardInfo\";\r\n            if (eframe.isNotNull(params.isSave) && params.isSave) {\r\n                funName = \"readCardAndSave\";\r\n            }\r\n            eframe.submitTargetForm({\r\n                url: '/ehis/settlementmgmt/psnmgmt/psnInfo.action',\r\n                form: psnInfo,\r\n                actionFunName: funName,\r\n                succFun: succFun,\r\n                failFun: failFun\r\n            });\r\n        }\r\n    } catch (e) {\r\n        eframe.alertError(\"根据身份证获取参保信息失败：\" + e.message);\r\n        if (typeof failFun == 'function') {\r\n            failFun();\r\n        }\r\n    } finally {\r\n\r\n    }\r\n}\r\n\r\nexport default {\r\n    callInit: callInit,   //医保初始化\r\n    readCardInfo: readCardInfo,//读卡\r\n    ecCardInfo: ecCardInfo,//电子社保卡\r\n    ecInfo: ecInfo,//电子医保凭证\r\n    idCardTest: idCardTest,//身份证获取参保信息\r\n}"]}]}