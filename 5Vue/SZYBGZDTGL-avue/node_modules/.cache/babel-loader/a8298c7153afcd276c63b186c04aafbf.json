{"remainingRequest":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\api\\crud\\index.js","dependencies":[{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\api\\crud\\index.js","mtime":1640694382063},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import request from '@/router/axios';\nimport { baseUrl } from '@/config/env';\nimport constData from \"../../const\";\n\nfunction formatURL(url) {\n  var baseUrl = constData.baseUrl;\n\n  if (ELECTRON_FLAG) {\n    baseUrl = constData.electronBaseUrl;\n  }\n\n  alert(\"baseUrl::::\" + baseUrl);\n\n  if (url.indexOf(\"http:\") == 0 || url.indexOf(\"https:\") == 0) {} else if (url.indexOf(\"//\") == 0) {\n    url = url.substring(1);\n  } else {\n    if (url.indexOf(\"/\") == 0) {\n      url = baseUrl + url;\n    } else {\n      url = baseUrl + \"/\" + url;\n    }\n  }\n\n  return url;\n}\n\nexport var list = function list(data) {\n  return request({\n    url: formatURL('/crud/list'),\n    method: 'get',\n    meta: {\n      isSerialize: true\n    },\n    params: data\n  });\n};\nexport var del = function del(id) {\n  return request.delete(formatURL('/crud/delete'), {\n    params: {\n      id: id\n    }\n  });\n};\nexport var add = function add(data) {\n  return request({\n    url: formatURL('/crud/add'),\n    method: 'post',\n    meta: {\n      isSerialize: true\n    },\n    data: data\n  });\n};\nexport var update = function update(id, data) {\n  return request({\n    url: formatURL('/crud/update'),\n    method: 'put',\n    meta: {\n      isSerialize: true\n    },\n    data: data\n  });\n};",{"version":3,"sources":["C:/Users/10415/Desktop/0工程/5Vue/SZYBGZDTGL-avue/src/api/crud/index.js"],"names":["request","baseUrl","constData","formatURL","url","ELECTRON_FLAG","electronBaseUrl","alert","indexOf","substring","list","data","method","meta","isSerialize","params","del","id","delete","add","update"],"mappings":"AACA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,SAAP;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AAEtB,MAAIH,OAAO,GAAGC,SAAS,CAACD,OAAxB;;AACA,MAAGI,aAAH,EAAiB;AACfJ,IAAAA,OAAO,GAAGC,SAAS,CAACI,eAApB;AACD;;AACDC,EAAAA,KAAK,CAAC,gBAAcN,OAAf,CAAL;;AAEA,MAAIG,GAAG,CAACI,OAAJ,CAAY,OAAZ,KAAwB,CAAxB,IAA6BJ,GAAG,CAACI,OAAJ,CAAY,QAAZ,KAAyB,CAA1D,EAA6D,CAE5D,CAFD,MAEO,IAAIJ,GAAG,CAACI,OAAJ,CAAY,IAAZ,KAAqB,CAAzB,EAA4B;AACjCJ,IAAAA,GAAG,GAAGA,GAAG,CAACK,SAAJ,CAAc,CAAd,CAAN;AACD,GAFM,MAEA;AACL,QAAIL,GAAG,CAACI,OAAJ,CAAY,GAAZ,KAAoB,CAAxB,EAA2B;AACzBJ,MAAAA,GAAG,GAAGH,OAAO,GAAGG,GAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,GAAG,GAAGH,OAAO,GAAG,GAAV,GAAgBG,GAAtB;AACD;AACF;;AACD,SAAOA,GAAP;AACD;;AAED,OAAO,IAAMM,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD,EAAU;AAC5B,SAAOX,OAAO,CAAC;AACbI,IAAAA,GAAG,EAAED,SAAS,CAAE,YAAF,CADD;AAEbS,IAAAA,MAAM,EAAE,KAFK;AAGbC,IAAAA,IAAI,EAAE;AACJC,MAAAA,WAAW,EAAE;AADT,KAHO;AAMbC,IAAAA,MAAM,EAAEJ;AANK,GAAD,CAAd;AAQD,CATM;AAUP,OAAO,IAAMK,GAAG,GAAG,SAANA,GAAM,CAACC,EAAD;AAAA,SAAQjB,OAAO,CAACkB,MAAR,CAAef,SAAS,CAAE,cAAF,CAAxB,EAA2C;AACpEY,IAAAA,MAAM,EAAE;AACNE,MAAAA,EAAE,EAAFA;AADM;AAD4D,GAA3C,CAAR;AAAA,CAAZ;AAKP,OAAO,IAAME,GAAG,GAAG,SAANA,GAAM,CAACR,IAAD;AAAA,SAAUX,OAAO,CAAC;AACnCI,IAAAA,GAAG,EAAED,SAAS,CAAE,WAAF,CADqB;AAEnCS,IAAAA,MAAM,EAAE,MAF2B;AAGnCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,WAAW,EAAE;AADT,KAH6B;AAMnCH,IAAAA,IAAI,EAAEA;AAN6B,GAAD,CAAjB;AAAA,CAAZ;AAQP,OAAO,IAAMS,MAAM,GAAG,SAATA,MAAS,CAACH,EAAD,EAAKN,IAAL;AAAA,SAAcX,OAAO,CAAC;AAC1CI,IAAAA,GAAG,EAAED,SAAS,CAAE,cAAF,CAD4B;AAE1CS,IAAAA,MAAM,EAAE,KAFkC;AAG1CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,WAAW,EAAE;AADT,KAHoC;AAM1CH,IAAAA,IAAI,EAAEA;AANoC,GAAD,CAArB;AAAA,CAAf","sourcesContent":["\r\nimport request from '@/router/axios';\r\nimport { baseUrl } from '@/config/env';\r\nimport constData from \"../../const\";\r\n\r\nfunction formatURL(url) {\r\n\r\n  let baseUrl = constData.baseUrl;\r\n  if(ELECTRON_FLAG){\r\n    baseUrl = constData.electronBaseUrl;\r\n  }\r\n  alert(\"baseUrl::::\"+baseUrl);\r\n\r\n  if (url.indexOf(\"http:\") == 0 || url.indexOf(\"https:\") == 0) {\r\n\r\n  } else if (url.indexOf(\"//\") == 0) {\r\n    url = url.substring(1);\r\n  } else {\r\n    if (url.indexOf(\"/\") == 0) {\r\n      url = baseUrl + url;\r\n    } else {\r\n      url = baseUrl + \"/\" + url;\r\n    }\r\n  }\r\n  return url;\r\n}\r\n\r\nexport const list = (data) => {\r\n  return request({\r\n    url: formatURL( '/crud/list'),\r\n    method: 'get',\r\n    meta: {\r\n      isSerialize: true\r\n    },\r\n    params: data\r\n  })\r\n}\r\nexport const del = (id) => request.delete(formatURL( '/crud/delete'), {\r\n  params: {\r\n    id\r\n  }\r\n})\r\nexport const add = (data) => request({\r\n  url: formatURL( '/crud/add'),\r\n  method: 'post',\r\n  meta: {\r\n    isSerialize: true\r\n  },\r\n  data: data\r\n})\r\nexport const update = (id, data) => request({\r\n  url: formatURL( '/crud/update'),\r\n  method: 'put',\r\n  meta: {\r\n    isSerialize: true\r\n  },\r\n  data: data\r\n})\r\n\r\n\r\n\r\n"]}]}