{"remainingRequest":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-element-comps\\EfTextarea.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-element-comps\\EfTextarea.vue","mtime":1646708687757},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BaseFieldTag } from \"./BaseFieldTag\";\nexport default {\n  name: \"EfTextarea\",\n  mixins: [BaseFieldTag],\n  //继承基础BaseFieldTag\n  props: {\n    placeholder: {\n      // 选择框提示文字，默认‘请选择’，非必传。\n      type: String,\n      default: \"\"\n    },\n    maxlength: {\n      require: false,\n      type: [String, Number],\n      default: null\n    },\n    minlength: {\n      require: false,\n      type: [String, Number],\n      default: null\n    },\n    rows: {\n      require: false,\n      type: [String, Number],\n      default: 2\n    },\n    autosize: {\n      require: false,\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      componentType: 'EfTextarea',\n      compMaxLength: null,\n      compMinLength: null,\n      compRows: 2\n    };\n  },\n  watch: {\n    value: {\n      //深度监听，可监听到对象、数组的变化\n      immediate: true,\n      handler: function handler(val) {\n        this.compValue = val;\n      } // deep: true //true 深度监听\n\n    }\n  },\n  computed: {\n    formStyle: function formStyle() {\n      return this.$store.state.common.formStyle;\n    },\n    placeholderClass: function placeholderClass() {\n      return this.$store.state.common.formStyle[0].size;\n    },\n    appStyle: function appStyle() {\n      return this.$store.state.common.appStyle;\n    }\n  },\n  created: function created() {\n    if (typeof this.maxlength === \"string\") {\n      this.compMaxLength = Number(this.maxlength);\n    } else {\n      this.compMaxLength = this.maxlength;\n    }\n\n    if (typeof this.minlength === \"string\") {\n      this.compMinLength = Number(this.minlength);\n    } else {\n      this.compMinLength = this.minlength;\n    }\n\n    if (typeof this.rows === \"string\") {\n      this.compRows = Number(this.rows);\n    } else {\n      this.compRows = this.rows;\n    }\n  },\n  methods: {\n    input: function input(val) {\n      this.$emit('compChange', val);\n      this.$emit('onInput', val);\n    },\n    setFocus: function setFocus() {\n      this.$refs[this.name].focus();\n      this.$refs[this.name].select();\n    },\n    setBlur: function setBlur() {\n      this.$refs[this.name].blur();\n    },\n    focus: function focus(val) {\n      this.$emit('compFocus', val);\n    },\n    blur: function blur(val) {\n      this.$emit('compBlur', val);\n    }\n  }\n};",{"version":3,"sources":["EfTextarea.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <el-form-item :class=\"placeholderClass\" :label-width=\"compLabelWidth\" :label=\"label\" :prop=\"name\" :rules=\"rules\" inline-message=\"true\">\r\n      <span slot=\"label\">{{ label }}</span>\r\n      <el-input\r\n          :ref=\"name\"\r\n          :style=\"appStyle\"\r\n                type=\"textarea\"\r\n                v-model=\"compValue\"\r\n                :placeholder=\"placeholder\"\r\n                @input=\"input\"\r\n                @change=\"change\"\r\n                :disabled=\"compReadonly\"\r\n                :maxlength=\"compMaxLength\"\r\n                :minlength=\"compMinLength\"\r\n                :rows=\"compRows\"\r\n                :autosize=\"autosize\"\r\n          @focus=\"focus\" @blur=\"blur\"\r\n                show-word-limit\r\n        />\r\n    </el-form-item>\r\n</template>\r\n\r\n<script>\r\n    import {BaseFieldTag} from './BaseFieldTag';\r\n\r\n    export default {\r\n        name: \"EfTextarea\",\r\n        mixins: [BaseFieldTag],         //继承基础BaseFieldTag\r\n        props:{\r\n            placeholder: { // 选择框提示文字，默认‘请选择’，非必传。\r\n                type: String,\r\n                default: \"\",\r\n            },\r\n            maxlength:{\r\n                require:false,\r\n                type: [String,Number],\r\n                default:null\r\n            },\r\n            minlength:{\r\n                require:false,\r\n                type: [String,Number],\r\n                default:null\r\n            },\r\n            rows:{\r\n                require:false,\r\n                type: [String,Number],\r\n                default:2\r\n            },\r\n            autosize:{\r\n              require:false,\r\n              type:Boolean,\r\n              default:false\r\n            },\r\n        },\r\n        data(){\r\n            return {\r\n                componentType:'EfTextarea',\r\n                compMaxLength:null,\r\n                compMinLength:null,\r\n                compRows:2,\r\n            };\r\n        },\r\n      watch: {\r\n        value: {//深度监听，可监听到对象、数组的变化\r\n          immediate: true,\r\n          handler(val) {\r\n            this.compValue=val;\r\n          },\r\n          // deep: true //true 深度监听\r\n        }\r\n      },\r\n      computed:{\r\n        formStyle(){\r\n          return this.$store.state.common.formStyle\r\n        },\r\n        placeholderClass(){\r\n          return this.$store.state.common.formStyle[0].size\r\n        },\r\n        appStyle(){\r\n          return this.$store.state.common.appStyle\r\n        }\r\n      },\r\n        created() {\r\n\r\n            if (typeof (this.maxlength) === \"string\") {\r\n                this.compMaxLength = Number(this.maxlength) ;\r\n            } else {\r\n                this.compMaxLength = this.maxlength;\r\n            }\r\n            if (typeof (this.minlength) === \"string\") {\r\n                this.compMinLength = Number(this.minlength) ;\r\n            } else {\r\n                this.compMinLength = this.minlength;\r\n            }\r\n            if (typeof (this.rows) === \"string\") {\r\n                this.compRows = Number(this.rows) ;\r\n            } else {\r\n                this.compRows = this.rows;\r\n            }\r\n        },\r\n        methods:{\r\n            input(val){\r\n                this.$emit('compChange', val);\r\n                this.$emit('onInput', val);\r\n            },\r\n          setFocus(){\r\n            this.$refs[this.name].focus()\r\n            this.$refs[this.name].select()\r\n          },\r\n          setBlur(){\r\n            this.$refs[this.name].blur()\r\n          },\r\n          focus(val) {\r\n            this.$emit('compFocus', val);\r\n          },\r\n          blur(val) {\r\n            this.$emit('compBlur', val);\r\n          },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/ef-element-comps"}]}