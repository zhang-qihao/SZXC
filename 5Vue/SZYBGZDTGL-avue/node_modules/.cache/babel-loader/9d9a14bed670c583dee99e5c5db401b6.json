{"remainingRequest":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\page\\index\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\page\\index\\index.vue","mtime":1658977808619},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nimport IndexT1 from \"./index-T1\";\nimport IndexT2 from \"./index-T2\";\nimport { mapGetters } from \"vuex\";\nimport yb from \"/src/util/yb\";\nimport eframe from \"/src/util/eframe\";\nimport admin from \"/src/util/admin\";\nimport { validatenull } from \"/src/util/validate\";\nimport { calcDate } from \"/src/util/date.js\";\nimport { getStore } from \"/src/util/store.js\";\nimport servpara from \"/src/util/servpara\";\nexport default {\n  components: {\n    IndexT1: IndexT1,\n    IndexT2: IndexT2\n  },\n  name: \"index\",\n  computed: mapGetters([\"website\", \"userInfo\"]),\n  data: function data() {\n    return {\n      //刷新token锁\n      refreshLock: false,\n      //刷新token的时间\n      refreshTime: \"\"\n    };\n  },\n  created: function created() {\n    //实时检测刷新token\n    this.refreshToken(); //缓存常用字典\n\n    this.loadDic();\n\n    if (this.userInfo.fix_onln_open_flag === \"1\" && this.userInfo.fix_flag === \"1\") {\n      this.ybSignIn(); //签到\n\n      if (this.website.isYB) {\n        this.initYB();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    //初始化医保\n    initYB: function initYB() {\n      setTimeout(function () {\n        yb.callInit();\n      }, 5000);\n    },\n    //签到\n    ybSignIn: function ybSignIn() {\n      var succFun = function succFun(data) {};\n\n      var failFun = function failFun(data) {};\n\n      this.$eframe.submitTargetForm({\n        url: '/userloginmgmt/signIn.action',\n        form: {},\n        actionFunName: \"signIn\",\n        succFun: succFun,\n        failFun: failFun\n      });\n    },\n    // 屏幕检测\n    init: function init() {\n      var _this = this;\n\n      this.$store.commit(\"SET_SCREEN\", admin.getScreen());\n\n      window.onresize = function () {\n        setTimeout(function () {\n          _this.$store.commit(\"SET_SCREEN\", admin.getScreen());\n        }, 0);\n      };\n    },\n    // 10分钟检测一次token\n    refreshToken: function refreshToken() {\n      var _this2 = this;\n\n      this.refreshTime = setInterval(function () {\n        var token = getStore({\n          name: \"token\",\n          debug: true\n        }) || {};\n        var date = calcDate(token.datetime, new Date().getTime());\n        if (validatenull(date)) return;\n\n        if (date.seconds >= _this2.website.tokenTime && !_this2.refreshLock) {\n          _this2.refreshLock = true;\n\n          _this2.$store.dispatch(\"RefeshToken\").then(function () {\n            _this2.refreshLock = false;\n          }).catch(function () {\n            _this2.refreshLock = false;\n          });\n        }\n      }, this.website.refreshTime); //毫秒\n    },\n    //缓存常用字典\n    loadDic: function loadDic() {// eframe.loadDicItem({dicId: \"DIC_FLAG\"});//是否\n      // eframe.loadDicItem({dicId: \"DIC_GEND\"});//性别\n      // eframe.loadDicItem({dicId: \"DIC_PSN_TYPE\"});//人员类别\n      // eframe.loadDicItem({dicId: \"DIC_INSUTYPE\"});//险种类型\n      // eframe.loadDicItem({dicId: \"DIC_INSU_ADMDVS_SZ\"});//参保所属医保区划\n      // eframe.loadDicItem({dicId: \"DIC_FEE_TYPE\"});//就诊类别\n      // eframe.loadDicItem({dicId: \"DIC_SETL_TYPE\"});//收费类别\n      // eframe.loadDicItem({dicId: \"DIC_MED_TYPE\"});//医疗类别\n      // //对账\n      // eframe.loadDicItem({dicId: \"DIC_STMT_RSLT\"});//对账结果\n      // eframe.loadDicItem({dicId: \"DIC_STMT_CLRTYPE_BD\"});//本地清算类别\n      // servpara.getConfigArea();\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div style=\"width: 100%;height: 100%\">\r\n    <IndexT1 v-if=\"website.mainPageFrameType == 'T1'\"/>\r\n    <IndexT2 v-if=\"website.mainPageFrameType == 'T2'\"/>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport IndexT1 from \"./index-T1\"\r\nimport IndexT2 from \"./index-T2\"\r\nimport {mapGetters} from \"vuex\";\r\nimport yb from \"/src/util/yb\";\r\nimport eframe from \"/src/util/eframe\";\r\nimport admin from \"/src/util/admin\";\r\nimport {validatenull} from \"/src/util/validate\";\r\nimport {calcDate} from \"/src/util/date.js\";\r\nimport {getStore} from \"/src/util/store.js\";\r\nimport servpara from \"/src/util/servpara\";\r\n\r\n\r\nexport default {\r\n  components: {\r\n    IndexT1,\r\n    IndexT2\r\n  },\r\n  name: \"index\",\r\n  computed: mapGetters([\"website\", \"userInfo\"]),\r\n  data() {\r\n    return {\r\n      //刷新token锁\r\n      refreshLock: false,\r\n      //刷新token的时间\r\n      refreshTime: \"\"\r\n    };\r\n  },\r\n  created() {\r\n    //实时检测刷新token\r\n    this.refreshToken();\r\n    //缓存常用字典\r\n    this.loadDic();\r\n    if (this.userInfo.fix_onln_open_flag === \"1\" && this.userInfo.fix_flag === \"1\"){\r\n      this.ybSignIn();//签到\r\n      if (this.website.isYB) {\r\n        this.initYB();\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n\r\n  methods: {\r\n    //初始化医保\r\n    initYB() {\r\n      setTimeout(() => {\r\n        yb.callInit();\r\n      }, 5000);\r\n    },\r\n    //签到\r\n    ybSignIn(){\r\n      let succFun = function (data) {\r\n\r\n      };\r\n      let failFun = function (data) {\r\n\r\n      };\r\n      this.$eframe.submitTargetForm({\r\n        url: '/userloginmgmt/signIn.action',\r\n        form: {},\r\n        actionFunName: \"signIn\",\r\n        succFun: succFun,\r\n        failFun: failFun,\r\n      });\r\n    },\r\n    // 屏幕检测\r\n    init() {\r\n      this.$store.commit(\"SET_SCREEN\", admin.getScreen());\r\n      window.onresize = () => {\r\n        setTimeout(() => {\r\n          this.$store.commit(\"SET_SCREEN\", admin.getScreen());\r\n        }, 0);\r\n      };\r\n    },\r\n\r\n    // 10分钟检测一次token\r\n    refreshToken() {\r\n      this.refreshTime = setInterval(() => {\r\n        const token = getStore({\r\n          name: \"token\",\r\n          debug: true\r\n        }) || {};\r\n        const date = calcDate(token.datetime, new Date().getTime());\r\n        if (validatenull(date)) return;\r\n        if (date.seconds >= this.website.tokenTime && !this.refreshLock) {\r\n          this.refreshLock = true;\r\n          this.$store.dispatch(\"RefeshToken\")\r\n              .then(() => {\r\n                this.refreshLock = false;\r\n              })\r\n              .catch(() => {\r\n                this.refreshLock = false;\r\n              });\r\n        }\r\n      },  this.website.refreshTime); //毫秒\r\n    },\r\n    //缓存常用字典\r\n    loadDic() {\r\n      // eframe.loadDicItem({dicId: \"DIC_FLAG\"});//是否\r\n      // eframe.loadDicItem({dicId: \"DIC_GEND\"});//性别\r\n      // eframe.loadDicItem({dicId: \"DIC_PSN_TYPE\"});//人员类别\r\n      // eframe.loadDicItem({dicId: \"DIC_INSUTYPE\"});//险种类型\r\n      // eframe.loadDicItem({dicId: \"DIC_INSU_ADMDVS_SZ\"});//参保所属医保区划\r\n      // eframe.loadDicItem({dicId: \"DIC_FEE_TYPE\"});//就诊类别\r\n      // eframe.loadDicItem({dicId: \"DIC_SETL_TYPE\"});//收费类别\r\n      // eframe.loadDicItem({dicId: \"DIC_MED_TYPE\"});//医疗类别\r\n      // //对账\r\n      // eframe.loadDicItem({dicId: \"DIC_STMT_RSLT\"});//对账结果\r\n      // eframe.loadDicItem({dicId: \"DIC_STMT_CLRTYPE_BD\"});//本地清算类别\r\n      // servpara.getConfigArea();\r\n    }\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src/page/index"}]}