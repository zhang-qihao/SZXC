{"remainingRequest":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-element-comps\\EfRadio.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-element-comps\\EfRadio.vue","mtime":1640694382233},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BaseFieldTag } from \"./BaseFieldTag\";\nimport store from \"../../store\";\nexport default {\n  name: \"EfRadio\",\n  mixins: [BaseFieldTag],\n  //继承基础BaseFieldTag\n  props: {\n    dictionaryNo: {\n      // 数据字典编号。\n      type: String,\n      default: null\n    },\n    dictionaryGroup: {\n      //分组\n      type: String,\n      default: null\n    },\n    list: {\n      //分组\n      type: [String, Array],\n      default: null\n    },\n    listKey: {\n      //列中内容字段\n      type: String,\n      default: 'code'\n    },\n    listValue: {\n      //列中标题字段\n      type: String,\n      default: \"name\"\n    },\n    queryNo: {\n      //列中标题字段\n      type: String,\n      default: null\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  watch: {\n    value: {\n      //深度监听，可监听到对象、数组的变化\n      immediate: true,\n      handler: function handler(val) {\n        this.compValue = val;\n      } // deep: true //true 深度监听\n\n    }\n  },\n  computed: {\n    formStyle: function formStyle() {\n      return this.$store.state.common.formStyle;\n    }\n  },\n  created: function created() {\n    this.getOptions();\n  },\n  methods: {\n    /**\r\n     * 选择框change事件，将所选值和所选值所在的对象回传给父组件\r\n     * @val {String} 当前选中值\r\n     **/\n    change: function change(val) {\n      this.$emit('compChange', val); // 更新 model\n\n      this.$emit('onChange', val);\n    },\n\n    /**\r\n     * 获取选择项数据\r\n     */\n    getOptions: function getOptions() {\n      var _this = this;\n\n      if (this.dictionaryNo) {\n        //this.$eframe.loadDicItem( {dicId:this.dictionaryNo},(data)=>{ this.optionLists = data;  } );\n        var form = {\n          dicId: this.dictionaryNo,\n          dicListGroup: '',\n          //字典分组\n          language: '',\n          //语种\n          catchFlag: this.compCatch //是否使用缓存，默认true\n\n        };\n        store.dispatch('LoadDicItem', form).then(function (data) {\n          _this.optionLists = data;\n        }).catch(function (msg) {\n          _this.$eframe.alertError(msg);\n        });\n        return;\n      }\n\n      if (this.list) {\n        if (this.$eframe.isArray(this.list)) {\n          // 如果父组件有下拉选项数据，则不进行数据请求\n          this.optionLists = this.list;\n        } else if (typeof this.list === \"string\") {\n          // 如果父组件有下拉选项数据，则不进行数据请求\n          this.optionLists = JSON.parse(this.list);\n        }\n\n        return;\n      }\n    }\n  }\n};",{"version":3,"sources":["EfRadio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAgBA,SAAA,YAAA;AACA,OAAA,KAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,MAAA,EAAA,CAAA,YAAA,CAFA;AAEA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,YAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,eAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,IAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,OAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,SAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,OAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AArBA,GAHA;AA6BA,EAAA,IA7BA,kBA6BA;AACA,WAAA,EAAA;AAEA,GAhCA;AAiCA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,OAFA,mBAEA,GAFA,EAEA;AACA,aAAA,SAAA,GAAA,GAAA;AACA,OAJA,CAKA;;AALA;AADA,GAjCA;AA0CA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,SAAA;AACA;AAHA,GA1CA;AA+CA,EAAA,OA/CA,qBA+CA;AACA,SAAA,UAAA;AACA,GAjDA;AAkDA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA;AACA,IAAA,MALA,kBAKA,GALA,EAKA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,GAAA,EADA,CACA;;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,GAAA;AACA,KARA;;AAUA;AACA;AACA;AACA,IAAA,UAbA,wBAaA;AAAA;;AACA,UAAA,KAAA,YAAA,EAAA;AACA;AACA,YAAA,IAAA,GAAA;AACA,UAAA,KAAA,EAAA,KAAA,YADA;AAEA,UAAA,YAAA,EAAA,EAFA;AAEA;AACA,UAAA,QAAA,EAAA,EAHA;AAGA;AACA,UAAA,SAAA,EAAA,KAAA,SAJA,CAIA;;AAJA,SAAA;AAMA,QAAA,KAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA,EAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AAAA,UAAA,KAAA,CAAA,WAAA,GAAA,IAAA;AAAA,SAAA,EAAA,KAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,UAAA,CAAA,GAAA;AACA,SAFA;AAGA;AACA;;AACA,UAAA,KAAA,IAAA,EAAA;AACA,YAAA,KAAA,OAAA,CAAA,OAAA,CAAA,KAAA,IAAA,CAAA,EAAA;AAAA;AACA,eAAA,WAAA,GAAA,KAAA,IAAA;AACA,SAFA,MAEA,IAAA,OAAA,KAAA,IAAA,KAAA,QAAA,EAAA;AAAA;AACA,eAAA,WAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA,IAAA,CAAA;AACA;;AACA;AACA;AACA;AAnCA;AAlDA,CAAA","sourcesContent":["<template>\r\n  <el-form-item  :label=\"label\" :prop=\"name\" :rules=\"rules\" :label-width=\"compLabelWidth\" inline-message=\"true\">\r\n    <span slot=\"label\">{{ label }}</span>\r\n    <el-radio-group v-model=\"compValue\">\r\n      <el-radio  v-for=\"item in optionLists\"\r\n                 :key=\"listKey ? item[listKey] : item.code\"\r\n                 :label=\"listKey ? item[listKey] : item.code\"\r\n                 @change=\"change\"\r\n                 :disabled=\"compReadonly\">\r\n        {{ listValue ? item[listValue] : item.name }}\r\n      </el-radio>\r\n    </el-radio-group>\r\n  </el-form-item>\r\n</template>\r\n\r\n<script>\r\nimport {BaseFieldTag} from './BaseFieldTag';\r\nimport store from \"../../store\";\r\nexport default {\r\n  name: \"EfRadio\",\r\n  mixins: [BaseFieldTag],         //继承基础BaseFieldTag\r\n  props: {\r\n    dictionaryNo: { // 数据字典编号。\r\n      type: String,\r\n      default: null,\r\n    },\r\n    dictionaryGroup: {  //分组\r\n      type: String,\r\n      default: null,\r\n    },\r\n    list: {  //分组\r\n      type: [String, Array],\r\n      default: null,\r\n    },\r\n    listKey: {  //列中内容字段\r\n      type: String,\r\n      default: 'code',\r\n    },\r\n    listValue: {  //列中标题字段\r\n      type: String,\r\n      default: \"name\",\r\n    },\r\n    queryNo: {  //列中标题字段\r\n      type: String,\r\n      default: null,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n    };\r\n  },\r\n  watch: {\r\n    value: {//深度监听，可监听到对象、数组的变化\r\n      immediate: true,\r\n      handler(val) {\r\n        this.compValue=val;\r\n      },\r\n      // deep: true //true 深度监听\r\n    },\r\n  },\r\n  computed:{\r\n    formStyle(){\r\n      return this.$store.state.common.formStyle\r\n    },\r\n  },\r\n  created(){\r\n    this.getOptions();\r\n  },\r\n  methods: {\r\n    /**\r\n     * 选择框change事件，将所选值和所选值所在的对象回传给父组件\r\n     * @val {String} 当前选中值\r\n     **/\r\n    change(val) {\r\n      this.$emit('compChange', val);    // 更新 model\r\n      this.$emit('onChange', val);\r\n    },\r\n\r\n    /**\r\n     * 获取选择项数据\r\n     */\r\n    getOptions() {\r\n      if(this.dictionaryNo){\r\n        //this.$eframe.loadDicItem( {dicId:this.dictionaryNo},(data)=>{ this.optionLists = data;  } );\r\n        let form={\r\n          dicId:this.dictionaryNo,\r\n          dicListGroup:'',  //字典分组\r\n          language:'', //语种\r\n          catchFlag:this.compCatch, //是否使用缓存，默认true\r\n        };\r\n        store.dispatch('LoadDicItem',form).then((data)=>{ this.optionLists = data;  }).catch((msg) => {\r\n          this.$eframe.alertError(msg);\r\n        });\r\n        return;\r\n      }\r\n      if(this.list) {\r\n        if (this.$eframe.isArray(this.list)) { // 如果父组件有下拉选项数据，则不进行数据请求\r\n          this.optionLists = this.list;\r\n        } else if (typeof (this.list) === \"string\") { // 如果父组件有下拉选项数据，则不进行数据请求\r\n          this.optionLists = JSON.parse(this.list);\r\n        }\r\n        return;\r\n      }\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/ef-element-comps"}]}