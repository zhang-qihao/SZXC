{"remainingRequest":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\router\\axios.js","dependencies":[{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\router\\axios.js","mtime":1657523630663},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _typeof from \"E:/\\u5174\\u624Dsvn\\u5E73\\u53F0/01\\u82CF\\u5DDE\\u533B\\u4FDD\\u5C40/88\\u82CF\\u5DDE\\u533B\\u4FDD\\u4E2D\\u5FC3\\u5C97\\u4F4D\\u804C\\u8D23\\u52A8\\u6001\\u7BA1\\u7406\\u7CFB\\u7EDF\\uFF08SZYBGZDTGL\\uFF09/0\\u5DE5\\u7A0B/5Vue/SZYBGZDTGL-avue/node_modules/@babel/runtime/helpers/esm/typeof\";\n\n/**\r\n * 全站http配置\r\n *\r\n * axios参数说明\r\n * isSerialize是否开启form表单提交\r\n * isToken是否需要token\r\n */\nimport axios from 'axios';\nimport store from '@/store/';\nimport router from '@/router/router';\nimport { serialize } from '@/util/util';\nimport { getToken } from '@/util/auth';\nimport { Message } from 'element-ui';\nimport website from '@/config/website';\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css';\nimport { getStore } from \"../util/store\";\nimport eframe from \"../util/eframe\"; // progress bar style\n\naxios.defaults.timeout = 1000000; //返回其他状态吗\n\naxios.defaults.validateStatus = function (status) {\n  return status >= 200 && status <= 500; // 默认的\n}; //跨域请求，允许保存cookie\n\n\naxios.defaults.withCredentials = true; // axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\n// axios.defaults.headers.post['Content-Type'] = 'multipart/form-data'\n// NProgress Configuration\n\nNProgress.configure({\n  showSpinner: false\n}); //HTTPrequest拦截\n\naxios.interceptors.request.use(function (config) {\n  if (eframe.isNotNull(config.data) && _typeof(config.data) != 'object') {\n    config.data = encryptAES(config.data);\n  }\n\n  NProgress.start(); // start progress bar\n\n  var meta = config.meta || {};\n  var isToken = meta.isToken === false;\n  var token = getStore({\n    name: 'token'\n  }); // if (getToken() && !isToken) {\n  //   config.headers[website.Authorization] = 'Bearer ' + getToken().data.token // 让每个请求携带token--['Authorization']为自定义key 请根据实际情况自行修改\n  // }\n\n  if (token && token.token && !isToken) {\n    config.headers[website.Authorization] = 'Bearer ' + token.token; // 让每个请求携带token--['Authorization']为自定义key 请根据实际情况自行修改\n  } //headers中配置serialize为true开启序列化\n\n\n  if (config.method === 'post' && meta.isSerialize === true) {\n    config.data = serialize(config.data);\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); //HTTPresponse拦截\n\naxios.interceptors.response.use(function (res) {\n  console.log(\"interceptors.response\");\n  NProgress.done();\n  var status = Number(res.status) || 200;\n  var statusWhiteList = website.statusWhiteList || [];\n  var message = res.data.message || res.data || '未知错误'; //如果是401则跳转到登录页面\n\n  if (status === 401) {\n    console.log(\"【axios】 1:\" + \"401则跳转到登录页面\");\n    store.dispatch('FedLogOut').then(function () {\n      return router.push({\n        path: '/login'\n      });\n    });\n    return Promise.reject(new Error(message));\n  }\n\n  if (status === 500) {\n    console.log(message);\n  }\n\n  return res.data;\n}, function (error) {\n  console.log(\"error\");\n  NProgress.done();\n  return Promise.reject(new Error(error));\n});\nexport default axios;",{"version":3,"sources":["E:/兴才svn平台/01苏州医保局/88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）/0工程/5Vue/SZYBGZDTGL-avue/src/router/axios.js"],"names":["axios","store","router","serialize","getToken","Message","website","NProgress","getStore","eframe","defaults","timeout","validateStatus","status","withCredentials","configure","showSpinner","interceptors","request","use","config","isNotNull","data","encryptAES","start","meta","isToken","token","name","headers","Authorization","method","isSerialize","error","Promise","reject","response","res","console","log","done","Number","statusWhiteList","message","dispatch","then","push","path","Error"],"mappings":"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","sourcesContent":["/**\r\n * 全站http配置\r\n *\r\n * axios参数说明\r\n * isSerialize是否开启form表单提交\r\n * isToken是否需要token\r\n */\r\nimport axios from 'axios'\r\nimport store from '@/store/';\r\nimport router from '@/router/router'\r\nimport { serialize } from '@/util/util'\r\nimport { getToken } from '@/util/auth'\r\nimport { Message } from 'element-ui'\r\nimport website from '@/config/website';\r\nimport NProgress from 'nprogress' // progress bar\r\nimport 'nprogress/nprogress.css'\r\nimport {getStore} from \"../util/store\";\r\nimport eframe from \"../util/eframe\"; // progress bar style\r\naxios.defaults.timeout = 1000000;\r\n//返回其他状态吗\r\naxios.defaults.validateStatus = function (status) {\r\n  return status >= 200 && status <= 500; // 默认的\r\n};\r\n//跨域请求，允许保存cookie\r\naxios.defaults.withCredentials = true;\r\n// axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\n// axios.defaults.headers.post['Content-Type'] = 'multipart/form-data'\r\n// NProgress Configuration\r\nNProgress.configure({\r\n  showSpinner: false\r\n});\r\n\r\n//HTTPrequest拦截\r\naxios.interceptors.request.use(config => {\r\n  if(eframe.isNotNull(config.data) && typeof (config.data)!='object'){\r\n    config.data=encryptAES(config.data);\r\n  }\r\n  NProgress.start() // start progress bar\r\n  const meta = (config.meta || {});\r\n  const isToken = meta.isToken === false;\r\n\r\n  const token=getStore({name:'token'});\r\n\r\n  // if (getToken() && !isToken) {\r\n  //   config.headers[website.Authorization] = 'Bearer ' + getToken().data.token // 让每个请求携带token--['Authorization']为自定义key 请根据实际情况自行修改\r\n  // }\r\n\r\n  if (token && token.token && !isToken) {\r\n    config.headers[website.Authorization] = 'Bearer ' + token.token// 让每个请求携带token--['Authorization']为自定义key 请根据实际情况自行修改\r\n  }\r\n\r\n  //headers中配置serialize为true开启序列化\r\n  if (config.method === 'post' && meta.isSerialize === true) {\r\n    config.data = serialize(config.data);\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\r\n  return Promise.reject(error)\r\n});\r\n//HTTPresponse拦截\r\naxios.interceptors.response.use(res => {\r\n  console.log(\"interceptors.response\");\r\n  NProgress.done();\r\n  const status = Number(res.status) || 200;\r\n  const statusWhiteList = website.statusWhiteList || [];\r\n  const message = res.data.message || res.data || '未知错误';\r\n\r\n  //如果是401则跳转到登录页面\r\n  if (status === 401) {\r\n    console.log(\"【axios】 1:\"+\"401则跳转到登录页面\");\r\n    store.dispatch('FedLogOut').then(() => router.push({ path: '/login' }));\r\n    return Promise.reject(new Error(message));\r\n  }\r\n  if (status === 500) {\r\n    console.log(message);\r\n  }\r\n\r\n  return res.data;\r\n}, error => {\r\n  console.log(\"error\");\r\n  NProgress.done();\r\n  return Promise.reject(new Error(error));\r\n})\r\n\r\nexport default axios;"]}]}