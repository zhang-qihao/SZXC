{"remainingRequest":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\mixins\\color.js","dependencies":[{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\mixins\\color.js","mtime":1640694387796},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"C:/Users/10415/Desktop/0\\u5DE5\\u7A0B/5Vue/SZYBGZDTGL-avue/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapGetters } from \"vuex\";\n\nvar version = require(\"element-ui/package.json\").version; // element-ui version from node_modules\n\n\nvar ORIGINAL_THEME = \"#5c90d2\"; // default color\n\nexport default function () {\n  return {\n    data: function data() {\n      return {\n        themeVal: ORIGINAL_THEME\n      };\n    },\n    created: function created() {\n      this.themeVal = this.colorName;\n    },\n    watch: {\n      themeVal: function themeVal(val, oldVal) {\n        this.$store.commit(\"SET_COLOR_NAME\", val);\n        this.updateTheme(val, oldVal);\n      }\n    },\n    computed: _objectSpread({}, mapGetters([\"colorName\"])),\n    methods: {\n      updateTheme: function updateTheme(val, oldVal) {\n        var _this = this;\n\n        if (typeof val !== \"string\") return;\n        var head = document.getElementsByTagName(\"head\")[0];\n        var themeCluster = this.getThemeCluster(val.replace(\"#\", \"\"));\n        var originalCluster = this.getThemeCluster(oldVal.replace(\"#\", \"\"));\n\n        var getHandler = function getHandler(variable, id) {\n          return function () {\n            var originalCluster = _this.getThemeCluster(ORIGINAL_THEME.replace(\"#\", \"\"));\n\n            var newStyle = _this.updateStyle(_this[variable], originalCluster, themeCluster);\n\n            var styleTag = document.getElementById(id);\n\n            if (!styleTag) {\n              styleTag = document.createElement(\"style\");\n              styleTag.setAttribute(\"id\", id);\n              head.appendChild(styleTag);\n            }\n\n            styleTag.innerText = newStyle;\n          };\n        };\n\n        var chalkHandler = getHandler(\"chalk\", \"chalk-style\");\n\n        if (!this.chalk) {\n          var url = \"https://unpkg.com/element-ui@\".concat(version, \"/lib/theme-chalk/index.css\");\n          this.getCSSString(url, chalkHandler, \"chalk\");\n        } else {\n          chalkHandler();\n        }\n\n        var link = [].slice.call(document.getElementsByTagName(\"head\")[0].getElementsByTagName(\"link\"));\n\n        var _loop = function _loop(i) {\n          var style = link[i];\n\n          if (style.href.includes('css')) {\n            _this.getCSSString(style.href, function (innerText) {\n              var originalCluster = _this.getThemeCluster(ORIGINAL_THEME.replace(\"#\", \"\"));\n\n              var newStyle = _this.updateStyle(innerText, originalCluster, themeCluster);\n\n              var styleTag = document.getElementById(i);\n\n              if (!styleTag) {\n                styleTag = document.createElement(\"style\");\n                styleTag.id = i;\n                styleTag.innerText = newStyle;\n                head.appendChild(styleTag);\n              }\n            });\n          }\n        };\n\n        for (var i = 0; i < link.length; i++) {\n          _loop(i);\n        }\n\n        var styles = [].slice.call(document.querySelectorAll(\"style\"));\n        styles.forEach(function (style) {\n          var innerText = style.innerText;\n          if (typeof innerText !== \"string\") return;\n          style.innerText = _this.updateStyle(innerText, originalCluster, themeCluster);\n        });\n      },\n      updateStyle: function updateStyle(style, oldCluster, newCluster) {\n        var newStyle = style;\n        oldCluster.forEach(function (color, index) {\n          newStyle = newStyle.replace(new RegExp(color, \"ig\"), newCluster[index]);\n        });\n        return newStyle;\n      },\n      getCSSString: function getCSSString(url, callback, variable) {\n        var _this2 = this;\n\n        var xhr = new XMLHttpRequest();\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            if (variable) {\n              _this2[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, \"\");\n            }\n\n            callback(xhr.responseText);\n          }\n        };\n\n        xhr.open(\"GET\", url);\n        xhr.send();\n      },\n      getThemeCluster: function getThemeCluster(theme) {\n        var tintColor = function tintColor(color, tint) {\n          var red = parseInt(color.slice(0, 2), 16);\n          var green = parseInt(color.slice(2, 4), 16);\n          var blue = parseInt(color.slice(4, 6), 16);\n\n          if (tint === 0) {\n            // when primary color is in its rgb space\n            return [red, green, blue].join(\",\");\n          } else {\n            red += Math.round(tint * (255 - red));\n            green += Math.round(tint * (255 - green));\n            blue += Math.round(tint * (255 - blue));\n            red = red.toString(16);\n            green = green.toString(16);\n            blue = blue.toString(16);\n            return \"#\".concat(red).concat(green).concat(blue);\n          }\n        };\n\n        var shadeColor = function shadeColor(color, shade) {\n          var red = parseInt(color.slice(0, 2), 16);\n          var green = parseInt(color.slice(2, 4), 16);\n          var blue = parseInt(color.slice(4, 6), 16);\n          red = Math.round((1 - shade) * red);\n          green = Math.round((1 - shade) * green);\n          blue = Math.round((1 - shade) * blue);\n          red = red.toString(16);\n          green = green.toString(16);\n          blue = blue.toString(16);\n          return \"#\".concat(red).concat(green).concat(blue);\n        };\n\n        var clusters = [theme];\n\n        for (var i = 0; i <= 9; i++) {\n          clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\n        }\n\n        clusters.push(shadeColor(theme, 0.1));\n        return clusters;\n      }\n    }\n  };\n}",{"version":3,"sources":["C:/Users/10415/Desktop/0工程/5Vue/SZYBGZDTGL-avue/src/mixins/color.js"],"names":["mapGetters","version","require","ORIGINAL_THEME","data","themeVal","created","colorName","watch","val","oldVal","$store","commit","updateTheme","computed","methods","head","document","getElementsByTagName","themeCluster","getThemeCluster","replace","originalCluster","getHandler","variable","id","newStyle","updateStyle","styleTag","getElementById","createElement","setAttribute","appendChild","innerText","chalkHandler","chalk","url","getCSSString","link","slice","call","i","style","href","includes","length","styles","querySelectorAll","forEach","oldCluster","newCluster","color","index","RegExp","callback","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","theme","tintColor","tint","red","parseInt","green","blue","join","Math","round","toString","shadeColor","shade","clusters","push","Number","toFixed"],"mappings":"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","sourcesContent":["import { mapGetters } from \"vuex\";\r\nconst version = require(\"element-ui/package.json\").version; // element-ui version from node_modules\r\nconst ORIGINAL_THEME = \"#5c90d2\"; // default color\r\nexport default function () {\r\n  return {\r\n    data() {\r\n      return {\r\n        themeVal: ORIGINAL_THEME\r\n      }\r\n    },\r\n    created() {\r\n      this.themeVal = this.colorName;\r\n    },\r\n    watch: {\r\n      themeVal(val, oldVal) {\r\n        this.$store.commit(\"SET_COLOR_NAME\", val);\r\n        this.updateTheme(val, oldVal);\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"colorName\"])\r\n    },\r\n    methods: {\r\n      updateTheme(val, oldVal) {\r\n        if (typeof val !== \"string\") return;\r\n        const head = document.getElementsByTagName(\"head\")[0];\r\n        const themeCluster = this.getThemeCluster(val.replace(\"#\", \"\"));\r\n        const originalCluster = this.getThemeCluster(oldVal.replace(\"#\", \"\"));\r\n        const getHandler = (variable, id) => {\r\n          return () => {\r\n            const originalCluster = this.getThemeCluster(\r\n              ORIGINAL_THEME.replace(\"#\", \"\")\r\n            );\r\n            const newStyle = this.updateStyle(\r\n              this[variable],\r\n              originalCluster,\r\n              themeCluster\r\n            );\r\n\r\n            let styleTag = document.getElementById(id);\r\n            if (!styleTag) {\r\n              styleTag = document.createElement(\"style\");\r\n              styleTag.setAttribute(\"id\", id);\r\n              head.appendChild(styleTag);\r\n            }\r\n            styleTag.innerText = newStyle;\r\n          };\r\n        };\r\n\r\n        const chalkHandler = getHandler(\"chalk\", \"chalk-style\");\r\n\r\n        if (!this.chalk) {\r\n          const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`;\r\n          this.getCSSString(url, chalkHandler, \"chalk\");\r\n        } else {\r\n          chalkHandler();\r\n        }\r\n\r\n        const link = [].slice.call(\r\n          document.getElementsByTagName(\"head\")[0].getElementsByTagName(\"link\")\r\n        );\r\n        for (let i = 0; i < link.length; i++) {\r\n          const style = link[i];\r\n          if (style.href.includes('css')) {\r\n            this.getCSSString(style.href, innerText => {\r\n              const originalCluster = this.getThemeCluster(\r\n                ORIGINAL_THEME.replace(\"#\", \"\")\r\n              );\r\n              const newStyle = this.updateStyle(\r\n                innerText,\r\n                originalCluster,\r\n                themeCluster\r\n              );\r\n              let styleTag = document.getElementById(i);\r\n              if (!styleTag) {\r\n                styleTag = document.createElement(\"style\");\r\n                styleTag.id = i;\r\n                styleTag.innerText = newStyle;\r\n                head.appendChild(styleTag);\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        const styles = [].slice.call(document.querySelectorAll(\"style\"))\r\n\r\n        styles.forEach(style => {\r\n          const {\r\n            innerText\r\n          } = style;\r\n          if (typeof innerText !== \"string\") return;\r\n          style.innerText = this.updateStyle(\r\n            innerText,\r\n            originalCluster,\r\n            themeCluster\r\n          );\r\n        });\r\n      },\r\n      updateStyle(style, oldCluster, newCluster) {\r\n        let newStyle = style;\r\n        oldCluster.forEach((color, index) => {\r\n          newStyle = newStyle.replace(new RegExp(color, \"ig\"), newCluster[index]);\r\n        });\r\n        return newStyle;\r\n      },\r\n\r\n      getCSSString(url, callback, variable) {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = () => {\r\n          if (xhr.readyState === 4 && xhr.status === 200) {\r\n            if (variable) {\r\n              this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, \"\");\r\n            }\r\n            callback(xhr.responseText);\r\n          }\r\n        };\r\n        xhr.open(\"GET\", url);\r\n        xhr.send();\r\n      },\r\n\r\n      getThemeCluster(theme) {\r\n        const tintColor = (color, tint) => {\r\n          let red = parseInt(color.slice(0, 2), 16);\r\n          let green = parseInt(color.slice(2, 4), 16);\r\n          let blue = parseInt(color.slice(4, 6), 16);\r\n\r\n          if (tint === 0) {\r\n            // when primary color is in its rgb space\r\n            return [red, green, blue].join(\",\");\r\n          } else {\r\n            red += Math.round(tint * (255 - red));\r\n            green += Math.round(tint * (255 - green));\r\n            blue += Math.round(tint * (255 - blue));\r\n\r\n            red = red.toString(16);\r\n            green = green.toString(16);\r\n            blue = blue.toString(16);\r\n\r\n            return `#${red}${green}${blue}`;\r\n          }\r\n        };\r\n\r\n        const shadeColor = (color, shade) => {\r\n          let red = parseInt(color.slice(0, 2), 16);\r\n          let green = parseInt(color.slice(2, 4), 16);\r\n          let blue = parseInt(color.slice(4, 6), 16);\r\n\r\n          red = Math.round((1 - shade) * red);\r\n          green = Math.round((1 - shade) * green);\r\n          blue = Math.round((1 - shade) * blue);\r\n\r\n          red = red.toString(16);\r\n          green = green.toString(16);\r\n          blue = blue.toString(16);\r\n\r\n          return `#${red}${green}${blue}`;\r\n        };\r\n\r\n        const clusters = [theme];\r\n        for (let i = 0; i <= 9; i++) {\r\n          clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\r\n        }\r\n        clusters.push(shadeColor(theme, 0.1));\r\n        return clusters;\r\n      }\r\n    }\r\n  }\r\n}"]}]}