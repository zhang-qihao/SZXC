{"remainingRequest":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\mock\\user.js","dependencies":[{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\mock\\user.js","mtime":1644218659290},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//模拟接口测试mockjs，未使用\nimport Mock from 'mockjs';\nexport default (function (_ref) {\n  var mock = _ref.mock;\n  if (!mock) return; // 用户登录\n  // Mock.mock('/user/login', 'post', {\n  //     data: new Date().getTime() + ''\n  // });\n\n  Mock.mock('/user/login', 'post', {\n    code: 200,\n    msg: \"\",\n    success: true,\n    data: {\n      expiresIn: 3600,\n      refreshToken: \"3db572d66c354e3990486af3cea9240e\",\n      token: \"8280819d79499b9a017949a5174c0009\",\n      tokenHead: \"Bearer \"\n    }\n  }); //用户退出\n\n  Mock.mock('/user/logout', 'get', {\n    data: true\n  }); //刷新token\n\n  Mock.mock('/user/refesh', 'post', {\n    code: 200,\n    msg: \"\",\n    success: true,\n    data: {\n      expiresIn: 3600,\n      refreshToken: \"be80942eaea245eea69f1795192fcf46\",\n      token: \"8280819d7949e595017949e9947f0001\",\n      tokenHead: \"Bearer \"\n    }\n  }); //获取用户信息\n\n  Mock.mock('/user/getUserInfo', 'get', {\n    data: {\n      userInfo: {\n        username: 'admin',\n        name: 'avue',\n        avatar: 'https://gitee.com/uploads/61/632261_smallweigit.jpg'\n      },\n      roles: 'admin',\n      permission: ['sys_crud_btn_add', 'sys_crud_btn_export', 'sys_menu_btn_add', 'sys_menu_btn_edit', 'sys_menu_btn_del', 'sys_role_btn1', 'sys_role_btn2', 'sys_role_btn3', 'sys_role_btn4', 'sys_role_btn5', 'sys_role_btn6'] //权限级别\n\n    }\n  }); //获取表格数据\n\n  Mock.mock('/user/getTable', 'get', function () {\n    var list = [];\n\n    for (var i = 0; i < 5; i++) {\n      list.push(Mock.mock({\n        id: '@increment',\n        name: Mock.mock('@cname'),\n        username: Mock.mock('@last'),\n        type: [0, 2],\n        checkbox: [0, 1],\n        'number|0-100': 0,\n        datetime: 1532932422071,\n        'sex|0-1': 0,\n        moreselect: [0, 1],\n        \"grade\": 0,\n        address: Mock.mock('@cparagraph(1, 3)'),\n        check: [1, 3, 4]\n      }));\n    }\n\n    return {\n      data: {\n        total: 11,\n        pageSize: 10,\n        tableData: list\n      }\n    };\n  });\n});",{"version":3,"sources":["C:/Users/10415/Desktop/0工程/5Vue/SZYBGZDTGL-avue/src/mock/user.js"],"names":["Mock","mock","code","msg","success","data","expiresIn","refreshToken","token","tokenHead","userInfo","username","name","avatar","roles","permission","list","i","push","id","type","checkbox","datetime","moreselect","address","check","total","pageSize","tableData"],"mappings":"AAAA;AAGA,OAAOA,IAAP,MAAiB,QAAjB;AACA,gBAAe,gBAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACzB,MAAI,CAACA,IAAL,EAAW,OADc,CAEzB;AACA;AACA;AACA;;AACAD,EAAAA,IAAI,CAACC,IAAL,CAAU,aAAV,EAAyB,MAAzB,EAAiC;AAC7BC,IAAAA,IAAI,EAAC,GADwB;AAE7BC,IAAAA,GAAG,EAAC,EAFyB;AAG7BC,IAAAA,OAAO,EAAC,IAHqB;AAI7BC,IAAAA,IAAI,EAAE;AACFC,MAAAA,SAAS,EAAE,IADT;AAEFC,MAAAA,YAAY,EAAE,kCAFZ;AAGFC,MAAAA,KAAK,EAAE,kCAHL;AAIFC,MAAAA,SAAS,EAAE;AAJT;AAJuB,GAAjC,EANyB,CAkBzB;;AACAT,EAAAA,IAAI,CAACC,IAAL,CAAU,cAAV,EAA0B,KAA1B,EAAiC;AAC7BI,IAAAA,IAAI,EAAE;AADuB,GAAjC,EAnByB,CAsBzB;;AACAL,EAAAA,IAAI,CAACC,IAAL,CAAU,cAAV,EAA0B,MAA1B,EAAkC;AAC9BC,IAAAA,IAAI,EAAC,GADyB;AAE9BC,IAAAA,GAAG,EAAC,EAF0B;AAG9BC,IAAAA,OAAO,EAAC,IAHsB;AAI9BC,IAAAA,IAAI,EAAE;AACFC,MAAAA,SAAS,EAAE,IADT;AAEFC,MAAAA,YAAY,EAAE,kCAFZ;AAGFC,MAAAA,KAAK,EAAE,kCAHL;AAIFC,MAAAA,SAAS,EAAE;AAJT;AAJwB,GAAlC,EAvByB,CAkCzB;;AACAT,EAAAA,IAAI,CAACC,IAAL,CAAU,mBAAV,EAA+B,KAA/B,EAAsC;AAClCI,IAAAA,IAAI,EAAE;AACFK,MAAAA,QAAQ,EAAE;AACNC,QAAAA,QAAQ,EAAE,OADJ;AAENC,QAAAA,IAAI,EAAE,MAFA;AAGNC,QAAAA,MAAM,EAAE;AAHF,OADR;AAMFC,MAAAA,KAAK,EAAE,OANL;AAOFC,MAAAA,UAAU,EAAE,CACR,kBADQ,EAER,qBAFQ,EAGR,kBAHQ,EAIR,mBAJQ,EAKR,kBALQ,EAMR,eANQ,EAOR,eAPQ,EAQR,eARQ,EASR,eATQ,EAUR,eAVQ,EAWR,eAXQ,CAPV,CAmBC;;AAnBD;AAD4B,GAAtC,EAnCyB,CA2DzB;;AACAf,EAAAA,IAAI,CAACC,IAAL,CAAU,gBAAV,EAA4B,KAA5B,EAAmC,YAAM;AACrC,QAAIe,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,MAAAA,IAAI,CAACE,IAAL,CAAUlB,IAAI,CAACC,IAAL,CAAU;AAChBkB,QAAAA,EAAE,EAAE,YADY;AAEhBP,QAAAA,IAAI,EAAEZ,IAAI,CAACC,IAAL,CAAU,QAAV,CAFU;AAGhBU,QAAAA,QAAQ,EAAEX,IAAI,CAACC,IAAL,CAAU,OAAV,CAHM;AAIhBmB,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAJU;AAKhBC,QAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,CALM;AAMhB,wBAAgB,CANA;AAOhBC,QAAAA,QAAQ,EAAE,aAPM;AAQhB,mBAAW,CARK;AAShBC,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CATI;AAUhB,iBAAS,CAVO;AAWhBC,QAAAA,OAAO,EAAExB,IAAI,CAACC,IAAL,CAAU,mBAAV,CAXO;AAYhBwB,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAZS,OAAV,CAAV;AAcH;;AACD,WAAO;AACHpB,MAAAA,IAAI,EAAE;AACFqB,QAAAA,KAAK,EAAE,EADL;AAEFC,QAAAA,QAAQ,EAAE,EAFR;AAGFC,QAAAA,SAAS,EAAEZ;AAHT;AADH,KAAP;AAOH,GAzBD;AA0BH,CAtFD","sourcesContent":["//模拟接口测试mockjs，未使用\r\n\r\n\r\nimport Mock from 'mockjs'\r\nexport default ({ mock }) => {\r\n    if (!mock) return;\r\n    // 用户登录\r\n    // Mock.mock('/user/login', 'post', {\r\n    //     data: new Date().getTime() + ''\r\n    // });\r\n    Mock.mock('/user/login', 'post', {\r\n        code:200,\r\n        msg:\"\",\r\n        success:true,\r\n        data: {\r\n            expiresIn: 3600,\r\n            refreshToken: \"3db572d66c354e3990486af3cea9240e\",\r\n            token: \"8280819d79499b9a017949a5174c0009\",\r\n            tokenHead: \"Bearer \",\r\n        },\r\n    });\r\n\r\n    //用户退出\r\n    Mock.mock('/user/logout', 'get', {\r\n        data: true,\r\n    });\r\n    //刷新token\r\n    Mock.mock('/user/refesh', 'post', {\r\n        code:200,\r\n        msg:\"\",\r\n        success:true,\r\n        data: {\r\n            expiresIn: 3600,\r\n            refreshToken: \"be80942eaea245eea69f1795192fcf46\",\r\n            token: \"8280819d7949e595017949e9947f0001\",\r\n            tokenHead: \"Bearer \",\r\n        },\r\n    });\r\n    //获取用户信息\r\n    Mock.mock('/user/getUserInfo', 'get', {\r\n        data: {\r\n            userInfo: {\r\n                username: 'admin',\r\n                name: 'avue',\r\n                avatar: 'https://gitee.com/uploads/61/632261_smallweigit.jpg',\r\n            },\r\n            roles: 'admin',\r\n            permission: [\r\n                'sys_crud_btn_add',\r\n                'sys_crud_btn_export',\r\n                'sys_menu_btn_add',\r\n                'sys_menu_btn_edit',\r\n                'sys_menu_btn_del',\r\n                'sys_role_btn1',\r\n                'sys_role_btn2',\r\n                'sys_role_btn3',\r\n                'sys_role_btn4',\r\n                'sys_role_btn5',\r\n                'sys_role_btn6',\r\n            ], //权限级别\r\n        }\r\n    });\r\n\r\n    //获取表格数据\r\n    Mock.mock('/user/getTable', 'get', () => {\r\n        let list = []\r\n        for (let i = 0; i < 5; i++) {\r\n            list.push(Mock.mock({\r\n                id: '@increment',\r\n                name: Mock.mock('@cname'),\r\n                username: Mock.mock('@last'),\r\n                type: [0, 2],\r\n                checkbox: [0, 1],\r\n                'number|0-100': 0,\r\n                datetime: 1532932422071,\r\n                'sex|0-1': 0,\r\n                moreselect: [0, 1],\r\n                \"grade\": 0,\r\n                address: Mock.mock('@cparagraph(1, 3)'),\r\n                check: [1, 3, 4]\r\n            }))\r\n        }\r\n        return {\r\n            data: {\r\n                total: 11,\r\n                pageSize: 10,\r\n                tableData: list\r\n            }\r\n        }\r\n    })\r\n}"]}]}