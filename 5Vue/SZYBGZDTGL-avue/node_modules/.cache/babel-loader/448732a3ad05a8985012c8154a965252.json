{"remainingRequest":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\page\\frame\\user\\changePassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\page\\frame\\user\\changePassword.vue","mtime":1656905774555},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"E:/\\u5174\\u624Dsvn\\u5E73\\u53F0/01\\u82CF\\u5DDE\\u533B\\u4FDD\\u5C40/88\\u82CF\\u5DDE\\u533B\\u4FDD\\u4E2D\\u5FC3\\u5C97\\u4F4D\\u804C\\u8D23\\u52A8\\u6001\\u7BA1\\u7406\\u7CFB\\u7EDF\\uFF08SZYBGZDTGL\\uFF09/0\\u5DE5\\u7A0B/5Vue/SZYBGZDTGL-avue/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BaseCtrl } from '/src/util/eframe';\nimport md5 from \"js-md5\";\nimport { MessageBox } from \"element-ui\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"changePassword\",\n  mixins: [BaseCtrl],\n  computed: _objectSpread({}, mapGetters([\"userInfo\"])),\n  data: function data() {\n    return {\n      form: {\n        password1: '',\n        password2: '',\n        password3: ''\n      }\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {},\n  methods: {\n    savePwd: function savePwd() {\n      var that = this;\n\n      if (this.userInfo.init_pwd_flag !== '1') {\n        //原密码\n        if (this.isNull(this.form.password1)) {\n          this.alertError(\"请输入原密码！\");\n          return;\n        }\n\n        if (this.userInfo.pwd != md5(this.form.password1)) {\n          this.alertError(\"原密码不正确，请确认！\");\n          return;\n        }\n      }\n\n      if (this.isNull(this.form.password2)) {\n        this.alertError(\"请输入新密码！\");\n        return;\n      }\n\n      if (this.isNull(this.form.password2)) {\n        this.alertError(\"请再次输入新密码！\");\n        return;\n      } //设置默认密码校验  1.密码必须由字母、数字组成，区分大小写 2.密码长度为6-18位\n\n\n      var reg = /^(?=.*[a-zA-Z])(?=.*[0-9])[A-Za-z0-9]{6,18}$|(?=.*[~!@#$%^&*])[\\da-zA-Z~!@#$%^&*]{6,18}$/;\n\n      if (!reg.test(this.form.password2)) {\n        this.alertError(\"密码必须由字母、数字或特殊字符组成，区分大小写，长度为6-18位，请确认！\");\n        return;\n      } //判断新密码是否相同\n\n\n      if (this.form.password2 != this.form.password3) {\n        this.alertError(\"两次密码不一致，请确认！\");\n        return;\n      } // 不能与原密码相同\n\n\n      if (md5(that.form.password2) === this.userInfo.pwd) {\n        this.alertError(\"新密码不能与原密码相同，请重新输入！\");\n        return;\n      }\n\n      var succFun = function succFun(data) {\n        that.close();\n        that.$emit('changeFlag'); // 保存成功出现提示在跳转到登录页面\n\n        MessageBox.alert(\"密码修改成功，请重新登录！\", \"提示\", {\n          type: 'success'\n        }).then(function () {\n          //跳转到登录页面\n          that.$store.dispatch(\"LogOut\").then(function () {\n            console.log(\"【changePassword】 1:\" + \"跳转到登录页面\");\n            that.$router.push({\n              path: \"/login\"\n            });\n          });\n        }).catch(function () {\n          that.$store.dispatch(\"LogOut\").then(function () {\n            console.log(\"【changePassword】 2:\" + \"跳转到登录页面\");\n            that.$router.push({\n              path: \"/login\"\n            });\n          });\n        });\n      };\n\n      var failFun = function failFun(data) {};\n\n      var localForm = {\n        uact_id: this.userInfo.uact_id,\n        pwd: this.form.password2\n      };\n      this.$eframe.submitTargetForm({\n        url: '/ehis/fixmedins/useruact/userdetail.action',\n        form: localForm,\n        actionFunName: \"updatePwd\",\n        succFun: succFun,\n        failFun: failFun\n      });\n    }\n  }\n};",{"version":3,"sources":["changePassword.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-container style=\"height: 100%\">\r\n    <el-main style=\"height: 100%;overflow: auto;\">\r\n      <div class=\"main-content\">\r\n        <base-block rounded >\r\n          <div style=\"margin-bottom: 15px\" v-if=\"userInfo.init_pwd_flag==='1'\">\r\n            <span>您的账号密码为系统初始密码，请修改密码：</span>\r\n          </div>\r\n          <div style=\"margin: 0 calc(-15px - 1.25rem) 15px;background: #fffce7;color: #fdae17;font-weight: 500;line-height: 18px;word-break: break-all;padding: 8px 17px\" >\r\n            <i class=\"el-icon-warning\" style=\"margin-right: 10px\"></i>\r\n            <span >密码长度为6-18位，必须由字母、数字或特殊字符组成，区分大小写。</span>\r\n          </div>\r\n        <el-form @submit.native.prevent ref=\"form\" :model=\"form\" label-position=\"right\" label-width=\"65px\">\r\n          <el-row style=\"margin-bottom: 10px\" v-show=\"userInfo.init_pwd_flag!=='1'\">\r\n            <el-col :span=\"24\" >\r\n              <ef-password label=\"原密码\" v-model=\"form.password1\"  name=\"password1\" require=\"true\"\r\n                       placeholder=\"请输入原密码\"  :pattern=\"/.*/\" />\r\n            </el-col>\r\n          </el-row>\r\n          <el-row style=\"margin-bottom: 10px\">\r\n            <el-col :span=\"24\">\r\n              <ef-password label=\"新密码\" v-model=\"form.password2\" :maxlength=18 :minlength=6 name=\"password2\"\r\n                           require=\"true\" placeholder=\"请输入6~18位新密码，包含字母、数字或特殊字符\"/>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row style=\"margin-bottom: 10px\">\r\n            <el-col :span=\"24\">\r\n              <ef-password label=\"确认密码\" v-model=\"form.password3\" :maxlength=18 :minlength=6 name=\"password3\"\r\n                           require=\"true\" placeholder=\"请再次输入密码\"/>\r\n            </el-col>\r\n          </el-row>\r\n\r\n          <div class=\"more-button\" style=\"justify-content: center\">\r\n           <el-button v-prevent-re-click style=\"width: 100px\" icon=\"el-icon-folder-checked\" size=\"mini\" type=\"primary\" @click=\"savePwd()\">保存</el-button>\r\n          </div>\r\n        </el-form>\r\n        </base-block>\r\n\r\n      </div>\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport {BaseCtrl} from '/src/util/eframe'\r\nimport md5 from \"js-md5\";\r\nimport {MessageBox} from \"element-ui\";\r\nimport {mapGetters} from \"vuex\";\r\n\r\nexport default {\r\n  name: \"changePassword\",\r\n  mixins: [BaseCtrl],\r\n  computed: {\r\n    ...mapGetters([\"userInfo\"])\r\n  },\r\n  data() {\r\n    return {\r\n      form: {\r\n        password1:'',\r\n        password2:'',\r\n        password3:''\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  methods: {\r\n\r\n    savePwd(){\r\n      let that = this;\r\n      if(this.userInfo.init_pwd_flag!=='1'){ //原密码\r\n        if(this.isNull(this.form.password1)){\r\n          this.alertError(\"请输入原密码！\");\r\n          return;\r\n        }\r\n        if(this.userInfo.pwd!=md5(this.form.password1)){\r\n          this.alertError(\"原密码不正确，请确认！\");\r\n          return;\r\n        }\r\n      }\r\n\r\n      if(this.isNull(this.form.password2)){\r\n        this.alertError(\"请输入新密码！\");\r\n        return;\r\n      }\r\n      if(this.isNull(this.form.password2)){\r\n        this.alertError(\"请再次输入新密码！\");\r\n        return;\r\n      }\r\n      //设置默认密码校验  1.密码必须由字母、数字组成，区分大小写 2.密码长度为6-18位\r\n      let reg = /^(?=.*[a-zA-Z])(?=.*[0-9])[A-Za-z0-9]{6,18}$|(?=.*[~!@#$%^&*])[\\da-zA-Z~!@#$%^&*]{6,18}$/\r\n      if(!reg.test(this.form.password2)){\r\n        this.alertError(\"密码必须由字母、数字或特殊字符组成，区分大小写，长度为6-18位，请确认！\");\r\n        return;\r\n      }\r\n      //判断新密码是否相同\r\n      if(this.form.password2 != this.form.password3){\r\n        this.alertError(\"两次密码不一致，请确认！\");\r\n        return;\r\n      }\r\n      // 不能与原密码相同\r\n      if(md5(that.form.password2) === this.userInfo.pwd){\r\n        this.alertError(\"新密码不能与原密码相同，请重新输入！\");\r\n        return;\r\n      }\r\n      let succFun = function (data) {\r\n        that.close()\r\n\t\tthat.$emit('changeFlag')\r\n        // 保存成功出现提示在跳转到登录页面\r\n        MessageBox.alert(\"密码修改成功，请重新登录！\", \"提示\", {\r\n          type: 'success'\r\n        }).then(() => {\r\n          //跳转到登录页面\r\n          that.$store.dispatch(\"LogOut\").then(() => {\r\n            console.log(\"【changePassword】 1:\"+\"跳转到登录页面\");\r\n            that.$router.push({ path: \"/login\" });\r\n          });\r\n        }).catch(()=>{\r\n          that.$store.dispatch(\"LogOut\").then(() => {\r\n            console.log(\"【changePassword】 2:\"+\"跳转到登录页面\");\r\n            that.$router.push({ path: \"/login\" });\r\n          });\r\n        })\r\n      }\r\n      let failFun = function (data) {\r\n\r\n      }\r\n      let localForm={\r\n        uact_id: this.userInfo.uact_id,\r\n        pwd:this.form.password2,\r\n      }\r\n      this.$eframe.submitTargetForm({\r\n        url: '/ehis/fixmedins/useruact/userdetail.action',\r\n        form: localForm,\r\n        actionFunName: \"updatePwd\",\r\n        succFun: succFun,\r\n        failFun: failFun\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n\r\n</style>"],"sourceRoot":"src/page/frame/user"}]}