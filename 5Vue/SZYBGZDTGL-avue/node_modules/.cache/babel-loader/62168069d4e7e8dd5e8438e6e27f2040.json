{"remainingRequest":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\api\\user.js","dependencies":[{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\api\\user.js","mtime":1640694382068},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import request from '@/router/axios';\nimport { baseUrl } from '@/config/env';\nimport constData from \"../const\";\n\nfunction formatURL(url) {\n  var baseUrl = constData.baseUrl;\n\n  if (ELECTRON_FLAG) {\n    baseUrl = constData.electronBaseUrl;\n  }\n\n  alert(\"baseUrl::::\" + baseUrl);\n\n  if (url.indexOf(\"http:\") == 0 || url.indexOf(\"https:\") == 0) {} else if (url.indexOf(\"//\") == 0) {\n    url = url.substring(1);\n  } else {\n    if (url.indexOf(\"/\") == 0) {\n      url = baseUrl + url;\n    } else {\n      url = baseUrl + \"/\" + url;\n    }\n  }\n\n  return url;\n}\n\nexport var loginByUsername = function loginByUsername(username, password, code, redomStr) {\n  return request({\n    url: formatURL('/user/login'),\n    method: 'post',\n    meta: {\n      isToken: false\n    },\n    data: {\n      username: username,\n      password: password,\n      code: code,\n      redomStr: redomStr\n    }\n  });\n};\nexport var loginByUsername2 = function loginByUsername2(username, password, grant_type) {\n  return request({\n    url: formatURL('/login/token.action?frameControlSubmitFunction=getTokenId'),\n    // url: baseUrl + '/user/login',\n    method: 'post',\n    headers: {\n      'Content-Type': \"application/json;charset=utf-8\"\n    },\n    meta: {\n      isToken: false\n    },\n    data: {\n      username: username,\n      password: password,\n      grant_type: grant_type\n    }\n  });\n};\nexport var getUserInfo = function getUserInfo() {\n  return request({\n    url: formatURL('/user/getUserInfo'),\n    method: 'get'\n  });\n};\nexport var getUserInfo2 = function getUserInfo2() {\n  return request({\n    url: formatURL('/frame/systemmanagement/usermanagement/user/usermanagement.action?frameControlSubmitFunction=loadUser'),\n    // url: baseUrl + '/user/getUserInfo',\n    method: 'post',\n    headers: {\n      'Content-Type': \"application/json;charset=utf-8\"\n    },\n    data: {}\n  });\n};\nexport var refeshToken = function refeshToken() {\n  return request({\n    url: formatURL('/user/refesh'),\n    method: 'post'\n  });\n};\nexport var refeshToken2 = function refeshToken2(refresh, grant_type) {\n  return request({\n    url: formatURL('/login/token.action?frameControlSubmitFunction=getTokenId'),\n    // url: baseUrl + '/user/login',\n    method: 'post',\n    headers: {\n      'Content-Type': \"application/json;charset=utf-8\"\n    },\n    meta: {\n      isToken: false\n    },\n    data: {\n      refresh: refresh,\n      grant_type: grant_type\n    }\n  });\n};\nexport var getMenu = function getMenu() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return request({\n    url: formatURL('/user/getMenu'),\n    method: 'get',\n    data: {\n      type: type\n    }\n  });\n};\nexport var getTopMenu = function getTopMenu() {\n  return request({\n    url: formatURL('/user/getTopMenu'),\n    method: 'get'\n  });\n};\nexport var sendLogs = function sendLogs(list) {\n  return request({\n    url: formatURL('/user/logout'),\n    method: 'post',\n    data: list\n  });\n};\nexport var logout = function logout() {\n  return request({\n    url: formatURL('/user/logout'),\n    meta: {\n      isToken: false\n    },\n    method: 'get'\n  });\n};",{"version":3,"sources":["E:/兴才svn平台/01苏州医保局/88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）/0工程/5Vue/SZYBGZDTGL-avue/src/api/user.js"],"names":["request","baseUrl","constData","formatURL","url","ELECTRON_FLAG","electronBaseUrl","alert","indexOf","substring","loginByUsername","username","password","code","redomStr","method","meta","isToken","data","loginByUsername2","grant_type","headers","getUserInfo","getUserInfo2","refeshToken","refeshToken2","refresh","getMenu","type","getTopMenu","sendLogs","list","logout"],"mappings":"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","sourcesContent":["import request from '@/router/axios';\r\nimport { baseUrl } from '@/config/env';\r\nimport constData from \"../const\";\r\n\r\n\r\nfunction formatURL(url) {\r\n\r\n    let baseUrl = constData.baseUrl;\r\n    if(ELECTRON_FLAG){\r\n        baseUrl = constData.electronBaseUrl;\r\n    }\r\n    alert(\"baseUrl::::\"+baseUrl);\r\n\r\n    if (url.indexOf(\"http:\") == 0 || url.indexOf(\"https:\") == 0) {\r\n\r\n    } else if (url.indexOf(\"//\") == 0) {\r\n        url = url.substring(1);\r\n    } else {\r\n        if (url.indexOf(\"/\") == 0) {\r\n            url = baseUrl + url;\r\n        } else {\r\n            url = baseUrl + \"/\" + url;\r\n        }\r\n    }\r\n    return url;\r\n}\r\n\r\n\r\nexport const loginByUsername = (username, password, code, redomStr) => request({\r\n    url: formatURL( '/user/login'),\r\n    method: 'post',\r\n    meta: {\r\n        isToken: false\r\n    },\r\n    data: {\r\n        username,\r\n        password,\r\n        code,\r\n        redomStr\r\n    }\r\n});\r\n\r\nexport const loginByUsername2 = (username, password, grant_type) => request({\r\n    url: formatURL('/login/token.action?frameControlSubmitFunction=getTokenId'),\r\n    // url: baseUrl + '/user/login',\r\n    method: 'post',\r\n    headers: {\r\n        'Content-Type': \"application/json;charset=utf-8\"\r\n    },\r\n    meta: {\r\n        isToken: false\r\n    },\r\n    data: {\r\n        username,\r\n        password,\r\n        grant_type,\r\n    }\r\n})\r\n\r\nexport const getUserInfo = () => request({\r\n    url: formatURL( '/user/getUserInfo'),\r\n    method: 'get'\r\n});\r\n\r\nexport const getUserInfo2 = () => request({\r\n    url: formatURL( '/frame/systemmanagement/usermanagement/user/usermanagement.action?frameControlSubmitFunction=loadUser'),\r\n    // url: baseUrl + '/user/getUserInfo',\r\n    method: 'post',\r\n    headers: {\r\n        'Content-Type': \"application/json;charset=utf-8\"\r\n    },\r\n    data:{\r\n\r\n    }\r\n});\r\n\r\nexport const refeshToken = () => request({\r\n    url: formatURL( '/user/refesh'),\r\n    method: 'post'\r\n});\r\n\r\nexport const refeshToken2 = (refresh,grant_type) => request({\r\n    url: formatURL( '/login/token.action?frameControlSubmitFunction=getTokenId'),\r\n    // url: baseUrl + '/user/login',\r\n    method: 'post',\r\n    headers: {\r\n        'Content-Type': \"application/json;charset=utf-8\"\r\n    },\r\n    meta: {\r\n        isToken: false\r\n    },\r\n    data: {\r\n        refresh,\r\n        grant_type,\r\n    }\r\n})\r\n\r\n\r\nexport const getMenu = (type = 0) => request({\r\n    url: formatURL( '/user/getMenu'),\r\n    method: 'get',\r\n    data: {\r\n        type\r\n    }\r\n});\r\n\r\nexport const getTopMenu = () => request({\r\n    url: formatURL( '/user/getTopMenu'),\r\n    method: 'get'\r\n});\r\n\r\nexport const sendLogs = (list) => request({\r\n    url: formatURL( '/user/logout'),\r\n    method: 'post',\r\n    data: list\r\n});\r\n\r\nexport const logout = () => request({\r\n    url: formatURL( '/user/logout'),\r\n    meta: {\r\n        isToken: false\r\n    },\r\n    method: 'get'\r\n});"]}]}