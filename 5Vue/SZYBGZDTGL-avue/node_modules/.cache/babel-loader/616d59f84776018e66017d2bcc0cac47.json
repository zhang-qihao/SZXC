{"remainingRequest":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\api\\stock.js","dependencies":[{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\api\\stock.js","mtime":1647421297994},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:/\\u5174\\u624Dsvn\\u5E73\\u53F0/01\\u82CF\\u5DDE\\u533B\\u4FDD\\u5C40/88\\u82CF\\u5DDE\\u533B\\u4FDD\\u4E2D\\u5FC3\\u5C97\\u4F4D\\u804C\\u8D23\\u52A8\\u6001\\u7BA1\\u7406\\u7CFB\\u7EDF\\uFF08SZYBGZDTGL\\uFF09/0\\u5DE5\\u7A0B/5Vue/SZYBGZDTGL-avue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _typeof from \"E:/\\u5174\\u624Dsvn\\u5E73\\u53F0/01\\u82CF\\u5DDE\\u533B\\u4FDD\\u5C40/88\\u82CF\\u5DDE\\u533B\\u4FDD\\u4E2D\\u5FC3\\u5C97\\u4F4D\\u804C\\u8D23\\u52A8\\u6001\\u7BA1\\u7406\\u7CFB\\u7EDF\\uFF08SZYBGZDTGL\\uFF09/0\\u5DE5\\u7A0B/5Vue/SZYBGZDTGL-avue/node_modules/@babel/runtime/helpers/esm/typeof\";\nimport request from '@/router/axios';\nimport { baseUrl } from '@/config/env';\nimport constData from \"../const\";\nimport eframe from \"@/util/eframe\";\n\nfunction formatURL(url) {\n  var baseUrl = constData.baseUrl;\n\n  if (ELECTRON_FLAG) {\n    baseUrl = constData.electronBaseUrl;\n  } // alert(\"baseUrl::::\"+baseUrl);\n\n\n  if (url.indexOf(\"http:\") == 0 || url.indexOf(\"https:\") == 0) {} else if (url.indexOf(\"//\") == 0) {\n    url = url.substring(1);\n  } else {\n    if (url.indexOf(\"/\") == 0) {\n      url = baseUrl + url;\n    } else {\n      url = baseUrl + \"/\" + url;\n    }\n  }\n\n  return url;\n}\n\nfunction formatData(data) {\n  if (data && _typeof(data) != 'object') {\n    data = decryptAES(data);\n    data = JSON.parse(data);\n  }\n\n  return data;\n} // ehis\n// stock in\n\n\nexport var stockPutIn = function stockPutIn(actionFunName) {\n  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    var errorFun = function errorFun(error) {\n      reject(error);\n    };\n\n    var backFun = function backFun(data) {\n      resolve(data);\n    };\n\n    eframe.submitTargetForm({\n      url: '/ehis/putin/stockPutIn.action',\n      form: form,\n      actionFunName: actionFunName,\n      succFun: backFun,\n      failFun: errorFun\n    });\n  });\n};\nexport var stockinfoUpload = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(actionFunName) {\n    var form,\n        data,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            form = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return request({\n              url: formatURL(\"/ehis/stock/stockinfo.action?frameControlSubmitFunction=\".concat(actionFunName)),\n              data: form,\n              method: 'post',\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              },\n              meta: {\n                isSerialize: false\n              }\n            });\n\n          case 3:\n            data = _context.sent;\n            return _context.abrupt(\"return\", formatData(data));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function stockinfoUpload(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // get Stok Put\n\nexport var getStockPutIn = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(type, opt) {\n    var data;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return request({\n              url: formatURL(\"/ehis/putin/stockPutIn.action?frameControlSubmitFunction=\".concat(type, \"&stock_put_in_id=\").concat(opt.stock_put_in_id, \"&pageIndex=\").concat(opt.pageIndex, \"&pageSize=\").concat(opt.pageSize)),\n              method: 'get'\n            });\n\n          case 2:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", formatData(data));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getStockPutIn(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getStockPutInExport = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(type, stock_put_in_id) {\n    var data;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return request({\n              url: formatURL(\"/ehis/putin/stockPutIn.action?frameControlSubmitFunction=\".concat(type, \"&stock_put_in_id=\").concat(stock_put_in_id)),\n              method: 'get'\n            });\n\n          case 2:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", formatData(data));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getStockPutInExport(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // get Stock Info\n\nexport var getStockinfo = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(type, condition) {\n    var data;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return request({\n              url: formatURL(\"/ehis/stock/stockinfo.action?frameControlSubmitFunction=\".concat(type).concat(condition)),\n              method: 'get'\n            });\n\n          case 2:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", formatData(data));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getStockinfo(_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}(); // stock out\n\nexport var stockPutOut = function stockPutOut(actionFunName) {\n  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    var errorFun = function errorFun(error) {\n      reject(error);\n    };\n\n    var backFun = function backFun(data) {\n      resolve(data);\n    };\n\n    eframe.submitTargetForm({\n      url: '/ehis/putout/stockPutOut.action',\n      form: form,\n      actionFunName: actionFunName,\n      succFun: backFun,\n      failFun: errorFun\n    });\n  });\n}; // get Stok Put\n\nexport var getStockPutOut = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(type, stockPutOunId) {\n    var data;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return request({\n              url: formatURL(\"/ehis/putout/stockPutOut.action?frameControlSubmitFunction=\".concat(type, \"&stock_put_out_id=\").concat(stockPutOunId)),\n              method: 'get'\n            });\n\n          case 2:\n            data = _context5.sent;\n            return _context5.abrupt(\"return\", formatData(data));\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getStockPutOut(_x8, _x9) {\n    return _ref5.apply(this, arguments);\n  };\n}(); // get Stock Info\n\nexport var getStockOutInfo = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(type, stockPutInId) {\n    var data;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return request({\n              url: formatURL(\"/ehis/stock/stockinfo.action?frameControlSubmitFunction=\".concat(type, \"&stock_put_in_id=\").concat(stockPutInId)),\n              method: 'get'\n            });\n\n          case 2:\n            data = _context6.sent;\n            return _context6.abrupt(\"return\", formatData(data));\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function getStockOutInfo(_x10, _x11) {\n    return _ref6.apply(this, arguments);\n  };\n}(); // stock\n\nexport var stockStockInfo = function stockStockInfo(actionFunName) {\n  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    var errorFun = function errorFun(error) {\n      reject(error);\n    };\n\n    var backFun = function backFun(data) {\n      resolve(data);\n    };\n\n    eframe.submitTargetForm({\n      url: '/ehis/stock/stockinfo.action',\n      form: form,\n      actionFunName: actionFunName,\n      succFun: backFun,\n      failFun: errorFun\n    });\n  });\n}; // stock info\n\nexport var stockPutInfo = function stockPutInfo(actionFunName) {\n  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    var errorFun = function errorFun(error) {\n      reject(error);\n    };\n\n    var backFun = function backFun(data) {\n      resolve(data);\n    };\n\n    eframe.submitTargetForm({\n      url: '/ehis/stock/stockinfo.action',\n      form: form,\n      actionFunName: actionFunName,\n      succFun: backFun,\n      failFun: errorFun\n    });\n  });\n}; // stockInventory\n\nexport var stockInventory = function stockInventory(actionFunName) {\n  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    var errorFun = function errorFun(error) {\n      reject(error);\n    };\n\n    var backFun = function backFun(data) {\n      resolve(data);\n    };\n\n    eframe.submitTargetForm({\n      url: '/ehis/stock/stockInventory.action',\n      form: form,\n      actionFunName: actionFunName,\n      succFun: backFun,\n      failFun: errorFun\n    });\n  });\n}; // get stockInventory\n\nexport var getStockInventory = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(type, opt) {\n    var data;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return request({\n              url: formatURL(\"/ehis/stock/stockInventory.action?frameControlSubmitFunction=\".concat(type, \"&stock_inventory_id=\").concat(opt.stock_inventory_id, \"&pageIndex=\").concat(opt.pageIndex, \"&pageSize=\").concat(opt.pageSize)),\n              method: 'get'\n            });\n\n          case 2:\n            data = _context7.sent;\n            return _context7.abrupt(\"return\", formatData(data));\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function getStockInventory(_x12, _x13) {\n    return _ref7.apply(this, arguments);\n  };\n}(); // 出库确认\n\nexport var getStockinfoOut = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(type, condition) {\n    var data;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return request({\n              url: formatURL(\"/ehis/stock/stockinfo.action?frameControlSubmitFunction=\".concat(type).concat(condition)),\n              method: 'get'\n            });\n\n          case 2:\n            data = _context8.sent;\n            return _context8.abrupt(\"return\", formatData(data));\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function getStockinfoOut(_x14, _x15) {\n    return _ref8.apply(this, arguments);\n  };\n}(); // 盘点确认\n\nexport var getStockinfoInv = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(type, condition) {\n    var data;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return request({\n              url: formatURL(\"/ehis/stock/stockinfo.action?frameControlSubmitFunction=\".concat(type).concat(condition)),\n              method: 'get'\n            });\n\n          case 2:\n            data = _context9.sent;\n            return _context9.abrupt(\"return\", formatData(data));\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function getStockinfoInv(_x16, _x17) {\n    return _ref9.apply(this, arguments);\n  };\n}(); // 导出 blob\n\nexport var excelDownload = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(expFileName) {\n    var data;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return request({\n              url: formatURL(\"/ehis/stock/excel.action?frameControlSubmitFunction=download&expFileName=\".concat(expFileName)),\n              method: 'get',\n              responseType: 'blob'\n            });\n\n          case 2:\n            data = _context10.sent;\n            return _context10.abrupt(\"return\", formatData(data));\n\n          case 4:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function excelDownload(_x18) {\n    return _ref10.apply(this, arguments);\n  };\n}(); // stock out\n\nexport var stockReport = function stockReport(actionFunName) {\n  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    var errorFun = function errorFun(error) {\n      reject(error);\n    };\n\n    var backFun = function backFun(data) {\n      resolve(data);\n    };\n\n    eframe.submitTargetForm({\n      url: '/ehis/stock/report.action',\n      form: form,\n      actionFunName: actionFunName,\n      succFun: backFun,\n      failFun: errorFun\n    });\n  });\n}; // stock param\n\nexport var stockParam = function stockParam(actionFunName) {\n  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    var errorFun = function errorFun(error) {\n      reject(error);\n    };\n\n    var backFun = function backFun(data) {\n      resolve(data);\n    };\n\n    eframe.submitTargetForm({\n      url: '/ehis/stock/stockParam.action',\n      form: form,\n      actionFunName: actionFunName,\n      succFun: backFun,\n      failFun: errorFun\n    });\n  });\n}; // get param\n\nexport var getStockParam = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(type, code) {\n    var data;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return request({\n              url: formatURL(\"/ehis/stock/stockParam.action?frameControlSubmitFunction=\".concat(type, \"&param_type=\").concat(code)),\n              method: 'get'\n            });\n\n          case 2:\n            data = _context11.sent;\n            return _context11.abrupt(\"return\", formatData(data));\n\n          case 4:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function getStockParam(_x19, _x20) {\n    return _ref11.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["E:/兴才svn平台/01苏州医保局/88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）/0工程/5Vue/SZYBGZDTGL-avue/src/api/stock.js"],"names":["request","baseUrl","constData","eframe","formatURL","url","ELECTRON_FLAG","electronBaseUrl","indexOf","substring","formatData","data","decryptAES","JSON","parse","stockPutIn","actionFunName","form","Promise","resolve","reject","errorFun","error","backFun","submitTargetForm","succFun","failFun","stockinfoUpload","method","headers","meta","isSerialize","getStockPutIn","type","opt","stock_put_in_id","pageIndex","pageSize","getStockPutInExport","getStockinfo","condition","stockPutOut","getStockPutOut","stockPutOunId","getStockOutInfo","stockPutInId","stockStockInfo","stockPutInfo","stockInventory","getStockInventory","stock_inventory_id","getStockinfoOut","getStockinfoInv","excelDownload","expFileName","responseType","stockReport","stockParam","getStockParam","code"],"mappings":"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","sourcesContent":["import request from '@/router/axios';\nimport { baseUrl } from '@/config/env';\nimport constData from \"../const\";\nimport eframe from \"@/util/eframe\";\n\n\nfunction formatURL(url) {\n\n    let baseUrl = constData.baseUrl;\n    if(ELECTRON_FLAG){\n        baseUrl = constData.electronBaseUrl;\n    }\n    // alert(\"baseUrl::::\"+baseUrl);\n\n    if (url.indexOf(\"http:\") == 0 || url.indexOf(\"https:\") == 0) {\n\n    } else if (url.indexOf(\"//\") == 0) {\n        url = url.substring(1);\n    } else {\n        if (url.indexOf(\"/\") == 0) {\n            url = baseUrl + url;\n        } else {\n            url = baseUrl + \"/\" + url;\n        }\n    }\n    return url;\n}\n\nfunction formatData (data) {\n  if(data && typeof (data)!='object'){\n    data = decryptAES(data);\n    data = JSON.parse(data);\n  }\n  return data\n}\n\n// ehis\n// stock in\nexport const stockPutIn = (actionFunName, form = {}) => {\n  return new Promise((resolve, reject) => {\n    let errorFun = function (error) {\n      reject(error)\n    };\n    let backFun = function (data) {\n      resolve(data)\n    };\n    eframe.submitTargetForm({\n        url: '/ehis/putin/stockPutIn.action',\n        form,\n        actionFunName,\n        succFun: backFun,\n        failFun: errorFun\n    });\n  })\n}\n\nexport const stockinfoUpload = async (actionFunName, form = {}) => {\n  // return new Promise((resolve, reject) => {\n  //   let errorFun = function (error) {\n  //     reject(error)\n  //   };\n  //   let backFun = function (data) {\n  //     resolve(data)\n  //   }\n  //   eframe.submitTargetForm({\n  //       url: '/ehis/stock/stockinfo.action',\n  //       form,\n  //       actionFunName,\n  //       succFun: backFun,\n  //       failFun: errorFun\n  //   });\n  // })\n\n  let data = await request({\n    url: formatURL(`/ehis/stock/stockinfo.action?frameControlSubmitFunction=${actionFunName}`),\n    data: form,\n    method: 'post',\n    headers: { 'Content-Type': 'multipart/form-data' },\n    meta: {\n      isSerialize: false\n    }\n  })\n  return formatData(data)\n}\n\n\n// get Stok Put\nexport const getStockPutIn = async (type, opt) => {\n  let data = await request({\n    url: formatURL(`/ehis/putin/stockPutIn.action?frameControlSubmitFunction=${type}&stock_put_in_id=${opt.stock_put_in_id}&pageIndex=${opt.pageIndex}&pageSize=${opt.pageSize}`),\n    method: 'get'\n  })\n\n  return formatData(data)\n};\n\nexport const getStockPutInExport = async (type, stock_put_in_id) => {\n  let data = await request({\n    url: formatURL(`/ehis/putin/stockPutIn.action?frameControlSubmitFunction=${type}&stock_put_in_id=${stock_put_in_id}`),\n    method: 'get'\n  })\n\n  return formatData(data)\n};\n\n// get Stock Info\nexport const getStockinfo = async (type, condition) => {\n  let data = await request({\n    url: formatURL(`/ehis/stock/stockinfo.action?frameControlSubmitFunction=${type}${condition}`),\n    method: 'get'\n  })\n\n  return formatData(data)\n};\n\n// stock out\nexport const stockPutOut = (actionFunName, form = {}) => {\n  return new Promise((resolve, reject) => {\n    let errorFun = function (error) {\n      reject(error)\n    };\n    let backFun = function (data) {\n      resolve(data)\n    };\n    eframe.submitTargetForm({\n        url: '/ehis/putout/stockPutOut.action',\n        form,\n        actionFunName,\n        succFun: backFun,\n        failFun: errorFun\n    });\n  })\n}\n\n// get Stok Put\nexport const getStockPutOut = async (type, stockPutOunId) => {\n  let data = await request({\n    url: formatURL(`/ehis/putout/stockPutOut.action?frameControlSubmitFunction=${type}&stock_put_out_id=${stockPutOunId}`),\n    method: 'get'\n  })\n\n  return formatData(data)\n};\n\n// get Stock Info\nexport const getStockOutInfo = async (type, stockPutInId) => {\n  let data = await request({\n    url: formatURL(`/ehis/stock/stockinfo.action?frameControlSubmitFunction=${type}&stock_put_in_id=${stockPutInId}`),\n    method: 'get'\n  })\n  return formatData(data)\n};\n\n// stock\nexport const stockStockInfo = (actionFunName, form = {}) => {\n  return new Promise((resolve, reject) => {\n    let errorFun = function (error) {\n      reject(error)\n    };\n    let backFun = function (data) {\n      resolve(data)\n    };\n    eframe.submitTargetForm({\n        url: '/ehis/stock/stockinfo.action',\n        form,\n        actionFunName,\n        succFun: backFun,\n        failFun: errorFun\n    });\n  })\n}\n\n// stock info\nexport const stockPutInfo = (actionFunName, form = {}) => {\n  return new Promise((resolve, reject) => {\n    let errorFun = function (error) {\n      reject(error)\n    };\n    let backFun = function (data) {\n      resolve(data)\n    };\n    eframe.submitTargetForm({\n        url: '/ehis/stock/stockinfo.action',\n        form,\n        actionFunName,\n        succFun: backFun,\n        failFun: errorFun\n    });\n  })\n}\n\n// stockInventory\nexport const stockInventory = (actionFunName, form = {}) => {\n  return new Promise((resolve, reject) => {\n    let errorFun = function (error) {\n      reject(error)\n    };\n    let backFun = function (data) {\n      resolve(data)\n    };\n    eframe.submitTargetForm({\n        url: '/ehis/stock/stockInventory.action',\n        form,\n        actionFunName,\n        succFun: backFun,\n        failFun: errorFun\n    })\n  })\n}\n\n// get stockInventory\nexport const getStockInventory = async (type, opt) => {\n  let data = await request({\n    url: formatURL(`/ehis/stock/stockInventory.action?frameControlSubmitFunction=${type}&stock_inventory_id=${opt.stock_inventory_id}&pageIndex=${opt.pageIndex}&pageSize=${opt.pageSize}`),\n    method: 'get'\n  })\n  return formatData(data)\n}\n\n// 出库确认\nexport const getStockinfoOut = async (type, condition) => {\n  let data = await request({\n    url: formatURL(`/ehis/stock/stockinfo.action?frameControlSubmitFunction=${type}${condition}`),\n    method: 'get'\n  })\n  return formatData(data)\n};\n\n// 盘点确认\nexport const getStockinfoInv = async (type, condition) => {\n  let data = await request({\n    url: formatURL(`/ehis/stock/stockinfo.action?frameControlSubmitFunction=${type}${condition}`),\n    method: 'get'\n  })\n  return formatData(data)\n};\n\n// 导出 blob\nexport const excelDownload = async (expFileName) => {\n  let data = await request({\n    url: formatURL(`/ehis/stock/excel.action?frameControlSubmitFunction=download&expFileName=${expFileName}`),\n    method: 'get',\n    responseType: 'blob'\n  })\n\n  return formatData(data)\n}\n\n// stock out\nexport const stockReport = (actionFunName, form = {}) => {\n  return new Promise((resolve, reject) => {\n    let errorFun = function (error) {\n      reject(error)\n    };\n    let backFun = function (data) {\n      resolve(data)\n    };\n    eframe.submitTargetForm({\n        url: '/ehis/stock/report.action',\n        form,\n        actionFunName,\n        succFun: backFun,\n        failFun: errorFun\n    });\n  })\n}\n\n// stock param\nexport const stockParam = (actionFunName, form = {}) => {\n  return new Promise((resolve, reject) => {\n    let errorFun = function (error) {\n      reject(error)\n    };\n    let backFun = function (data) {\n      resolve(data)\n    };\n    eframe.submitTargetForm({\n        url: '/ehis/stock/stockParam.action',\n        form,\n        actionFunName,\n        succFun: backFun,\n        failFun: errorFun\n    });\n  })\n}\n\n// get param\nexport const getStockParam = async (type, code) => {\n  let data = await request({\n    url: formatURL(`/ehis/stock/stockParam.action?frameControlSubmitFunction=${type}&param_type=${code}`),\n    method: 'get'\n  })\n\n  return formatData(data)\n}\n"]}]}