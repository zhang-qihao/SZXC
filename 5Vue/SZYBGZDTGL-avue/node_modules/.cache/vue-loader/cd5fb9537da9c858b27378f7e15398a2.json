{"remainingRequest":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-element-comps\\EfText.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-element-comps\\EfText.vue","mtime":1660200279664},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  BaseFieldTag\r\n} from './BaseFieldTag';\r\n\r\nexport default {\r\n  name: \"EfText\",\r\n  mixins: [BaseFieldTag], //继承基础BaseFieldTag\r\n  props: {\r\n    placeholder: { // 选择框提示文字，默认‘请选择’，非必传。\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    maxlength: {\r\n      require: false,\r\n      type: [String, Number],\r\n      default: null\r\n    },\r\n    minlength: {\r\n      require: false,\r\n      type: [String, Number],\r\n      default: null\r\n    },\r\n    buttonFlag: {\r\n      require: false,\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    checkFlag: {\r\n      require: false,\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    characterFlag: {\r\n      //特殊字符\r\n      require: false,\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    numberFlag: {\r\n      //特殊字符\r\n      require: false,\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    selectList: {\r\n      require: false,\r\n      type: Array,\r\n      default: function () {\r\n        return []\r\n      },\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      componentType: 'EfText',\r\n      compMaxLength: null,\r\n      compMinLength: null,\r\n    };\r\n  },\r\n  computed: {\r\n    formStyle() {\r\n      return this.$store.state.common.formStyle\r\n    },\r\n    placeholderClass() {\r\n      return this.$store.state.common.formStyle[0].size\r\n    }\r\n  },\r\n  watch: {\r\n    value() {\r\n      this.compValue = this.value;\r\n    }\r\n  },\r\n  created() {\r\n    if (typeof (this.maxlength) === \"string\") {\r\n      this.compMaxLength = Number(this.maxlength);\r\n    } else {\r\n      this.compMaxLength = this.maxlength;\r\n    }\r\n    if (typeof (this.minlength) === \"string\") {\r\n      this.compMinLength = Number(this.minlength);\r\n    } else {\r\n      this.compMinLength = this.minlength;\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    input(val) {\r\n      if (this.checkFlag) {\r\n        this.compValue = val.replace(\r\n            /[\\u4e00-\\u9fa5/\\s+/]|[`~!@#$%^&*() \\+ =<>?\"{}|, \\/ ;' \\\\ [ \\] ·~！@#￥%……&*（）—— \\+ ={}|《》？：“”【】、；‘’，。、]/g,\r\n            \"\");\r\n        this.$emit('compChange', this.compValue);\r\n        this.$emit('onInput', this.compValue);\r\n      } else if (this.characterFlag) {\r\n        this.compValue = val.replace(\r\n            /[`~!@#$%^&*() \\+ =<>?\"{}|, \\/ ;' \\\\ [ \\] ·~！@#￥%……&*（）—— \\+ ={}|《》？：“”【】、；‘’，。、]/g,\r\n            \"\");\r\n        this.$emit('compChange', this.compValue);\r\n        this.$emit('onInput', this.compValue);\r\n      } else if (this.numberFlag) {\r\n        var regexTel = new RegExp('^[0-9]*$');\r\n        if (!regexTel.test(val)) {\r\n          this.compValue = \"\"\r\n        }\r\n        this.$emit('compChange', this.compValue);\r\n        this.$emit('onInput', this.compValue);\r\n      } else {\r\n        this.$emit('compChange', val);\r\n        this.$emit('onInput', val);\r\n      }\r\n\r\n\r\n    },\r\n    focus(val) {\r\n      this.$emit('compFocus', val);\r\n    },\r\n    blur(val) {\r\n      this.$emit('compBlur', val);\r\n    },\r\n    setFocus() {\r\n      this.$refs[this.name].focus()\r\n      this.$refs[this.name].select()\r\n    },\r\n    setBlur() {\r\n      this.$refs[this.name].blur()\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["EfText.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"EfText.vue","sourceRoot":"src/components/ef-element-comps","sourcesContent":["<template>\r\n  <el-form-item :class=\"placeholderClass\" :label=\"label\" :label-width=\"compLabelWidth\" :prop=\"name\" :rules=\"rules\"\r\n                inline-message=\"true\">\r\n    <span slot=\"label\">{{ label }}</span>\r\n    <el-input :ref=\"name\" :size=\"formStyle[0].size\" v-model=\"compValue\" :placeholder=\"placeholder\" @input=\"input\"\r\n              @focus=\"focus\" @blur=\"blur\"\r\n              @change=\"change\" :disabled=\"compReadonly\" :maxlength=\"compMaxLength\" :minlength=\"compMinLength\">\r\n      <div slot=\"append\" v-if=\"buttonFlag\">\r\n        <slot></slot>\r\n      </div>\r\n    </el-input>\r\n    <div v-if=\"selectList.length != 0\">\r\n      <slot name=\"more-select\"></slot>\r\n    </div>\r\n  </el-form-item>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  BaseFieldTag\r\n} from './BaseFieldTag';\r\n\r\nexport default {\r\n  name: \"EfText\",\r\n  mixins: [BaseFieldTag], //继承基础BaseFieldTag\r\n  props: {\r\n    placeholder: { // 选择框提示文字，默认‘请选择’，非必传。\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    maxlength: {\r\n      require: false,\r\n      type: [String, Number],\r\n      default: null\r\n    },\r\n    minlength: {\r\n      require: false,\r\n      type: [String, Number],\r\n      default: null\r\n    },\r\n    buttonFlag: {\r\n      require: false,\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    checkFlag: {\r\n      require: false,\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    characterFlag: {\r\n      //特殊字符\r\n      require: false,\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    numberFlag: {\r\n      //特殊字符\r\n      require: false,\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    selectList: {\r\n      require: false,\r\n      type: Array,\r\n      default: function () {\r\n        return []\r\n      },\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      componentType: 'EfText',\r\n      compMaxLength: null,\r\n      compMinLength: null,\r\n    };\r\n  },\r\n  computed: {\r\n    formStyle() {\r\n      return this.$store.state.common.formStyle\r\n    },\r\n    placeholderClass() {\r\n      return this.$store.state.common.formStyle[0].size\r\n    }\r\n  },\r\n  watch: {\r\n    value() {\r\n      this.compValue = this.value;\r\n    }\r\n  },\r\n  created() {\r\n    if (typeof (this.maxlength) === \"string\") {\r\n      this.compMaxLength = Number(this.maxlength);\r\n    } else {\r\n      this.compMaxLength = this.maxlength;\r\n    }\r\n    if (typeof (this.minlength) === \"string\") {\r\n      this.compMinLength = Number(this.minlength);\r\n    } else {\r\n      this.compMinLength = this.minlength;\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    input(val) {\r\n      if (this.checkFlag) {\r\n        this.compValue = val.replace(\r\n            /[\\u4e00-\\u9fa5/\\s+/]|[`~!@#$%^&*() \\+ =<>?\"{}|, \\/ ;' \\\\ [ \\] ·~！@#￥%……&*（）—— \\+ ={}|《》？：“”【】、；‘’，。、]/g,\r\n            \"\");\r\n        this.$emit('compChange', this.compValue);\r\n        this.$emit('onInput', this.compValue);\r\n      } else if (this.characterFlag) {\r\n        this.compValue = val.replace(\r\n            /[`~!@#$%^&*() \\+ =<>?\"{}|, \\/ ;' \\\\ [ \\] ·~！@#￥%……&*（）—— \\+ ={}|《》？：“”【】、；‘’，。、]/g,\r\n            \"\");\r\n        this.$emit('compChange', this.compValue);\r\n        this.$emit('onInput', this.compValue);\r\n      } else if (this.numberFlag) {\r\n        var regexTel = new RegExp('^[0-9]*$');\r\n        if (!regexTel.test(val)) {\r\n          this.compValue = \"\"\r\n        }\r\n        this.$emit('compChange', this.compValue);\r\n        this.$emit('onInput', this.compValue);\r\n      } else {\r\n        this.$emit('compChange', val);\r\n        this.$emit('onInput', val);\r\n      }\r\n\r\n\r\n    },\r\n    focus(val) {\r\n      this.$emit('compFocus', val);\r\n    },\r\n    blur(val) {\r\n      this.$emit('compBlur', val);\r\n    },\r\n    setFocus() {\r\n      this.$refs[this.name].focus()\r\n      this.$refs[this.name].select()\r\n    },\r\n    setBlur() {\r\n      this.$refs[this.name].blur()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n</style>\r\n"]}]}