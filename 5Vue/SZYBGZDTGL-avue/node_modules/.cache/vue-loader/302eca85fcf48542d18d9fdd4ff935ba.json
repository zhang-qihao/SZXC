{"remainingRequest":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\page\\index\\top\\top-search.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\page\\index\\top\\top-search.vue","mtime":1640694381933},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport config from \"../sidebar/config.js\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  data () {\r\n    return {\r\n      config: config,\r\n      value: \"\",\r\n      menuList: []\r\n    };\r\n  },\r\n  created () {\r\n    this.getMenuList();\r\n  },\r\n\r\n  watch: {\r\n    menu () {\r\n      this.getMenuList();\r\n    }\r\n  },\r\n  computed: {\r\n    labelKey () {\r\n      return this.website.menu.props.label || this.config.propsDefault.label;\r\n    },\r\n    pathKey () {\r\n      return this.website.menu.props.path || this.config.propsDefault.path;\r\n    },\r\n    iconKey () {\r\n      return this.website.menu.props.icon || this.config.propsDefault.icon;\r\n    },\r\n    childrenKey () {\r\n      return (\r\n        this.website.menu.props.children || this.config.propsDefault.children\r\n      );\r\n    },\r\n    ...mapGetters([\"menu\", \"website\"])\r\n  },\r\n  methods: {\r\n    getMenuList () {\r\n      const findMenu = list => {\r\n        for (let i = 0; i < list.length; i++) {\r\n          const ele = Object.assign({}, list[i]);\r\n          if (this.validatenull(ele[this.childrenKey])) {\r\n            this.menuList.push(ele);\r\n          } else {\r\n            findMenu(ele[this.childrenKey]);\r\n          }\r\n        }\r\n      };\r\n      this.menuList = [];\r\n      findMenu(this.menu);\r\n    },\r\n    querySearch (queryString, cb) {\r\n      var restaurants = this.menuList;\r\n      var results = queryString\r\n        ? restaurants.filter(this.createFilter(queryString))\r\n        : restaurants;\r\n      // 调用 callback 返回建议列表的数据\r\n      cb(results);\r\n    },\r\n    createFilter (queryString) {\r\n      return restaurant => {\r\n        return (\r\n          restaurant.label.toLowerCase().indexOf(queryString.toLowerCase()) ===\r\n          0\r\n        );\r\n      };\r\n    },\r\n    handleSelect (item) {\r\n      this.value = \"\";\r\n      this.$router.push({\r\n        path: this.$router.$avueRouter.getPath({\r\n          name: item[this.labelKey],\r\n          src: item[this.pathKey]\r\n        }, item.meta),\r\n        query: item.query\r\n      });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["top-search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"top-search.vue","sourceRoot":"src/page/index/top","sourcesContent":["<template>\r\n  <el-autocomplete class=\"top-search\"\r\n                   popper-class=\"my-autocomplete\"\r\n                   v-model=\"value\"\r\n                   :fetch-suggestions=\"querySearch\"\r\n                   :placeholder=\"$t('search')\"\r\n                   @select=\"handleSelect\">\r\n\r\n    <template slot-scope=\"{ item }\">\r\n      <i :class=\"[item[iconKey],'icon']\"></i>\r\n      <div class=\"name\">{{ item[labelKey] }}</div>\r\n      <div class=\"addr\">{{ item[pathKey] }}</div>\r\n    </template>\r\n  </el-autocomplete>\r\n</template>\r\n\r\n<script>\r\nimport config from \"../sidebar/config.js\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  data () {\r\n    return {\r\n      config: config,\r\n      value: \"\",\r\n      menuList: []\r\n    };\r\n  },\r\n  created () {\r\n    this.getMenuList();\r\n  },\r\n\r\n  watch: {\r\n    menu () {\r\n      this.getMenuList();\r\n    }\r\n  },\r\n  computed: {\r\n    labelKey () {\r\n      return this.website.menu.props.label || this.config.propsDefault.label;\r\n    },\r\n    pathKey () {\r\n      return this.website.menu.props.path || this.config.propsDefault.path;\r\n    },\r\n    iconKey () {\r\n      return this.website.menu.props.icon || this.config.propsDefault.icon;\r\n    },\r\n    childrenKey () {\r\n      return (\r\n        this.website.menu.props.children || this.config.propsDefault.children\r\n      );\r\n    },\r\n    ...mapGetters([\"menu\", \"website\"])\r\n  },\r\n  methods: {\r\n    getMenuList () {\r\n      const findMenu = list => {\r\n        for (let i = 0; i < list.length; i++) {\r\n          const ele = Object.assign({}, list[i]);\r\n          if (this.validatenull(ele[this.childrenKey])) {\r\n            this.menuList.push(ele);\r\n          } else {\r\n            findMenu(ele[this.childrenKey]);\r\n          }\r\n        }\r\n      };\r\n      this.menuList = [];\r\n      findMenu(this.menu);\r\n    },\r\n    querySearch (queryString, cb) {\r\n      var restaurants = this.menuList;\r\n      var results = queryString\r\n        ? restaurants.filter(this.createFilter(queryString))\r\n        : restaurants;\r\n      // 调用 callback 返回建议列表的数据\r\n      cb(results);\r\n    },\r\n    createFilter (queryString) {\r\n      return restaurant => {\r\n        return (\r\n          restaurant.label.toLowerCase().indexOf(queryString.toLowerCase()) ===\r\n          0\r\n        );\r\n      };\r\n    },\r\n    handleSelect (item) {\r\n      this.value = \"\";\r\n      this.$router.push({\r\n        path: this.$router.$avueRouter.getPath({\r\n          name: item[this.labelKey],\r\n          src: item[this.pathKey]\r\n        }, item.meta),\r\n        query: item.query\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.my-autocomplete {\r\n  li {\r\n    line-height: normal;\r\n    padding: 7px;\r\n    .icon {\r\n      margin-right: 5px;\r\n      display: inline-block;\r\n      vertical-align: middle;\r\n    }\r\n    .name {\r\n      display: inline-block;\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n      vertical-align: middle;\r\n    }\r\n    .addr {\r\n      padding-top: 5px;\r\n      width: 100%;\r\n      font-size: 12px;\r\n      color: #b4b4b4;\r\n    }\r\n\r\n    .highlighted .addr {\r\n      color: #ddd;\r\n    }\r\n  }\r\n}\r\n</style>"]}]}