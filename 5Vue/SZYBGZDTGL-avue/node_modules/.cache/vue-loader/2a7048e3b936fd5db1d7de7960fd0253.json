{"remainingRequest":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-element-comps\\EfShowValue.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-element-comps\\EfShowValue.vue","mtime":1656319319515},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\r\nimport {BaseFieldTag} from \"./BaseFieldTag\";\r\nimport store from \"../../store\";\r\n\r\nexport default {\r\n  name: \"EfShowValue\",\r\n  mixins: [BaseFieldTag],         //继承基础BaseFieldTag\r\n  props: {\r\n    dictionaryNo: { // 数据字典编号。\r\n      type: String,\r\n      default: null,\r\n    },\r\n    list: {  //分组\r\n      type: [String, Array],\r\n      default: null,\r\n    },\r\n    listKey: {  //列中内容字段\r\n      type: String,\r\n      default: 'code',\r\n    },\r\n    listValue: {  //列中标题字段\r\n      type: String,\r\n      default: \"name\",\r\n    },\r\n    queryNo: {  //列中标题字段\r\n      type: String,\r\n      default: null,\r\n    },\r\n    multiple: { // 是否多选，默认false，非必传。\r\n      type: [String, Boolean],\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {};\r\n  },\r\n  computed:{\r\n    appStyle(){\r\n      return this.$store.state.common.appStyle\r\n    }\r\n  },\r\n  watch: {\r\n    value() {\r\n      this.getOptions();\r\n    }\r\n  },\r\n  created() {\r\n    this.getOptions();\r\n  },\r\n  methods: {\r\n    /**\r\n     * 获取下拉框的选择项数据\r\n     */\r\n    getOptions() {\r\n      if (this.dictionaryNo) {\r\n        //this.$eframe.loadDicItem( {dicId:this.dictionaryNo},(data)=>{ this.optionLists = data;  } );\r\n        let form = {\r\n          dicId: this.dictionaryNo,\r\n          dicListGroup: '',  //字典分组\r\n          language: '', //语种\r\n          catchFlag: this.compCatch, //是否使用缓存，默认true\r\n        };\r\n        store.dispatch('LoadDicItem', form)\r\n            .then((data) => {\r\n              this.optionLists = data;\r\n              this.compValue=this.findValue(this.optionLists)\r\n            })\r\n            .catch((msg) => {\r\n              this.$eframe.alertError(msg);\r\n            });\r\n        return;\r\n      }\r\n      if (this.list) {\r\n        if (this.$eframe.isArray(this.list)) { // 如果父组件有下拉选项数据，则不进行数据请求\r\n          this.optionLists = this.list;\r\n          this.compValue=this.findValue(this.optionLists)\r\n        } else if (typeof (this.list) === \"string\") { // 如果父组件有下拉选项数据，则不进行数据请求\r\n          this.optionLists = JSON.parse(this.list);\r\n          this.compValue=this.findValue(this.optionLists)\r\n        }\r\n        return;\r\n      }\r\n    },\r\n    findValue(list) {\r\n      for (let k in list){\r\n        // if (list[k].[this.listKey]===this.value){\r\n        //   return list[k].[this.listValue];\r\n        // }\r\n      }\r\n      return this.value;\r\n    }\r\n  },\r\n}\r\n",{"version":3,"sources":["EfShowValue.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EfShowValue.vue","sourceRoot":"src/components/ef-element-comps","sourcesContent":["<template>\r\n  <el-form-item :label=\"label\" :prop=\"name\" :label-width=\"compLabelWidth\" :rules=\"rules\" inline-message=\"true\">\r\n    <span :style=\"appStyle\">{{compValue}}</span>\r\n  </el-form-item>\r\n</template>\r\n\r\n<script>\r\nimport {BaseFieldTag} from \"./BaseFieldTag\";\r\nimport store from \"../../store\";\r\n\r\nexport default {\r\n  name: \"EfShowValue\",\r\n  mixins: [BaseFieldTag],         //继承基础BaseFieldTag\r\n  props: {\r\n    dictionaryNo: { // 数据字典编号。\r\n      type: String,\r\n      default: null,\r\n    },\r\n    list: {  //分组\r\n      type: [String, Array],\r\n      default: null,\r\n    },\r\n    listKey: {  //列中内容字段\r\n      type: String,\r\n      default: 'code',\r\n    },\r\n    listValue: {  //列中标题字段\r\n      type: String,\r\n      default: \"name\",\r\n    },\r\n    queryNo: {  //列中标题字段\r\n      type: String,\r\n      default: null,\r\n    },\r\n    multiple: { // 是否多选，默认false，非必传。\r\n      type: [String, Boolean],\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {};\r\n  },\r\n  computed:{\r\n    appStyle(){\r\n      return this.$store.state.common.appStyle\r\n    }\r\n  },\r\n  watch: {\r\n    value() {\r\n      this.getOptions();\r\n    }\r\n  },\r\n  created() {\r\n    this.getOptions();\r\n  },\r\n  methods: {\r\n    /**\r\n     * 获取下拉框的选择项数据\r\n     */\r\n    getOptions() {\r\n      if (this.dictionaryNo) {\r\n        //this.$eframe.loadDicItem( {dicId:this.dictionaryNo},(data)=>{ this.optionLists = data;  } );\r\n        let form = {\r\n          dicId: this.dictionaryNo,\r\n          dicListGroup: '',  //字典分组\r\n          language: '', //语种\r\n          catchFlag: this.compCatch, //是否使用缓存，默认true\r\n        };\r\n        store.dispatch('LoadDicItem', form)\r\n            .then((data) => {\r\n              this.optionLists = data;\r\n              this.compValue=this.findValue(this.optionLists)\r\n            })\r\n            .catch((msg) => {\r\n              this.$eframe.alertError(msg);\r\n            });\r\n        return;\r\n      }\r\n      if (this.list) {\r\n        if (this.$eframe.isArray(this.list)) { // 如果父组件有下拉选项数据，则不进行数据请求\r\n          this.optionLists = this.list;\r\n          this.compValue=this.findValue(this.optionLists)\r\n        } else if (typeof (this.list) === \"string\") { // 如果父组件有下拉选项数据，则不进行数据请求\r\n          this.optionLists = JSON.parse(this.list);\r\n          this.compValue=this.findValue(this.optionLists)\r\n        }\r\n        return;\r\n      }\r\n    },\r\n    findValue(list) {\r\n      for (let k in list){\r\n        // if (list[k].[this.listKey]===this.value){\r\n        //   return list[k].[this.listValue];\r\n        // }\r\n      }\r\n      return this.value;\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}