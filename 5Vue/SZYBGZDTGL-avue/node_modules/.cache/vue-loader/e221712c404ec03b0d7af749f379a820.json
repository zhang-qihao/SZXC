{"remainingRequest":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\page\\login\\codelogin.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\page\\login\\codelogin.vue","mtime":1644218659271},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.msg-text {\r\n  display: block;\r\n  width: 60px;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n}\r\n.msg-text.display {\r\n  color: #ccc;\r\n}\r\n",{"version":3,"sources":["codelogin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"codelogin.vue","sourceRoot":"src/page/login","sourcesContent":["<template>\r\n  <el-form class=\"login-form\"\r\n           status-icon\r\n           :rules=\"loginRules\"\r\n           ref=\"loginForm\"\r\n           :model=\"loginForm\"\r\n           label-width=\"0\">\r\n    <el-form-item prop=\"phone\">\r\n      <el-input size=\"small\"\r\n                @keyup.enter.native=\"handleLogin\"\r\n                v-model=\"loginForm.phone\"\r\n                auto-complete=\"off\"\r\n                :placeholder=\"$t('login.phone')\">\r\n        <i slot=\"prefix\"\r\n           class=\"icon-shouji\"></i>\r\n      </el-input>\r\n    </el-form-item>\r\n    <el-form-item prop=\"code\">\r\n      <el-input size=\"small\"\r\n                @keyup.enter.native=\"handleLogin\"\r\n                v-model=\"loginForm.code\"\r\n                auto-complete=\"off\"\r\n                :placeholder=\"$t('login.code')\">\r\n        <i slot=\"prefix\"\r\n           class=\"icon-yanzhengma\"\r\n           style=\"margin-top:6px;\"></i>\r\n        <template slot=\"append\">\r\n          <span @click=\"handleSend\"\r\n                class=\"msg-text\"\r\n                :class=\"[{display:msgKey}]\">{{msgText}}</span>\r\n        </template>\r\n      </el-input>\r\n    </el-form-item>\r\n    <el-form-item style=\"border: none\">\r\n      <el-button v-prevent-re-click size=\"small\"\r\n                 style=\"width: 100%;\r\n                        height: 48px;\r\n                        background: #0088ff;\r\n                        display: flex;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        font-size: 20px;\r\n                        letter-spacing: 2px;\r\n                        font-weight: 400;\r\n                        color: #fff;\r\n                        cursor: pointer;\r\n                        margin-top: 25px;\r\n                        border-radius: 5px;\"\r\n                 type=\"primary\"\r\n                 @click.native.prevent=\"handleLogin\"\r\n                 class=\"login-submit\">{{$t('login.submit')}}</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport { isvalidatemobile } from \"@/util/validate\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  name: \"codelogin\",\r\n  data() {\r\n    const validatePhone = (rule, value, callback) => {\r\n      if (isvalidatemobile(value)[0]) {\r\n        callback(new Error(isvalidatemobile(value)[1]));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const validateCode = (rule, value, callback) => {\r\n      if (value.length != 4) {\r\n        callback(new Error(\"请输入4位数的验证码\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      msgText: \"\",\r\n      msgTime: \"\",\r\n      msgKey: false,\r\n      loginForm: {\r\n        phone: \"\",\r\n        code: \"\"\r\n      },\r\n      loginRules: {\r\n        phone: [{ required: true, trigger: \"blur\", validator: validatePhone }],\r\n        code: [{ required: true, trigger: \"blur\", validator: validateCode }]\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.msgText = this.config.MSGINIT;\r\n    this.msgTime = this.config.MSGTIME;\r\n  },\r\n  mounted() {},\r\n  computed: {\r\n    ...mapGetters([\"tagWel\"]),\r\n    config() {\r\n      return {\r\n        MSGINIT: this.$t(\"login.msgText\"),\r\n        MSGSCUCCESS: this.$t(\"login.msgSuccess\"),\r\n        MSGTIME: 60\r\n      };\r\n    }\r\n  },\r\n  props: [],\r\n  methods: {\r\n    handleSend() {\r\n      if (this.msgKey) return;\r\n      this.msgText = this.msgTime + this.config.MSGSCUCCESS;\r\n      this.msgKey = true;\r\n      const time = setInterval(() => {\r\n        this.msgTime--;\r\n        this.msgText = this.msgTime + this.config.MSGSCUCCESS;\r\n        if (this.msgTime == 0) {\r\n          this.msgTime = this.config.MSGTIME;\r\n          this.msgText = this.config.MSGINIT;\r\n          this.msgKey = false;\r\n          clearInterval(time);\r\n        }\r\n      }, 1000);\r\n    },\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (valid) {\r\n          this.$store.dispatch(\"LoginByPhone\", this.loginForm).then(() => {\r\n            this.$router.push({ path: this.tagWel.value });\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.msg-text {\r\n  display: block;\r\n  width: 60px;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n}\r\n.msg-text.display {\r\n  color: #ccc;\r\n}\r\n</style>\r\n"]}]}