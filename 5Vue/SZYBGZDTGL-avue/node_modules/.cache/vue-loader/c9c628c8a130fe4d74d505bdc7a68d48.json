{"remainingRequest":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\page\\index\\tags.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\page\\index\\tags.vue","mtime":1660110386577},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from \"vuex\";\r\nimport {BaseCtrl} from '/src/util/eframe'\r\nexport default {\r\n  name: \"tags\",\r\n  mixins: [BaseCtrl],\r\n  data () {\r\n    return {\r\n      refresh: false,\r\n      active: \"\",\r\n      contentmenuX: \"\",\r\n      contentmenuY: \"\",\r\n      contextmenuFlag: false\r\n    };\r\n  },\r\n  created () { },\r\n  mounted () {\r\n    this.setActive();\r\n  },\r\n  watch: {\r\n    tag () {\r\n      this.setActive();\r\n    },\r\n    contextmenuFlag () {\r\n      window.addEventListener(\"mousedown\", this.watchContextmenu);\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"tagWel\", \"tagList\", \"tag\", \"website\", \"setting\"]),\r\n    tagLen () {\r\n      return this.tagList.length || 0;\r\n    }\r\n  },\r\n  methods: {\r\n    handleRefresh () {\r\n      this.refresh = true;\r\n      this.$store.commit('SET_IS_REFRESH', false);\r\n      setTimeout(() => {\r\n        this.$store.commit('SET_IS_REFRESH', true);\r\n      }, 100)\r\n      setTimeout(() => {\r\n        this.refresh = false;\r\n      }, 1000)\r\n    },\r\n    generateTitle (item) {\r\n      return this.$router.$avueRouter.generateTitle(\r\n        item.label,\r\n        (item.meta || {}).i18n\r\n      );\r\n    },\r\n    watchContextmenu (event) {\r\n      if (!this.$el.contains(event.target) || event.button !== 0) {\r\n        this.contextmenuFlag = false;\r\n      }\r\n      window.removeEventListener(\"mousedown\", this.watchContextmenu);\r\n    },\r\n    handleContextmenu (event) {\r\n      // let target = event.target;\r\n      // 解决 https://github.com/d2-projects/d2-admin/issues/54\r\n      // let flag = false;\r\n      // if (target.className.indexOf(\"el-tabs__item\") > -1) flag = true;\r\n      // else if (target.parentNode.className.indexOf(\"el-tabs__item\") > -1) {\r\n      //   target = target.parentNode;\r\n      //   flag = true;\r\n      // }\r\n      // if (flag) {\r\n      // console.log(target)\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.contentmenuX = event.clientX;\r\n        this.contentmenuY = event.clientY;\r\n        this.contextmenuFlag = true;\r\n      // }\r\n    },\r\n    //激活当前选项\r\n    setActive () {\r\n      this.active = this.tag.value;\r\n    },\r\n    menuTag (value, action) {\r\n      if (action === \"remove\") {\r\n        let openTag; // 最终要打开的页面\r\n        let { tag, key } = this.findTag(value);\r\n\r\n        if (tag.value === this.tag.value) {\r\n          openTag = this.tagList[key === 0 ? key : key - 1]; //如果关闭本标签让前推一个\r\n        } else {\r\n          openTag = this.tag;\r\n          this.openTag(tag);\r\n        }\r\n        if(tag.saveFlag){\r\n          let okFun = ()=>{\r\n            this.$store.commit(\"DEL_TAG\", tag);\r\n            this.openTag(openTag);\r\n          }\r\n          let cancleFun = ()=>{\r\n            this.openTag(tag)\r\n          }\r\n          this.confirm('提示','数据有变动,尚未保存,是否关闭',okFun,cancleFun)\r\n        }else{\r\n          this.$store.commit(\"DEL_TAG\", tag);\r\n          this.openTag(openTag);\r\n        }\r\n      }\r\n    },\r\n    openTag (item) {\r\n      let tag;\r\n      if (item.name) {\r\n        tag = this.findTag(item.name).tag;\r\n      } else {\r\n        tag = item;\r\n      }\r\n      if(this.website.mainPageFrameType == 'T2'){\r\n          this.$store.commit('SET_T2MENU',tag.topId)\r\n      }\r\n      //tag切换接诊页面,不刷新页面\r\n      if(tag.query.drvisit_flag){\r\n        tag.query.drvisit_flag = false\r\n      }\r\n      this.$router.push({\r\n        path: this.$router.$avueRouter.getPath({\r\n          name: tag.label,\r\n          src: tag.value\r\n        }, tag.meta),\r\n        query: tag.query\r\n      });\r\n    },\r\n    findTag (value) {\r\n      let tag, key;\r\n      this.tagList.map((item, index) => {\r\n        if (item.value === value) {\r\n          tag = item;\r\n          key = index;\r\n        }\r\n      });\r\n      return { tag: tag, key: key };\r\n    },\r\n    // 因需清除每个keep-alive页面的缓存，需一个一个的激活tag到前台做删除\r\n    activeTag (tagList) {\r\n      tagList.forEach(item => {\r\n        this.openTag(item);\r\n        this.$store.commit(\"DEL_TAG\", item);\r\n      });\r\n    },\r\n    closeOthersTags () {\r\n      this.contextmenuFlag = false;\r\n      let openTag = this.tag;\r\n      let tagList = this.tagList.filter(item =>\r\n        item.value !== this.tag.value && !this.website.isFirstPage && item.value !== this.tagWel.value\r\n      );\r\n      this.activeTag(tagList)\r\n      this.$nextTick(()=>{\r\n        this.openTag(openTag);\r\n      })\r\n    },\r\n    closeAllTags () {\r\n      this.contextmenuFlag = false;\r\n\t  let tagList = this.tagList.filter(item =>\r\n\t    !this.website.isFirstPage && item.value != this.tagWel.value\r\n\t  );\r\n\t  this.activeTag(tagList)\r\n\t  this.$nextTick(()=>{\r\n      this.openTag(this.tagWel);\r\n    })\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["tags.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tags.vue","sourceRoot":"src/page/index","sourcesContent":["<template>\r\n  <div class=\"avue-tags\"\r\n       v-if=\"setting.tag\"\r\n       @click=\"contextmenuFlag=false\">\r\n    <!-- tag盒子 -->\r\n    <div v-if=\"contextmenuFlag\"\r\n         class=\"avue-tags__contentmenu\"\r\n         :style=\"{left:contentmenuX+'px',top:contentmenuY+'px'}\">\r\n      <div class=\"item\"\r\n           @click=\"closeOthersTags\">{{$t('tagsView.closeOthers')}}</div>\r\n      <div class=\"item\"\r\n           @click=\"closeAllTags\">{{$t('tagsView.closeAll')}}</div>\r\n    </div>\r\n    <div class=\"avue-tags__box\"\r\n         :class=\"{'avue-tags__box--close':!website.isFirstPage}\">\r\n      <el-tabs v-model=\"active\"\r\n               type=\"card\"\r\n               :closable=\"tagLen!==1\"\r\n               @tab-click=\"openTag\"\r\n               @contextmenu.prevent.native=\"handleContextmenu\"\r\n               @edit=\"menuTag\">\r\n        <el-tab-pane :key=\"item.value\"\r\n                     v-for=\"(item,index) in tagList\"\r\n                     :label=\"generateTitle(item)\"\r\n                     :name=\"item.value\">\r\n          <span slot=\"label\">\r\n            <span v-if=\"index != 0\">{{generateTitle(item)}}</span>\r\n            <i v-if=\"index == 0\" class=\"el-icon-s-home\" style=\"color: #77787b;font-size: 14px;margin-right: 5px\"></i>\r\n            <!-- 取消菜单刷新 -->\r\n<!--            <i class=\"el-icon-refresh\" :class=\"{'turn':refresh}\" @click=\"handleRefresh\" v-if=\"active==item.value\"></i>-->\r\n          </span>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n<!--      修改-->\r\n<!--      <el-dropdown class=\"avue-tags__menu\">-->\r\n<!--        <el-button type=\"primary\"-->\r\n<!--                   style=\"height: 24px\"-->\r\n<!--                   size=\"mini\">-->\r\n<!--          {{$t('tagsView.menu')}}-->\r\n<!--          <i class=\"el-icon-arrow-down el-icon&#45;&#45;right\"></i>-->\r\n<!--        </el-button>-->\r\n<!--        <el-dropdown-menu slot=\"dropdown\">-->\r\n<!--          <el-dropdown-item @click.native=\"$parent.isSearch=true\">{{$t('tagsView.search')}}</el-dropdown-item>-->\r\n<!--          <el-dropdown-item @click.native=\"closeOthersTags\">{{$t('tagsView.closeOthers')}}</el-dropdown-item>-->\r\n<!--          <el-dropdown-item @click.native=\"closeAllTags\">{{$t('tagsView.closeAll')}}</el-dropdown-item>-->\r\n<!--        </el-dropdown-menu>-->\r\n<!--      </el-dropdown>-->\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport {BaseCtrl} from '/src/util/eframe'\r\nexport default {\r\n  name: \"tags\",\r\n  mixins: [BaseCtrl],\r\n  data () {\r\n    return {\r\n      refresh: false,\r\n      active: \"\",\r\n      contentmenuX: \"\",\r\n      contentmenuY: \"\",\r\n      contextmenuFlag: false\r\n    };\r\n  },\r\n  created () { },\r\n  mounted () {\r\n    this.setActive();\r\n  },\r\n  watch: {\r\n    tag () {\r\n      this.setActive();\r\n    },\r\n    contextmenuFlag () {\r\n      window.addEventListener(\"mousedown\", this.watchContextmenu);\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"tagWel\", \"tagList\", \"tag\", \"website\", \"setting\"]),\r\n    tagLen () {\r\n      return this.tagList.length || 0;\r\n    }\r\n  },\r\n  methods: {\r\n    handleRefresh () {\r\n      this.refresh = true;\r\n      this.$store.commit('SET_IS_REFRESH', false);\r\n      setTimeout(() => {\r\n        this.$store.commit('SET_IS_REFRESH', true);\r\n      }, 100)\r\n      setTimeout(() => {\r\n        this.refresh = false;\r\n      }, 1000)\r\n    },\r\n    generateTitle (item) {\r\n      return this.$router.$avueRouter.generateTitle(\r\n        item.label,\r\n        (item.meta || {}).i18n\r\n      );\r\n    },\r\n    watchContextmenu (event) {\r\n      if (!this.$el.contains(event.target) || event.button !== 0) {\r\n        this.contextmenuFlag = false;\r\n      }\r\n      window.removeEventListener(\"mousedown\", this.watchContextmenu);\r\n    },\r\n    handleContextmenu (event) {\r\n      // let target = event.target;\r\n      // 解决 https://github.com/d2-projects/d2-admin/issues/54\r\n      // let flag = false;\r\n      // if (target.className.indexOf(\"el-tabs__item\") > -1) flag = true;\r\n      // else if (target.parentNode.className.indexOf(\"el-tabs__item\") > -1) {\r\n      //   target = target.parentNode;\r\n      //   flag = true;\r\n      // }\r\n      // if (flag) {\r\n      // console.log(target)\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.contentmenuX = event.clientX;\r\n        this.contentmenuY = event.clientY;\r\n        this.contextmenuFlag = true;\r\n      // }\r\n    },\r\n    //激活当前选项\r\n    setActive () {\r\n      this.active = this.tag.value;\r\n    },\r\n    menuTag (value, action) {\r\n      if (action === \"remove\") {\r\n        let openTag; // 最终要打开的页面\r\n        let { tag, key } = this.findTag(value);\r\n\r\n        if (tag.value === this.tag.value) {\r\n          openTag = this.tagList[key === 0 ? key : key - 1]; //如果关闭本标签让前推一个\r\n        } else {\r\n          openTag = this.tag;\r\n          this.openTag(tag);\r\n        }\r\n        if(tag.saveFlag){\r\n          let okFun = ()=>{\r\n            this.$store.commit(\"DEL_TAG\", tag);\r\n            this.openTag(openTag);\r\n          }\r\n          let cancleFun = ()=>{\r\n            this.openTag(tag)\r\n          }\r\n          this.confirm('提示','数据有变动,尚未保存,是否关闭',okFun,cancleFun)\r\n        }else{\r\n          this.$store.commit(\"DEL_TAG\", tag);\r\n          this.openTag(openTag);\r\n        }\r\n      }\r\n    },\r\n    openTag (item) {\r\n      let tag;\r\n      if (item.name) {\r\n        tag = this.findTag(item.name).tag;\r\n      } else {\r\n        tag = item;\r\n      }\r\n      if(this.website.mainPageFrameType == 'T2'){\r\n          this.$store.commit('SET_T2MENU',tag.topId)\r\n      }\r\n      //tag切换接诊页面,不刷新页面\r\n      if(tag.query.drvisit_flag){\r\n        tag.query.drvisit_flag = false\r\n      }\r\n      this.$router.push({\r\n        path: this.$router.$avueRouter.getPath({\r\n          name: tag.label,\r\n          src: tag.value\r\n        }, tag.meta),\r\n        query: tag.query\r\n      });\r\n    },\r\n    findTag (value) {\r\n      let tag, key;\r\n      this.tagList.map((item, index) => {\r\n        if (item.value === value) {\r\n          tag = item;\r\n          key = index;\r\n        }\r\n      });\r\n      return { tag: tag, key: key };\r\n    },\r\n    // 因需清除每个keep-alive页面的缓存，需一个一个的激活tag到前台做删除\r\n    activeTag (tagList) {\r\n      tagList.forEach(item => {\r\n        this.openTag(item);\r\n        this.$store.commit(\"DEL_TAG\", item);\r\n      });\r\n    },\r\n    closeOthersTags () {\r\n      this.contextmenuFlag = false;\r\n      let openTag = this.tag;\r\n      let tagList = this.tagList.filter(item =>\r\n        item.value !== this.tag.value && !this.website.isFirstPage && item.value !== this.tagWel.value\r\n      );\r\n      this.activeTag(tagList)\r\n      this.$nextTick(()=>{\r\n        this.openTag(openTag);\r\n      })\r\n    },\r\n    closeAllTags () {\r\n      this.contextmenuFlag = false;\r\n\t  let tagList = this.tagList.filter(item =>\r\n\t    !this.website.isFirstPage && item.value != this.tagWel.value\r\n\t  );\r\n\t  this.activeTag(tagList)\r\n\t  this.$nextTick(()=>{\r\n      this.openTag(this.tagWel);\r\n    })\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n"]}]}