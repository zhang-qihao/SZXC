{"remainingRequest":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-element-comps\\EfTextarea.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-element-comps\\EfTextarea.vue","mtime":1646708687757},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\兴才svn平台\\01苏州医保局\\88苏州医保中心岗位职责动态管理系统（SZYBGZDTGL）\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {BaseFieldTag} from './BaseFieldTag';\n\nexport default {\n    name: \"EfTextarea\",\n    mixins: [BaseFieldTag],         //继承基础BaseFieldTag\n    props:{\n        placeholder: { // 选择框提示文字，默认‘请选择’，非必传。\n            type: String,\n            default: \"\",\n        },\n        maxlength:{\n            require:false,\n            type: [String,Number],\n            default:null\n        },\n        minlength:{\n            require:false,\n            type: [String,Number],\n            default:null\n        },\n        rows:{\n            require:false,\n            type: [String,Number],\n            default:2\n        },\n        autosize:{\n          require:false,\n          type:Boolean,\n          default:false\n        },\n    },\n    data(){\n        return {\n            componentType:'EfTextarea',\n            compMaxLength:null,\n            compMinLength:null,\n            compRows:2,\n        };\n    },\n  watch: {\n    value: {//深度监听，可监听到对象、数组的变化\n      immediate: true,\n      handler(val) {\n        this.compValue=val;\n      },\n      // deep: true //true 深度监听\n    }\n  },\n  computed:{\n    formStyle(){\n      return this.$store.state.common.formStyle\n    },\n    placeholderClass(){\n      return this.$store.state.common.formStyle[0].size\n    },\n    appStyle(){\n      return this.$store.state.common.appStyle\n    }\n  },\n    created() {\n\n        if (typeof (this.maxlength) === \"string\") {\n            this.compMaxLength = Number(this.maxlength) ;\n        } else {\n            this.compMaxLength = this.maxlength;\n        }\n        if (typeof (this.minlength) === \"string\") {\n            this.compMinLength = Number(this.minlength) ;\n        } else {\n            this.compMinLength = this.minlength;\n        }\n        if (typeof (this.rows) === \"string\") {\n            this.compRows = Number(this.rows) ;\n        } else {\n            this.compRows = this.rows;\n        }\n    },\n    methods:{\n        input(val){\n            this.$emit('compChange', val);\n            this.$emit('onInput', val);\n        },\n      setFocus(){\n        this.$refs[this.name].focus()\n        this.$refs[this.name].select()\n      },\n      setBlur(){\n        this.$refs[this.name].blur()\n      },\n      focus(val) {\n        this.$emit('compFocus', val);\n      },\n      blur(val) {\n        this.$emit('compBlur', val);\n      },\n    }\n}\n",{"version":3,"sources":["EfTextarea.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EfTextarea.vue","sourceRoot":"src/components/ef-element-comps","sourcesContent":["<template>\r\n    <el-form-item :class=\"placeholderClass\" :label-width=\"compLabelWidth\" :label=\"label\" :prop=\"name\" :rules=\"rules\" inline-message=\"true\">\r\n      <span slot=\"label\">{{ label }}</span>\r\n      <el-input\r\n          :ref=\"name\"\r\n          :style=\"appStyle\"\r\n                type=\"textarea\"\r\n                v-model=\"compValue\"\r\n                :placeholder=\"placeholder\"\r\n                @input=\"input\"\r\n                @change=\"change\"\r\n                :disabled=\"compReadonly\"\r\n                :maxlength=\"compMaxLength\"\r\n                :minlength=\"compMinLength\"\r\n                :rows=\"compRows\"\r\n                :autosize=\"autosize\"\r\n          @focus=\"focus\" @blur=\"blur\"\r\n                show-word-limit\r\n        />\r\n    </el-form-item>\r\n</template>\r\n\r\n<script>\r\n    import {BaseFieldTag} from './BaseFieldTag';\r\n\r\n    export default {\r\n        name: \"EfTextarea\",\r\n        mixins: [BaseFieldTag],         //继承基础BaseFieldTag\r\n        props:{\r\n            placeholder: { // 选择框提示文字，默认‘请选择’，非必传。\r\n                type: String,\r\n                default: \"\",\r\n            },\r\n            maxlength:{\r\n                require:false,\r\n                type: [String,Number],\r\n                default:null\r\n            },\r\n            minlength:{\r\n                require:false,\r\n                type: [String,Number],\r\n                default:null\r\n            },\r\n            rows:{\r\n                require:false,\r\n                type: [String,Number],\r\n                default:2\r\n            },\r\n            autosize:{\r\n              require:false,\r\n              type:Boolean,\r\n              default:false\r\n            },\r\n        },\r\n        data(){\r\n            return {\r\n                componentType:'EfTextarea',\r\n                compMaxLength:null,\r\n                compMinLength:null,\r\n                compRows:2,\r\n            };\r\n        },\r\n      watch: {\r\n        value: {//深度监听，可监听到对象、数组的变化\r\n          immediate: true,\r\n          handler(val) {\r\n            this.compValue=val;\r\n          },\r\n          // deep: true //true 深度监听\r\n        }\r\n      },\r\n      computed:{\r\n        formStyle(){\r\n          return this.$store.state.common.formStyle\r\n        },\r\n        placeholderClass(){\r\n          return this.$store.state.common.formStyle[0].size\r\n        },\r\n        appStyle(){\r\n          return this.$store.state.common.appStyle\r\n        }\r\n      },\r\n        created() {\r\n\r\n            if (typeof (this.maxlength) === \"string\") {\r\n                this.compMaxLength = Number(this.maxlength) ;\r\n            } else {\r\n                this.compMaxLength = this.maxlength;\r\n            }\r\n            if (typeof (this.minlength) === \"string\") {\r\n                this.compMinLength = Number(this.minlength) ;\r\n            } else {\r\n                this.compMinLength = this.minlength;\r\n            }\r\n            if (typeof (this.rows) === \"string\") {\r\n                this.compRows = Number(this.rows) ;\r\n            } else {\r\n                this.compRows = this.rows;\r\n            }\r\n        },\r\n        methods:{\r\n            input(val){\r\n                this.$emit('compChange', val);\r\n                this.$emit('onInput', val);\r\n            },\r\n          setFocus(){\r\n            this.$refs[this.name].focus()\r\n            this.$refs[this.name].select()\r\n          },\r\n          setBlur(){\r\n            this.$refs[this.name].blur()\r\n          },\r\n          focus(val) {\r\n            this.$emit('compFocus', val);\r\n          },\r\n          blur(val) {\r\n            this.$emit('compBlur', val);\r\n          },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}