{"remainingRequest":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-kendo-comps\\EfTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\src\\components\\ef-kendo-comps\\EfTree.vue","mtime":1644218659026},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\10415\\Desktop\\0工程\\5Vue\\SZYBGZDTGL-avue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport {BaseQueryTag} from './BaseQueryTag';\nimport eframe from \"../../util/eframe\";\nimport constData from '../../const/index';\nimport store from \"../../store\";\n//import $ from \"jquery\";\n\nexport default {\n  name: \"EfTree\",\n  mixins: [BaseQueryTag],         //继承基础BaseFieldTag\n  props:{\n\n  },\n  data(){\n    return {\n    };\n  },\n  mounted() {\n\n      let form={\n          widgetUid:this.id,\n          queryNo:this.compQueryNo,  //查询号\n          connectId:this.compConnectId,//数据库链接\n          queryWindow:this.compQueryWindow, //窗口号\n          showType:this.compShowType, // 0不显示check框   1 显示check框， 默认为：1\n          catchFlag:this.compCatch, //是否使用缓存，默认true\n      };\n      store.dispatch('GetTree',form).then((data) => {\n          if(data&&data.options){\n              var vueConstData = constData;\n              let options = eval(\"(\"+data.options+\")\");\n              //console.log(options);\n              let element = $(\"#\" + this.id).kendoTreeView(options);\n              this.widget = element.data('kendoTreeView');\n          }else{\n              this.$eframe.alertError(\"EfTree错误，未取到查询配置！\");\n          }\n      }).catch((msg) => {\n          this.$eframe.alertError(msg);\n      });\n\n  },\n}\n",{"version":3,"sources":["EfTree.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"EfTree.vue","sourceRoot":"src/components/ef-kendo-comps","sourcesContent":["<template>\r\n    <div :id=\"id\"   ></div>\r\n</template>\r\n\r\n<script>\r\n  import {BaseQueryTag} from './BaseQueryTag';\r\n  import eframe from \"../../util/eframe\";\r\n  import constData from '../../const/index';\r\n  import store from \"../../store\";\r\n  //import $ from \"jquery\";\r\n\r\n  export default {\r\n    name: \"EfTree\",\r\n    mixins: [BaseQueryTag],         //继承基础BaseFieldTag\r\n    props:{\r\n\r\n    },\r\n    data(){\r\n      return {\r\n      };\r\n    },\r\n    mounted() {\r\n\r\n        let form={\r\n            widgetUid:this.id,\r\n            queryNo:this.compQueryNo,  //查询号\r\n            connectId:this.compConnectId,//数据库链接\r\n            queryWindow:this.compQueryWindow, //窗口号\r\n            showType:this.compShowType, // 0不显示check框   1 显示check框， 默认为：1\r\n            catchFlag:this.compCatch, //是否使用缓存，默认true\r\n        };\r\n        store.dispatch('GetTree',form).then((data) => {\r\n            if(data&&data.options){\r\n                var vueConstData = constData;\r\n                let options = eval(\"(\"+data.options+\")\");\r\n                //console.log(options);\r\n                let element = $(\"#\" + this.id).kendoTreeView(options);\r\n                this.widget = element.data('kendoTreeView');\r\n            }else{\r\n                this.$eframe.alertError(\"EfTree错误，未取到查询配置！\");\r\n            }\r\n        }).catch((msg) => {\r\n            this.$eframe.alertError(msg);\r\n        });\r\n\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}