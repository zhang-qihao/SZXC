"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var h = allVue.h;
var createApp = allVue.createApp;
var defaultFileName = 'export.pdf';
var defaultCreator = 'Kendo UI PDF Generator';
/**
 * @hidden
 */
var KendoDrawingAdapter = /** @class */ (function () {
    function KendoDrawingAdapter(drawDOM, exportPDF, saveAs, domElement, options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        this.drawDOM = drawDOM;
        this.exportPDF = exportPDF;
        this.saveAs = saveAs;
        this.domElement = domElement;
        this.options = options;
        this.convertPageTemplateToHtml = function (pageContext) {
            if (h && createApp) {
                var that_1 = _this;
                var outerWrapper_1 = document.createElement('div');
                outerWrapper_1.setAttribute('style', 'position:absolute; left: -5000px; top: 0px;');
                var innerWrapper = document.createElement('div');
                outerWrapper_1.appendChild(innerWrapper);
                document.body.appendChild(outerWrapper_1);
                var tempPageComponent_1;
                var pageTemplate = {
                    render: function () {
                        return h(that_1.options.pageTemplate, {
                            pageNum: pageContext.pageNum,
                            totalPages: pageContext.totalPages
                        });
                    },
                    mounted: function mounted() {
                        // @ts-ignore
                        this.$nextTick(function () {
                            document.body.removeChild(outerWrapper_1);
                            tempPageComponent_1.unmount();
                        });
                    }
                };
                tempPageComponent_1 = createApp(pageTemplate);
                tempPageComponent_1.mount(innerWrapper);
                return innerWrapper.outerHTML;
            }
            else {
                var template = allVue.extend(_this.options.pageTemplate);
                var instance = new template({
                    propsData: {
                        pageNum: pageContext.pageNum,
                        totalPages: pageContext.totalPages
                    }
                });
                instance.$mount();
                return instance.$el.outerHTML;
            }
        };
    }
    KendoDrawingAdapter.prototype.savePDF = function (callback) {
        var _this = this;
        var savePromise = this.drawDOM(this.domElement, this.getDrawOptions())
            .then(function (group) { return _this.exportPDF(group, _this.getPDFOptions()); })
            .then(function (dataUri) { return _this.saveAs(dataUri, _this.options.fileName || defaultFileName, _this.getSaveOptions()); });
        if (callback) {
            savePromise.then(callback, callback);
        }
    };
    KendoDrawingAdapter.prototype.getDrawOptions = function () {
        return {
            avoidLinks: this.options.avoidLinks,
            forcePageBreak: this.options.forcePageBreak,
            keepTogether: this.options.keepTogether,
            margin: this.options.margin,
            paperSize: this.options.paperSize,
            landscape: this.options.landscape,
            repeatHeaders: this.options.repeatHeaders,
            scale: this.options.scale,
            template: this.options.pageTemplate && this.convertPageTemplateToHtml
        };
    };
    KendoDrawingAdapter.prototype.getPDFOptions = function () {
        return {
            author: this.options.author,
            creator: this.options.creator || defaultCreator,
            date: this.options.date,
            imgDPI: this.options.imageResolution,
            keywords: this.options.keywords,
            landscape: this.options.landscape,
            margin: this.options.margin,
            multiPage: true,
            paperSize: this.options.paperSize,
            producer: this.options.producer,
            subject: this.options.subject,
            title: this.options.title
        };
    };
    KendoDrawingAdapter.prototype.getSaveOptions = function () {
        return {
            forceProxy: this.options.forceProxy,
            proxyData: this.options.proxyData,
            proxyTarget: this.options.proxyTarget,
            proxyURL: this.options.proxyURL
        };
    };
    return KendoDrawingAdapter;
}());
exports.default = KendoDrawingAdapter;
