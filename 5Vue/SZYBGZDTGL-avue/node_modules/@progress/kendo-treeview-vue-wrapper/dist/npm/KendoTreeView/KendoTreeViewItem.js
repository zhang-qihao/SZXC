'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _vue = require('vue');

var Vue = _interopRequireWildcard(_vue);

var _kendoBaseComponentsVueWrapper = require('@progress/kendo-base-components-vue-wrapper');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

const allVue = Vue;
const gh = allVue.h;
exports.default = {
    name: 'kendo-treeview-item',
    setup() {
        const v3 = !!gh;
        return {
            v3
        };
    },
    render(createElement) {
        const h = gh || createElement;
        const defaultSlot = this.v3 && this.$slots.default && typeof this.$slots.default === 'function' ? this.$slots.default() : this.$slots.default;
        return h('li', defaultSlot);
    },
    mixins: [_kendoBaseComponentsVueWrapper.KendoSharedMethods],
    props: {
        text: {
            type: String,
            default: undefined
        },
        cssClass: {
            type: String,
            default: undefined
        },
        url: {
            type: String,
            default: undefined
        },
        encoded: {
            type: Boolean,
            default: undefined
        },
        content: {
            type: String,
            default: undefined
        },
        contentUrl: {
            type: String,
            default: undefined
        },
        imageUrl: {
            type: String,
            default: undefined
        },
        items: {
            type: Array,
            default: undefined
        },
        expanded: {
            type: Boolean,
            default: undefined
        },
        spriteCssClass: {
            type: String,
            default: undefined
        }
    },
    mounted() {
        this._resolveInnerChildren();
    },
    methods: {
        _resolveInnerChildren() {
            const defaultSlot = this.v3 && this.$slots.default && typeof this.$slots.default === 'function' ? this.$slots.default() : this.$slots.default;
            const hasItems = this.v3 ? !this.$props.items : this.$options.propsData && !this.$options.propsData['items'];
            if (hasItems && defaultSlot) {
                var items = this.resolveInnerTags('kendo-treeview-item');
                this.subitems = items;
            }
        }
    }
};