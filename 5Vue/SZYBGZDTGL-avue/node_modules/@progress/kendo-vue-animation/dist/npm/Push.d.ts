import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { AnimationInterface } from './AnimationInterface';
/**
 * Specifies the direction of the Push Animation ([see example]({% slug direction_animation_native %}#toc-push)).
 *
 * The supported directions are:
 * * `up`&mdash;Pushes the content from bottom to top.
 * * `down`&mdash;Pushes the content from top to bottom.
 * * `left`&mdash;Pushes the content from right to left.
 * * (Default) `right`&mdash;Pushes the content from left to right.
 */
export declare type PushDirection = 'up' | 'down' | 'left' | 'right';
/**
 * Represent the props of the [KendoVue Push Animation component]({% slug animationtypes_animation_native %}#toc-push).
 *
 * @example
 * ```html-preview
 * ```
 */
export interface PushProps extends AnimationInterface {
    /**
     * After the element reaches its exit state, it is no longer available in the DOM.
     * If a DOM operation is required, access it trough the `childFactory` function.
     */
    childFactory?: any;
    /**
     * Specifies the CSS class names which are set to the Animation.
     */
    className?: string;
    /**
     * Specifies the direction of the Push Animation. Defaults to `right`.
     */
    direction?: string;
    /**
     * Specifies the node type of the parent Animation. Defaults to `div`.
     */
    component?: string;
    /**
     * Specifies the tag.
     */
    tag?: string;
    /**
     * Specifies the id of the Animation.
     */
    id?: string;
    /**
     * Specifies the style of the parent Animation.
     */
    style?: any;
    /**
     * Specifies whether the child elements will stack on top of each other without
     *  interfering ([more information and examples]({% slug stacked_animation_native %})).
     */
    stackChildren?: boolean;
}
/**
 * Represents the default `Push` component.
 */
declare let Push: ComponentOptions<Vue, DefaultData<{}>, DefaultMethods<{}>, {}, RecordPropsDefinition<PushProps>>;
export { Push };
