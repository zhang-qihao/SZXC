import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface DraggableProps {
    key?: any;
    onPressHandler?: (draggableEvent: any, element: HTMLElement) => void;
    onDragHandler?: (draggableEvent: any, element: HTMLElement) => void;
    onReleaseHandler?: (draggableEvent: any) => void;
}
/**
 * @hidden
 */
export interface DraggableMethods extends Vue {
    press: (event: any) => void;
    drag: (event: any) => void;
    release: (event: any) => void;
}
/**
 * @hidden
 */
export interface DraggableState {
    element: any | null;
    draggable: any;
}
/**
 * @hidden
 */
export interface DraggableAll extends DraggableMethods, DraggableState {
}
/**
 * @hidden
 */
export interface DraggablePressEvent {
    event: any;
    element: HTMLElement;
}
/**
 * @hidden
 */
export interface DraggableDragEvent {
    event: any;
    element: HTMLElement;
}
/**
 * @hidden
 */
export interface DraggableReleaseEvent {
    event: any;
}
/**
 * Represents the default `Draggable` component.
 */
declare let Draggable: ComponentOptions<Vue, DefaultData<{}>, DefaultMethods<DraggableAll>, {}, RecordPropsDefinition<DraggableProps>>;
export { Draggable };
