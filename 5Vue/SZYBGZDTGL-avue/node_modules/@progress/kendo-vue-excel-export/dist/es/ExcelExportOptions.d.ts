import { ExcelExportColumnOptions } from './ExcelExportColumnOptions';
import { CellOptions } from './ooxml/CellOptionsInterface';
import { GroupDescriptor } from '@progress/kendo-data-query';
/**
 * Represents the props of the KendoVue ExcelExport component.
 */
export interface ExcelExportOptions {
    /**
     * You can pass the columns through the props of the component.
     * If both the columns prop and the child column components are presented,
     * the columns from props will be used.
     */
    columns?: ExcelExportColumnOptions[] | any[];
    /**
     * The creator of the workbook.
     */
    creator?: string;
    /**
     * The exported data.
     * If grouped, the data must be structured as described by the
     * [`GroupResult`]({% slug api_kendo-data-query_groupresult %}) option of the Kendo UI Data Query component.
     */
    data?: any[];
    /**
     * The date on which the workbook is created.
     * The default value is `new Date()`.
     */
    date?: Date;
    /**
     * Enables or disables the column filtering in the Excel file.
     */
    filterable?: boolean;
    /**
     * Specifies the name of the file that is exported to Excel.
     * @default "Export.xlsx"
     */
    fileName?: string;
    /**
     * If set to `true`, the content is forwarded to `proxyURL`
     * even if the browser supports the saving of files locally.
     */
    forceProxy?: boolean;
    /**
     * The exported data groups.
     * The groups must be compatible with the
     * [`GroupDescriptor`]({% slug api_kendo-data-query_groupdescriptor %}) option of the
     * Kendo UI Data Query component.
     */
    group?: GroupDescriptor[];
    /**
     * The options of the cells that are inserted before the header cells
     * to align the headers and the column values (when the data is grouped).
     */
    headerPaddingCellOptions?: CellOptions;
    /**
     * The options of the cells that are inserted before the data, group, and footer cells
     * to indicate the group hierarchy (when the data is grouped).
     */
    paddingCellOptions?: CellOptions;
    /**
     * The URL of the server-side proxy which will stream the file to the end user.
     * When the browser is not capable of saving files locally&mdash;for example,
     * Internet Explorer 9 and earlier, and Safari&mdash;a proxy is used.
     * The implementation of the server-side proxy has to be done by you.
     * The proxy receives a POST request with the following parameters in the request body:
     * - `contentType`&mdash;The MIME type of the file.
     * - `base64`&mdash;The base-64 encoded file content.
     * - `fileName`&mdash;The file name, as requested by the caller.
     * The proxy is expected to return the decoded file with the **Content-Disposition**
     * header set to `attachment; filename="<fileName.xslx>"`.
     */
    proxyURL?: string;
    /**
     * If set to `rtl`, the Excel file will be rendered in the right-to-left mode.
     */
    dir?: string;
}
