import { GridCellProps } from '../interfaces/GridCellProps';
import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface GridEditCellMethods extends Vue {
    triggerClick: () => void;
    triggerKeydown: (e: any) => void;
    triggerEdit: (dataItem: any) => void;
    triggerAdd: (dataItem: any) => void;
    triggerCancel: (dataItem: any) => void;
    triggerSave: (dataItem: any) => void;
    triggerRemove: (dataItem: any) => void;
    changeHandler: (event: any, value: any) => void;
}
/**
 * @hidden
 */
export interface GridEditCellData {
    inputId: string;
}
/**
 * @hidden
 */
export interface GridEditCellAll extends GridEditCellMethods, GridEditCellData {
}
/**
 * Represents the default `GridEditCell` component.
 */
declare let GridEditCell: ComponentOptions<Vue, DefaultData<{}>, DefaultMethods<GridEditCellMethods>, {}, RecordPropsDefinition<GridCellProps>>;
export { GridEditCell };
