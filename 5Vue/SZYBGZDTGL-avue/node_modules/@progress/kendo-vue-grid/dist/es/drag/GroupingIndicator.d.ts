import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface GroupingIndicatorProps {
    key?: any;
    title: string;
    dir: string;
    onRemove?: (event: any) => void;
    onSortChange?: (event: any, dir: string) => void;
    onDrag?: (draggableEvent: any, element: HTMLDivElement) => void;
    onPress?: (draggableEvent: any, element: HTMLDivElement) => void;
    onRelease?: (draggableEvent: any) => void;
}
/**
 * @hidden
 */
export interface GroupingIndicatorMethods extends Vue {
    press: (event: any) => void;
    drag: (event: any) => void;
    release: (event: any) => void;
    sortChange: (event: any) => void;
    groupRemove: (event: any) => void;
}
/**
 * @hidden
 */
export interface GroupingIndicatorState {
    element: any | null;
    draggable: any;
    indicatorContainerRef: any;
    v3: boolean;
}
/**
 * @hidden
 */
export interface GroupingIndicatorAll extends GroupingIndicatorMethods, GroupingIndicatorState {
}
/**
 * Represents the default `GroupingIndicator` component.
 */
declare let GroupingIndicator: ComponentOptions<Vue, DefaultData<{}>, DefaultMethods<GroupingIndicatorAll>, {}, RecordPropsDefinition<GroupingIndicatorProps>>;
export { GroupingIndicator };
