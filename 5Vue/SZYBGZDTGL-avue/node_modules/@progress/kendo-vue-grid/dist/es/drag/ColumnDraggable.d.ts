import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface ColumnDraggableProps {
    key?: any;
    onPressHandler?: (draggableEvent: any, element: HTMLElement) => void;
    onDragHandler?: (draggableEvent: any, element: HTMLElement) => void;
    onReleaseHandler?: (draggableEvent: any) => void;
}
/**
 * @hidden
 */
export interface ColumnDraggableMethods extends Vue {
    onPress: (event: any) => void;
    onDrag: (event: any) => void;
    onRelease: (event: any) => void;
}
/**
 * @hidden
 */
export interface ColumnDraggableState {
    element: any | null;
    draggable: any;
}
/**
 * @hidden
 */
export interface ColumnDraggableAll extends ColumnDraggableMethods, ColumnDraggableState {
}
/**
 * Represents the default `ColumnDraggable` component.
 */
declare let ColumnDraggable: ComponentOptions<Vue, DefaultData<{}>, DefaultMethods<ColumnDraggableAll>, {}, RecordPropsDefinition<ColumnDraggableProps>>;
export { ColumnDraggable };
