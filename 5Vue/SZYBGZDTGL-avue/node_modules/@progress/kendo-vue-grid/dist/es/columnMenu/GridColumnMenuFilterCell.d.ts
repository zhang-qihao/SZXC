import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface ColumnMenuFilterCellProps {
    field?: string;
    filterType: string;
    value: any;
    operator: string;
    operators: Array<{
        text: string;
        operator: any;
    }>;
    onFocus?: (e: any) => void;
    onChange?: (event: {
        value: any;
        operator: string | Function;
        syntheticEvent: any;
    }) => void;
}
/**
 * @hidden
 */
export interface GridColumnMenuFilterCellMethods extends Vue {
    handleFocus: (e: any) => void;
    triggerChange: (filter: any) => void;
    inputChange: (value: any, e: any) => void;
    operatorChange: (operatorValue: any, e: any) => void;
    boolDropdownChange: (value: any, e: any) => void;
}
/**
 * Represents the default `GridColumnMenuFilterCell` component.
 */
declare let GridColumnMenuFilterCell: ComponentOptions<Vue, DefaultData<{}>, DefaultMethods<GridColumnMenuFilterCellMethods>, {}, RecordPropsDefinition<ColumnMenuFilterCellProps>>;
export { GridColumnMenuFilterCell };
