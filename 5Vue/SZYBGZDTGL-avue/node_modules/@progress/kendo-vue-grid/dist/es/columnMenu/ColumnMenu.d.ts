import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => ColumnMenuData);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { GridColumnMenuProps } from '../interfaces/GridColumnMenuProps';
import { CompositeFilterDescriptor } from '@progress/kendo-data-query';
/**
 * @hidden
 */
export interface ColumnMenuMethods extends Vue {
    blur: () => void;
    focus: () => void;
    handleFocus: (_: any) => void;
    anchorClick: () => void;
    closeMenu: () => void;
    sortChange: () => void;
    filterChange: (newDescriptor: CompositeFilterDescriptor | null, e: any) => void;
}
/**
 * @hidden
 */
export interface ColumnMenuData {
    show: boolean;
    blurTimeout: any;
}
/**
 * @hidden
 */
export interface ColumnMenuState {
    _anchor: string;
    _content: any;
    kendoAnchorRef: any;
    v3: boolean;
}
/**
 * @hidden
 */
export interface ColumnMenuAll extends ColumnMenuMethods, ColumnMenuData, ColumnMenuState {
}
/**
 * Represents the default `ColumnMenu` component.
 */
declare let ColumnMenu: ComponentOptions<Vue, DefaultData<ColumnMenuData>, DefaultMethods<ColumnMenuAll>, {}, RecordPropsDefinition<GridColumnMenuProps>>;
export { ColumnMenu };
