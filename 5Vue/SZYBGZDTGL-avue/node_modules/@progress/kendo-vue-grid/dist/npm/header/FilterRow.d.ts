import { CompositeFilterDescriptor, SortDescriptor } from '@progress/kendo-data-query';
import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ExtendedColumnProps } from '../interfaces/ExtendedColumnProps';
/**
 * @hidden
 */
export interface FilterRowProps {
    grid: any;
    columns: ExtendedColumnProps[];
    filter?: CompositeFilterDescriptor;
    sort?: SortDescriptor[];
    cellRender?: any;
    onFilterchange?: Function;
}
/**
 * @hidden
 */
export interface FilterRowMethods extends Vue {
    headerCellClassName: (field?: string) => string;
    setFilter: (value: string | number, operator: string | Function, field: string | undefined, e: any) => void;
}
/**
 * Represents the default `FilterRow` component.
 */
declare let FilterRow: ComponentOptions<Vue, DefaultData<{}>, DefaultMethods<FilterRowMethods>, {}, RecordPropsDefinition<FilterRowProps>>;
export { FilterRow };
