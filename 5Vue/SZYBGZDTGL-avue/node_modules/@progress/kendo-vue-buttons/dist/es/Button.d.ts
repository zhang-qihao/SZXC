import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ButtonInterface } from './ButtonInterface';
/**
 * Represents the props of the [KendoReact Button component]({% slug overview_button %}).
 * Extends the [native button props](https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement).
 */
export interface ButtonProps extends ButtonInterface {
    /**
     * @hidden
     */
    children?: any;
}
/**
 * @hidden
 */
export interface ButtonState {
    _activeTemp?: boolean;
}
/**
 * @hidden
 */
export interface ButtonComputed {
}
/**
 * @hidden
 */
export interface ButtonMethods {
    toggleIfApplicable: () => void;
    handleClick: (event: any) => void;
}
/**
 * @hidden
 */
export interface ButtonData {
    currentActive: boolean;
}
/**
 * @hidden
 */
export interface ButtonAll extends Vue, ButtonMethods, ButtonData, ButtonComputed, ButtonState {
}
declare let Button: ComponentOptions<ButtonAll, DefaultData<ButtonData>, DefaultMethods<ButtonAll>, ButtonComputed, RecordPropsDefinition<ButtonProps>>;
export { Button };
