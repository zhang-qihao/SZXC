import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ButtonGroupInterface } from './ButtonGroupInterface';
/**
 * Represents the props of the [KendoReact ButtonGroup component]({% slug overview_buttongroup %}).
 */
export interface ButtonGroupProps extends ButtonGroupInterface {
    /**
     * Sets the `className` of the ButtonGroup component.
     */
    className?: string;
}
/**
 * @hidden
 */
export interface ButtonGroupState {
    v3: boolean;
}
/**
 * @hidden
 */
export interface ButtonGroupMethods {
    mapButtons: (children: any) => any;
    renderButton: (child: any, index: number, isLast: boolean, isRtl: boolean) => any;
    isValidButton: (child: any) => any;
}
/**
 * @hidden
 */
export interface ButtonGroupData {
}
/**
 * @hidden
 */
export interface ButtonGroupAll extends Vue, ButtonGroupMethods, ButtonGroupData, ButtonGroupState {
}
declare let ButtonGroup: ComponentOptions<ButtonGroupAll, DefaultData<ButtonGroupData>, DefaultMethods<ButtonGroupAll>, {}, RecordPropsDefinition<ButtonGroupProps>>;
export { ButtonGroup };
