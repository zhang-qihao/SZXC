import { ElementRect, OffsetPosition } from '@progress/kendo-popup-common';

import { PositionElementSettings } from '../models/positionElementSettings';
import { Position } from '../models/Position';

import { DOMService } from './domService';

import { eitherRect, replaceOffset } from '../util';

/**
 * @hidden
 */
export class PositionService {
    constructor(private _dom: DOMService) { }

    public positionElement(settings: PositionElementSettings): Position {
        const {
            anchor,
            currentLocation,
            element,
            anchorAlign,
            elementAlign,
            collisions
            } = settings;

        const dom = this._dom;
        const viewPort = settings.viewPort || dom.stackingElementViewPort(element) || dom.windowViewPort(element);
        const anchorRect = eitherRect(dom.offset(anchor as HTMLElement) as ElementRect, currentLocation);
        const initialElementRect = replaceOffset(dom.staticOffset(element) as ElementRect, currentLocation);
        const elementRect = this.elementRect(element, initialElementRect);

        const result = dom.restrictToView({
            anchorAlign,
            anchorRect,
            collisions,
            elementAlign,
            elementRect,
            viewPort
        }) as Position;

        return {
            flipped: result.flipped,
            offset: dom.addOffset(initialElementRect, result.offset as OffsetPosition)
        } as Position;
    }

    private elementRect(element: any, rect: ElementRect): ElementRect {
        return this._dom.removeScroll(rect, this._dom.scrollPosition(element));
    }
}
