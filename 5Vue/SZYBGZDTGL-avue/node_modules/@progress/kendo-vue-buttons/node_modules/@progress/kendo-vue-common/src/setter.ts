import { FIELD_REGEX } from './constants';

const setterCache = {};

(setterCache as any).undefined = obj => obj;

/**
 * @hidden
 */
export function setter(field: string): any {
    if (setterCache[field]) {
        return setterCache[field];
    }

    const fields: any[] = [];
    field.replace(FIELD_REGEX, function (_match: string, index: string, indexAccessor: string, fieldName: string): any {
        fields.push(index !== undefined ? index : (indexAccessor || fieldName));
    });

    setterCache[field] = function (obj: any, value: any): void {
        let root = obj;
        const depth = fields.length - 1;
        for (let idx = 0; idx < depth && root; idx++) {
            root = root[fields[idx]] = root[fields[idx]] || {};
        }
        root[fields[depth]] = value;
    };

    return setterCache[field];
}
