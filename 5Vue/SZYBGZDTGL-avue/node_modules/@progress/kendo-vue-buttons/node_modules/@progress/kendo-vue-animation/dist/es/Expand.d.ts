import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { AnimationInterface } from './AnimationInterface';
/**
 * Specifies the direction of the Expand Animation ([see example]({% slug direction_animation_native %}#toc-expand)).
 *
 * The supported directions are:
 * * (Default) `vertical`&mdash;Expands the content from center to top and bottom, and vice-versa.
 * * `horizontal`&mdash;Expands the content from center to left and right, and vice-versa.
 */
export declare type ExpandDirection = 'horizontal' | 'vertical';
/**
 * Represent the props of the [KendoVue Expand Animation component]({% slug animationtypes_animation_native %}#toc-expand).
 *
 * @example
 * ```html-preview
 *
 * ```
 */
export interface ExpandProps extends AnimationInterface {
    /**
     * After the element reached its exit state, it is no longer available in the DOM. If a DOM operation is required, access it trough the `childFactory` function.
     */
    childFactory?: any;
    /**
     * Specifies the CSS class names which are set to the Animation.
     */
    className?: string;
    /**
     * Specifies the direction of the Expand Animation. Defaults to `vertical`.
     */
    direction?: String;
    /**
     * Specifies the node type of the parent Animation. Defaults to `div`.
     */
    component?: string;
    /**
     * Specifies the tag.
     */
    tag?: string;
    /**
     * Specifies the id of the Animation.
     */
    id?: string;
    /**
     * Specifies the id of the Animation.
     */
    key?: string;
}
/**
 * Represents the default `Expand` component.
 */
declare let Expand: ComponentOptions<Vue, DefaultData<{}>, DefaultMethods<{}>, {}, RecordPropsDefinition<ExpandProps>>;
export { Expand };
