"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CalendarWeekCell = void 0; // @ts-ignore

var Vue = require("vue");

var allVue = Vue;
var gh = allVue.h;

var kendo_vue_common_1 = require("@progress/kendo-vue-common");
/**
 * The `CalendarWeekCell` component is internally used for rendering the week cells inside the `month` view of the Calendar. Also used as a [custom week cell for the Calendar]({% slug api_dateinputs_native_calendarprops %}#toc-weekcell) and the [MultiViewCalendar]({% slug api_dateinputs_multiviewcalendarprops %}#toc-weekcell) components.
 *
 * * [Customizing week-column cells in the Calendar]({% slug custom_rendering_calendar_native %}#toc-cells-inside-the-week-column)
 */


var CalendarWeekCell = {
  props: {
    id: String,
    value: Number
  },
  // @ts-ignore
  emits: {
    'click': null
  },
  // @ts-ignore
  setup: !gh ? undefined : function () {
    var v3 = !!gh;
    return {
      v3: v3
    };
  },

  /**
   * @return
   * Returns a `<td />` element with the [`value`]({% slug api_dateinputs_calendarweekcellprops %}#toc-value) as a child.
   */
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlot = kendo_vue_common_1.getDefaultSlots(this);
    return h("td", {
      onClick: this.handleClick,
      on: this.v3 ? undefined : {
        "click": this.handleClick
      },
      value: this.$props.value,
      attrs: this.v3 ? undefined : {
        value: this.$props.value,
        id: this.$props.id
      },
      id: this.$props.id
    }, [defaultSlot]);
  },
  methods: {
    handleClick: function handleClick(event) {
      var value = this.$props.value;
      this.$emit('click', value, event);
    }
  }
};
exports.CalendarWeekCell = CalendarWeekCell;