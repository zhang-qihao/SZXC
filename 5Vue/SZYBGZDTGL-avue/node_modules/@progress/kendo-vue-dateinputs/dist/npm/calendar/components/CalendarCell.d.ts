import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { CellContext } from '../models';
/**
 * The props which will be received by the custom cell of the [Calendar]({% slug api_dateinputs_native_calendarprops %}#toc-cell).
 */
export interface CalendarCellProps extends CellContext {
    isDisabled?: boolean;
    view?: number;
}
/**
 * @hidden
 */
export interface CalendarCellMethods {
    handleClick?: (e: any) => void;
    handleMouseDown?: (e: any) => void;
    handleMouseEnter?: () => void;
    handleMouseLeave?: () => void;
}
/**
 * @hidden
 */
export interface CalendarCellAllMethods extends Vue, CalendarCellMethods {
}
/**
 * The `CalendarCell` component is internally used for rendering the items in the current view. Also be used as a custom `cell` of the [Calendar]({% slug api_dateinputs_native_calendarprops %}#toc-cell).
 *
 * * [Customizing the cells inside the Calendar view]({% slug custom_rendering_calendar_native %}#toc-cells-inside-the-view)
 */
declare let CalendarCell: ComponentOptions<CalendarCellAllMethods, {}, DefaultMethods<CalendarCellAllMethods>, {}, RecordPropsDefinition<CalendarCellProps>>;
export { CalendarCell };
