import { SelectionRange, CalendarViewEnum } from '../../models';
import { ViewListEventArguments } from '../ViewList';
/**
 * @hidden
 */
export interface CalendarMethods {
    computedValue: () => Date | Date[] | SelectionRange | null;
    focus: (event?: any) => void;
    handleTodayClick: (e: any) => void;
    handleFocus: () => void;
    handleBlur: () => void;
    emitFocus: (e: any) => void;
    emitBlur: (e: any) => void;
    tableKeyDown: (_: any) => void;
    handleClick: (_: any) => void;
    handleWeekCellClick: (_: any) => void;
    handleWeekNameClick: (_: any) => void;
    handleCellEnter: (value: Date) => void;
    handleDateChange: (args: any) => void;
    handleNextClick: (event: ViewListEventArguments) => void;
    handlePrevClick: (event: ViewListEventArguments) => void;
    handleMouseDown: (event: ViewListEventArguments) => void;
    handleTitleClick: () => void;
    handleViewChange: (e: {
        view: CalendarViewEnum;
    }) => void;
    triggerChange: (value: Date, event: ViewListEventArguments) => void;
    isValueEqual: (newValue: Date | Date[] | SelectionRange | null, oldValue: Date | Date[] | SelectionRange | null) => boolean;
    generateRange: (candidate: Date, value: SelectionRange) => SelectionRange;
    clampRange: (value: Date) => SelectionRange;
    rangeWithFocused: (range: SelectionRange, focusedDate: Date) => SelectionRange;
}
