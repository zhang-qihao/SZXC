"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToggleButton = void 0; // @ts-ignore

var Vue = require("vue");

var allVue = Vue;
var gh = allVue.h;

var kendo_vue_common_1 = require("@progress/kendo-vue-common");
/**
 * Represents the default `toggleButton` component.
 */


var ToggleButton = {
  // @ts-ignore
  emits: {
    'click': null,
    'mousedown': null,
    'mouseup': null
  },
  props: {
    id: String,
    tabIndex: {
      type: Number,
      default: undefined
    },
    title: String
  },
  methods: {
    handleMouseDown: function handleMouseDown(e) {
      this.$emit('mousedown', e);
    },
    handleMouseUp: function handleMouseUp(e) {
      this.$emit('mouseup', e);
    },
    handleClick: function handleClick(e) {
      this.$emit('click', e);
    }
  },
  // @ts-ignore
  setup: !gh ? undefined : function () {
    var v3 = !!gh;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlot = kendo_vue_common_1.getDefaultSlots(this);
    return h("a", {
      id: this.$props.id,
      attrs: this.v3 ? undefined : {
        id: this.$props.id,
        role: "button",
        tabindex: this.$props.tabIndex,
        title: this.$props.title,
        "aria-label": this.$props.title
      },
      role: "button",
      "class": 'k-select',
      tabindex: this.$props.tabIndex,
      title: this.$props.title,
      "aria-label": this.$props.title,
      onMousedown: this.handleMouseDown,
      on: this.v3 ? undefined : {
        "mousedown": this.handleMouseDown,
        "click": this.handleClick,
        "mouseup": this.handleMouseUp
      },
      onClick: this.handleClick,
      onMouseup: this.handleMouseUp
    }, [defaultSlot]);
  }
};
exports.ToggleButton = ToggleButton;