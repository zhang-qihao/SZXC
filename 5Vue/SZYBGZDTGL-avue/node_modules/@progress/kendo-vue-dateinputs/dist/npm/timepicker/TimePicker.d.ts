import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { FormComponentProps, FormComponentValidity } from '@progress/kendo-vue-common';
import { DateInputChangeEvent } from '../dateinput/interfaces/DateInputEventArguments';
import { TimeSelectorChangeEvent } from './TimeSelector';
import { TimePickerSettings } from './models';
/**
 * The arguments for the `onChange` event of the TimePicker.
 */
export interface TimePickerChangeEvent {
    event?: any;
    value: Date | null;
    show: boolean;
    target: any;
}
/**
 * Represents the props of the [KendoReact TimePicker component]({% slug overview_timepicker %}).
 */
export interface TimePickerProps extends TimePickerSettings, FormComponentProps {
    /**
     * @hidden
     */
    modelValue?: Date;
    /**
     * Sets the default value of the TimePicker ([see example]({% slug default_value_timepicker %}#toc-setting-the-default-value)).
     */
    defaultValue?: Date;
    /**
     * Fires each time the user selects a new value ([see example]({% slug controlled_timepicker %}#toc-controlling-the-date-value)).
     */
    onChange?: (event: TimePickerChangeEvent) => void;
    /**
     * Specifies the value of the TimePicker ([see example]({% slug controlled_timepicker %}#toc-controlling-the-date-value)).
     *
     * > The `value` has to be a valid [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.
     */
    value?: Date | null;
}
/**
 * @hidden
 */
export interface TimePickerState {
    _popupId: string;
    _element: HTMLSpanElement | null;
    _dateInput: any;
    _timeSelector: any;
    _wrapper: any;
    _anchor: any;
    _oldShow: boolean;
    _blurTimeout: any;
    v3: boolean;
    kendoAnchorRef: any;
    valueDuringOnChange?: Date | null;
    showDuringOnChange?: boolean;
    shouldFocusDateInput: boolean;
}
/**
 * @hidden
 */
export interface TimePickerMethods {
    validity: () => FormComponentValidity;
    focus: () => void;
    setDateInputRef: (dateInput: any) => void;
    setTimeSelectorRef: (timeSelector: any) => void;
    nextValue: (nextProps: TimePickerProps, nextState: TimePickerState) => Date | null;
    nextShow: (nextProps: TimePickerProps, nextState: TimePickerState) => any;
    normalizeTime: (date: Date) => Date;
    setShow: (show: boolean) => void;
    mergeTime: (value: Date | null) => Date | null;
    handleInputValueChange: (event: DateInputChangeEvent) => void;
    handleValueChange: (event: DateInputChangeEvent | TimeSelectorChangeEvent) => void;
    handleFocus: (event: any) => void;
    handleBlur: (event: any) => void;
    handleValueReject: (_: any) => void;
    handleIconClick: (_: any) => void;
    handleIconMouseDown: (event: any) => void;
    handleKeyDown: (event: any) => void;
    timeFocus: (event: any) => void;
    timeBlur: (event: any) => void;
    createBlurTimeout: () => void;
}
/**
 * @hidden
 */
export interface TimePickerData {
    currentValue: Date | null;
    currentShow: boolean;
}
/**
 * @hidden
 */
export interface TimePickerComputed {
    timeSelector: any;
    computedValue: Date | null;
    computedShow: boolean;
}
/**
 * @hidden
 */
export interface TimePickerAll extends Vue, TimePickerMethods, TimePickerData, TimePickerComputed, TimePickerState {
}
declare let TimePicker: ComponentOptions<TimePickerAll, DefaultData<TimePickerData>, DefaultMethods<TimePickerAll>, TimePickerComputed, RecordPropsDefinition<TimePickerProps>>;
export { TimePicker };
