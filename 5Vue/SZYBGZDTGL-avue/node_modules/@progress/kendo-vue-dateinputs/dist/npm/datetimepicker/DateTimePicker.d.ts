import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { FormComponentProps, FormComponentValidity } from '@progress/kendo-vue-common';
import { DateTimePickerSettings } from './models';
import { DateTimeSelectorChangeEvent } from './DateTimeSelector';
import { DateInputChangeEvent } from '../main';
/**
 * The arguments for the `onChange` event of the DateTimePicker.
 */
export interface DateTimePickerChangeEvent {
    event: any;
    value: Date | null;
    show: boolean;
    target: any;
}
/**
 * Represents the props of the [KendoReact DateTimePicker component]({% slug overview_datetimepicker %}).
 */
export interface DateTimePickerProps extends DateTimePickerSettings, FormComponentProps {
    /**
     * @hidden
     */
    modelValue?: Date;
    /**
     * Sets the default value of the DateTimePicker.
     */
    defaultValue?: Date;
    /**
     * Fires each time the user selects a new value
     */
    onChange?: (event: DateTimePickerChangeEvent) => void;
    /**
     * Specifies the value of the DateTimePicker
     * ([see example]({% slug controlled_datetimepicker %}#toc-controlling-the-date-value)).
     *
     * > The `value` has to be a valid
     * [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.
     */
    value?: Date | null;
}
/**
 * @hidden
 */
export interface DateTimePickerData {
    currentValue: Date | null;
    currentShow: boolean;
    valueDuringOnChange?: Date | null;
    showDuringOnChange?: boolean;
    shouldFocusDateInput: boolean;
}
/**
 * @hidden
 */
export interface DateTimePickerState {
    _popupId: string;
    _wrapper: any;
    _dateInput: any;
    _dateTimeSelector: any;
    _anchor: any;
    _oldShow: boolean;
    _blurTimeout: any;
    v3: boolean;
    kendoAnchorRef: any;
}
/**
 * @hidden
 */
export interface DateTimePickerComputed {
    computedValue: Date | null;
    computedShow: boolean;
}
/**
 * @hidden
 */
export interface DateTimePickerMethods {
    validity: () => FormComponentValidity;
    focus: () => void;
    setShow: (show: boolean) => void;
    handleReject: () => void;
    handleValueChange: (event: DateInputChangeEvent | DateTimeSelectorChangeEvent) => void;
    handleFocus: (event: any) => void;
    handleBlur: (event: any) => void;
    handleDateIconClick: () => void;
    handleIconMouseDown: (event: any) => void;
    handleKeyDown: (event: any) => void;
    dateInputElement: () => any;
    timeSelectorBlur: (event: any) => void;
    timeSelectorFocus: () => void;
    createBlurTimeout: () => void;
}
/**
 * @hidden
 */
export interface DateTimePickerAll extends Vue, DateTimePickerMethods, DateTimePickerData, DateTimePickerComputed, DateTimePickerState {
}
declare let DateTimePicker: ComponentOptions<DateTimePickerAll, DefaultData<DateTimePickerData>, DefaultMethods<DateTimePickerAll>, DateTimePickerComputed, RecordPropsDefinition<DateTimePickerProps>>;
export { DateTimePicker };
