import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
import { LocalizationService } from '@progress/kendo-vue-intl';
import { BusViewService } from '../services';
import { ViewService, Action } from '../models';
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface HeaderEventArguments {
    event?: any;
    value: Date;
    target: any;
}
/**
 * @hidden
 */
export interface HeaderProps {
    activeView: number;
    bus: BusViewService;
    currentDate: Date;
    focusedDate: Date;
    max: Date;
    min: Date;
    rangeLength: number;
    service: ViewService;
    headerTitle?: any;
    tabIndex: number;
}
/**
 * @hidden
 */
export interface HeaderMethods {
    getTitle: () => string;
    handleTitleClick: (event: any) => void;
    handleTodayClick: (event: any) => void;
    todayKeyDown: (event: any) => void;
    handleNextClick: (event: any) => void;
    handlePrevClick: (event: any) => void;
    clampDate: (value: Date) => Date;
    move: (action: Action) => Date;
    canNavigate: (action: Action) => boolean;
}
/**
 * @hidden
 */
export interface HeaderComputed {
    navigate?: () => void;
    todayIsInRange?: () => boolean;
}
/**
 * @hidden
 */
export interface HeaderState {
    _localization: LocalizationService;
}
/**
 * @hidden
 */
export interface HeaderAllMethods extends Vue, HeaderMethods, HeaderComputed, HeaderState {
}
/**
 * @hidden
 */
declare let Header: ComponentOptions<HeaderAllMethods, {}, DefaultMethods<HeaderAllMethods>, {}, RecordPropsDefinition<HeaderProps>>;
export { Header };
