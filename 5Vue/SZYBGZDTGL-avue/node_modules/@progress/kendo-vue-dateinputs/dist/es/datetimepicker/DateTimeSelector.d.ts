import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { DateFormatOptions } from '@progress/kendo-vue-intl';
import { CalendarChangeEvent } from '../main';
/**
 * @hidden
 */
export interface DateTimeSelectorChangeEvent {
    event?: any;
    value: Date | null;
    target: any;
    cancelButton?: boolean;
}
/**
 * @hidden
 */
export interface DateTimeSelectorRejectEvent {
    event?: any;
    value: Date | null;
    target: any;
    cancelButton?: boolean;
}
/**
 * @hidden
 */
export interface DateTimeSelectorProps {
    value: Date | null;
    disabled?: boolean;
    cancelButton?: boolean;
    min: Date;
    max: Date;
    minTime?: Date;
    maxTime?: Date;
    weekNumber?: boolean;
    focusedDate?: Date;
    format?: string | DateFormatOptions;
    calendar?: any;
}
/**
 * @hidden
 */
export interface DateTimeSelectorData {
    currentTab: 'date' | 'time';
    dateValue: Date | null;
    timeValue: Date;
}
/**
 * @hidden
 */
export interface DateTimeSelectorState {
    _calendar: any;
    _timePart: any;
    _cancelButton: any;
    _acceptButton: any;
    _calendarWrap: any;
    shouldFocusPart: boolean;
}
/**
 * @hidden
 */
export interface DateTimeSelectorComputed {
    hasDateValue: boolean;
    computedMinTime: Date | null;
    computedMaxTime: Date | null;
}
/**
 * @hidden
 */
export interface DateTimeSelectorMethods {
    focus: (args?: any) => void;
    calendarElement: () => any;
    normalizeRange: (candidate: Date, value: Date | null) => Date | null;
    hasActiveButton: () => boolean;
    mergeTime: (current: Date | null, candidate: Date | null) => Date | null;
    mergeDate: (candidate: Date | null, value: Date) => Date | null;
    move: (direction: 'left' | 'right') => void;
    handleReject: (event: any) => void;
    handleAccept: (event: any, timeOverride?: Date) => void;
    handleNowClick: (event: any) => void;
    handleCalendarValueChange: (event: CalendarChangeEvent) => void;
    handleTimeListContainerChange: (candidate: Date) => void;
    handleDateClick: (event: any) => void;
    handleTimeClick: (event: any) => void;
    handleKeyDown: (event: any) => void;
    handleTimePartMount: (value: Date) => void;
    handleBlur: (event: any) => void;
    handleFocus: (event: any) => void;
}
/**
 * @hidden
 */
export interface DateTimeSelectorAll extends Vue, DateTimeSelectorMethods, DateTimeSelectorData, DateTimeSelectorComputed, DateTimeSelectorState {
}
declare let DateTimeSelector: ComponentOptions<DateTimeSelectorAll, DefaultData<DateTimeSelectorData>, DefaultMethods<DateTimeSelectorAll>, DateTimeSelectorComputed, RecordPropsDefinition<DateTimeSelectorProps>>;
export { DateTimeSelector };
