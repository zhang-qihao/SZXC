import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => TagListAll);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * Represents the tag data.
 */
export interface TagData {
    /**
     * Represents the text of the tag.
     */
    text: string;
    /**
     * Represents the data items which correspond to the tag.
     */
    data: Array<any>;
}
/**
 * @hidden
 */
export interface TagListProps {
    dataItems: Array<TagData>;
    guid: string;
    focused?: TagData;
    tagRender?: any;
}
/**
 * @hidden
 */
export interface TagListMethods extends Vue {
    onTagDelete: (data: any, e: any) => void;
}
/**
 * @hidden
 */
export interface TagListAll extends TagListMethods {
}
/**
 * Represents the default `TagList` component.
 */
declare let TagList: ComponentOptions<Vue, DefaultData<TagListAll>, DefaultMethods<TagListAll>, {}, RecordPropsDefinition<TagListProps>>;
export { TagList };
