"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListItem = void 0; // @ts-ignore

var Vue = require("vue");

var allVue = Vue;
var gh = allVue.h;

var kendo_vue_common_1 = require("@progress/kendo-vue-common");

var utils_1 = require("./utils");
/**
 * Represents the default `ListItem` component.
 */


var ListItem = {
  name: 'list-item',
  props: {
    id: String,
    index: Number,
    dataItem: [Object, String, Number],
    textField: String,
    focused: Boolean,
    selected: Boolean,
    render: Object
  },
  // @ts-ignore
  setup: !gh ? undefined : function () {
    var v3 = !!gh;
    return {
      v3: v3
    };
  },
  methods: {
    handleClick: function handleClick(e) {
      this.$emit('itemclick', this.$props.index, e);
    }
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var selected = this.$props.selected;
    var defaultRendering = h("li", {
      id: this.$props.id,
      attrs: this.v3 ? undefined : {
        id: this.$props.id,
        role: "option",
        "aria-selected": selected
      },
      role: "option",
      "aria-selected": selected,
      "class": kendo_vue_common_1.classNames('k-item', {
        'k-state-selected': selected,
        'k-state-focused': this.$props.focused
      }),
      onClick: this.handleClick,
      on: this.v3 ? undefined : {
        "click": this.handleClick
      }
    }, [utils_1.getItemValue(this.$props.dataItem, this.$props.textField).toString()]);
    return kendo_vue_common_1.getTemplate.call(this, {
      h: h,
      template: this.$props.render,
      defaultRendering: defaultRendering,
      additionalProps: this.$props,
      additionalListeners: {
        click: this.handleClick
      }
    });
  }
};
exports.ListItem = ListItem;