import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface ListProps {
    id?: string;
    show?: boolean;
    dataItems: any[];
    value?: any;
    textField?: string;
    valueField?: string;
    optionsGuid?: string;
    listRef?: (element: HTMLUListElement) => void;
    wrapperCssClass?: string;
    wrapperStyle?: any;
    listStyle?: any;
    skip?: number;
    focusedIndex?: number;
    highlightSelected?: boolean;
    onClick?: (index: number, event: any) => void;
    itemRender?: any;
    noDataRender?: any;
}
/**
 * @hidden
 */
export interface ListMethods extends Vue {
    handleClick: (e: any) => void;
}
/**
 * @hidden
 */
export interface ListState {
    list: any;
    listRef: any;
    v3: boolean;
}
/**
 * @hidden
 */
export interface ListAll extends ListMethods, ListState {
    listRef: any;
}
/**
 * Represents the default `List` component.
 */
declare let List: ComponentOptions<Vue, DefaultData<{}>, DefaultMethods<ListMethods>, {}, RecordPropsDefinition<ListProps>>;
export { List };
