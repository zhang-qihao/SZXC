import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => MaskedTextBoxData);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { MaskingService } from './masking.service';
import { MaskedTextBoxProps } from './MaskedTextBoxProps';
import { FormComponentValidity } from '@progress/kendo-vue-common';
/**
 * @hidden
 */
interface MaskedTextBoxData {
    currentFocused?: boolean;
    currentValue?: string;
    inputValue?: string;
}
/**
 * @hidden
 */
interface MaskedTextBoxState {
    inputId: string;
    service: MaskingService;
    isPasted: boolean;
    currentSelection: [number | null, number | null];
    prevSelection: any;
    prevIncludeLiterals: any;
    prevMask: any;
    prevPrompt: any;
    prevPromptPlaceholder: any;
    prevRules: any;
    input: HTMLInputElement | null;
    inputRef: any;
    valueDuringOnChange?: string;
    hasMounted: boolean;
    prevCurrentFocused: any;
    element: HTMLInputElement | null;
    v3: boolean;
}
/**
 * @hidden
 */
export interface MaskedTextBoxMethods extends Vue {
    focus: (e: any) => void;
    computedValue: () => any;
    rawValue: () => string;
    validity: () => FormComponentValidity;
    pasteHandler: (event: any) => void;
    onChangeHandler: (event: any) => void;
    focusHandler: (event: any) => void;
    blurHandler: (event: any) => void;
    triggerOnChange: (maskedValue: string, event: any) => void;
    updateService: (extra?: any) => void;
    setValidity: () => void;
}
/**
 * @hidden
 */
export interface MaskedTextBoxComputed {
    computedRules: any;
    spanClassNames: any;
}
/**
 * @hidden
 */
export interface MaskedTextBoxAll extends MaskedTextBoxMethods, MaskedTextBoxState, MaskedTextBoxData, MaskedTextBoxComputed {
}
/**
 * Represents the default `MaskedTextBox` component.
 */
declare let MaskedTextBox: ComponentOptions<Vue, DefaultData<MaskedTextBoxData>, DefaultMethods<MaskedTextBoxAll>, MaskedTextBoxComputed, RecordPropsDefinition<MaskedTextBoxProps>>;
export { MaskedTextBox };
